{
	"id": "99abe18596b34fa72b0eb7043da2980c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SaleContract.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.22;\n\nimport {ERC20} from '@openzeppelin/contracts/token/ERC20/ERC20.sol';\n\ncontract SaleContract {\n    struct Listing {\n        address contractAddress;\n        uint256 price;\n        uint256 tokens;\n        address seller;\n        uint256 expiration;\n    }\n\n    mapping (uint256 => Listing) public listings;\n    uint256 public listingCounter;\n    address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b;\n    uint256 public constant COMMISSION_PERCENTAGE = 10;\n\n    function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) public {\n        require(price > 0, \"Price must be greater than zero\");\n        require(tokens > 0, \"Tokens must be greater than zero\");\n        require(duration > 0, \"Duration must be greater than zero\");\n        require(ERC20(contractAddress).allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\");\n        require(ERC20(contractAddress).transferFrom(msg.sender, address(this), tokens), \"Token transfer failed\");\n\n        listingCounter++;\n        listings[listingCounter] = Listing({\n            contractAddress: contractAddress,\n            price: price,\n            tokens: tokens,\n            seller: msg.sender,\n            expiration: block.timestamp + duration\n        });\n    }\n\n    function buyTokens(uint256 listingId, uint256 tokenAmount) public payable {\n        Listing storage listing = listings[listingId];\n        require(listing.tokens > 0, \"Listing does not exist\");\n        require(block.timestamp <= listing.expiration, \"Listing has expired\");\n        require(listing.tokens >= tokenAmount, \"Token amount is greater than tokens on sale\");\n        \n        uint256 totalPrice = listing.price * tokenAmount;\n        require(msg.value == totalPrice, \"Incorrect value sent\");\n\n        uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100;\n        uint256 sellerAmount = totalPrice - commission;\n\n        listing.tokens = listing.tokens - tokenAmount;\n        require(ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount), \"Token transfer failed\");\n        payable(COMMISSION_WALLET).transfer(commission);\n        payable(listing.seller).transfer(sellerAmount);\n    }\n\n    function buyTokensWithERC20(uint256 listingId, uint256 tokenAmount, address paymentToken, uint256 paymentAmount) public {\n        Listing storage listing = listings[listingId];\n        require(listing.tokens > 0, \"Listing does not exist\");\n        require(block.timestamp <= listing.expiration, \"Listing has expired\");\n        require(listing.tokens >= tokenAmount, \"Token amount is greater than tokens on sale\");\n        \n        uint256 totalPrice = listing.price * tokenAmount;\n        require(paymentAmount == totalPrice, \"Incorrect payment amount\");\n\n        uint256 commission = (paymentAmount * COMMISSION_PERCENTAGE) / 100;\n        uint256 sellerAmount = paymentAmount - commission;\n\n        require(ERC20(paymentToken).allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\");\n        require(ERC20(paymentToken).transferFrom(msg.sender, COMMISSION_WALLET, commission), \"Commission transfer failed\");\n        require(ERC20(paymentToken).transferFrom(msg.sender, listing.seller, sellerAmount), \"Payment token transfer failed\");\n\n        listing.tokens = listing.tokens - tokenAmount;\n        require(ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount), \"Token transfer failed\");\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SaleContract.sol": {
				"SaleContract": {
					"abi": [
						{
							"inputs": [],
							"name": "COMMISSION_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMISSION_WALLET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "paymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensWithERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SaleContract.sol\":135:3523  contract SaleContract {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SaleContract.sol\":135:3523  contract SaleContract {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7975ce28\n      gt\n      tag_9\n      jumpi\n      dup1\n      0x7975ce28\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7a82a87f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9ffae41b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_9:\n      dup1\n      0x17c73ff0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1bf1de9b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6c2c9c7d\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/SaleContract.sol\":408:494  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_10\n      jumpi\n      revert(0x00, 0x00)\n    tag_10:\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":500:550  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      revert(0x00, 0x00)\n    tag_15:\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":373:402  uint256 public listingCounter */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":1364:2277  function buyTokens(uint256 listingId, uint256 tokenAmount) public payable {... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/SaleContract.sol\":2283:3521  function buyTokensWithERC20(uint256 listingId, uint256 tokenAmount, address paymentToken, uint256 paymentAmount) public {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/SaleContract.sol\":557:1358  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/SaleContract.sol\":323:367  mapping (uint256 => Listing) public listings */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":408:494  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_12:\n        /* \"contracts/SaleContract.sol\":452:494  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      0xfcf8d2b098b3160654bbada1a8769483c71c288b\n        /* \"contracts/SaleContract.sol\":408:494  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":500:550  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_17:\n        /* \"contracts/SaleContract.sol\":548:550  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":500:550  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":373:402  uint256 public listingCounter */\n    tag_22:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":1364:2277  function buyTokens(uint256 listingId, uint256 tokenAmount) public payable {... */\n    tag_27:\n        /* \"contracts/SaleContract.sol\":1448:1471  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":1474:1482  listings */\n      0x00\n        /* \"contracts/SaleContract.sol\":1474:1493  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":1483:1492  listingId */\n      dup5\n        /* \"contracts/SaleContract.sol\":1474:1493  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":1448:1493  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":1528:1529  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1511:1518  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":1511:1525  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":1511:1529  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1503:1556  require(listing.tokens > 0, \"Listing does not exist\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/SaleContract.sol\":1593:1600  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":1593:1611  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":1574:1589  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":1574:1611  block.timestamp <= listing.expiration */\n      gt\n      iszero\n        /* \"contracts/SaleContract.sol\":1566:1635  require(block.timestamp <= listing.expiration, \"Listing has expired\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/SaleContract.sol\":1671:1682  tokenAmount */\n      dup2\n        /* \"contracts/SaleContract.sol\":1653:1660  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":1653:1667  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":1653:1682  listing.tokens >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":1645:1730  require(listing.tokens >= tokenAmount, \"Token amount is greater than tokens on sale\") */\n      tag_52\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_52:\n        /* \"contracts/SaleContract.sol\":1749:1767  uint256 totalPrice */\n      0x00\n        /* \"contracts/SaleContract.sol\":1786:1797  tokenAmount */\n      dup3\n        /* \"contracts/SaleContract.sol\":1770:1777  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":1770:1783  listing.price */\n      0x01\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":1770:1797  listing.price * tokenAmount */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/SaleContract.sol\":1749:1797  uint256 totalPrice = listing.price * tokenAmount */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":1828:1838  totalPrice */\n      dup1\n        /* \"contracts/SaleContract.sol\":1815:1824  msg.value */\n      callvalue\n        /* \"contracts/SaleContract.sol\":1815:1838  msg.value == totalPrice */\n      eq\n        /* \"contracts/SaleContract.sol\":1807:1863  require(msg.value == totalPrice, \"Incorrect value sent\") */\n      tag_57\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_58\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_57:\n        /* \"contracts/SaleContract.sol\":1874:1892  uint256 commission */\n      0x00\n        /* \"contracts/SaleContract.sol\":1934:1937  100 */\n      0x64\n        /* \"contracts/SaleContract.sol\":548:550  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":1896:1906  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":1896:1930  totalPrice * COMMISSION_PERCENTAGE */\n      tag_60\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_60:\n        /* \"contracts/SaleContract.sol\":1895:1937  (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"contracts/SaleContract.sol\":1874:1937  uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":1947:1967  uint256 sellerAmount */\n      0x00\n        /* \"contracts/SaleContract.sol\":1983:1993  commission */\n      dup2\n        /* \"contracts/SaleContract.sol\":1970:1980  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":1970:1993  totalPrice - commission */\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"contracts/SaleContract.sol\":1947:1993  uint256 sellerAmount = totalPrice - commission */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2038:2049  tokenAmount */\n      dup5\n        /* \"contracts/SaleContract.sol\":2021:2028  listing */\n      dup5\n        /* \"contracts/SaleContract.sol\":2021:2035  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2021:2049  listing.tokens - tokenAmount */\n      tag_65\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n        /* \"contracts/SaleContract.sol\":2004:2011  listing */\n      dup5\n        /* \"contracts/SaleContract.sol\":2004:2018  listing.tokens */\n      0x02\n      add\n        /* \"contracts/SaleContract.sol\":2004:2049  listing.tokens = listing.tokens - tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":2073:2080  listing */\n      dup4\n        /* \"contracts/SaleContract.sol\":2073:2096  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":2067:2106  ERC20(listing.contractAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SaleContract.sol\":2107:2117  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":2119:2130  tokenAmount */\n      dup8\n        /* \"contracts/SaleContract.sol\":2067:2131  ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_66\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/SaleContract.sol\":2059:2157  require(ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount), \"Token transfer failed\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/SaleContract.sol\":452:494  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      0xfcf8d2b098b3160654bbada1a8769483c71c288b\n        /* \"contracts/SaleContract.sol\":2167:2202  payable(COMMISSION_WALLET).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":2167:2214  payable(COMMISSION_WALLET).transfer(commission) */\n      0x08fc\n        /* \"contracts/SaleContract.sol\":2203:2213  commission */\n      dup4\n        /* \"contracts/SaleContract.sol\":2167:2214  payable(COMMISSION_WALLET).transfer(commission) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n        /* \"contracts/SaleContract.sol\":2232:2239  listing */\n      dup4\n        /* \"contracts/SaleContract.sol\":2232:2246  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":2224:2256  payable(listing.seller).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":2224:2270  payable(listing.seller).transfer(sellerAmount) */\n      0x08fc\n        /* \"contracts/SaleContract.sol\":2257:2269  sellerAmount */\n      dup3\n        /* \"contracts/SaleContract.sol\":2224:2270  payable(listing.seller).transfer(sellerAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n        /* \"contracts/SaleContract.sol\":1438:2277  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SaleContract.sol\":1364:2277  function buyTokens(uint256 listingId, uint256 tokenAmount) public payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":2283:3521  function buyTokensWithERC20(uint256 listingId, uint256 tokenAmount, address paymentToken, uint256 paymentAmount) public {... */\n    tag_32:\n        /* \"contracts/SaleContract.sol\":2413:2436  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":2439:2447  listings */\n      0x00\n        /* \"contracts/SaleContract.sol\":2439:2458  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":2448:2457  listingId */\n      dup7\n        /* \"contracts/SaleContract.sol\":2439:2458  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":2413:2458  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2493:2494  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":2476:2483  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2476:2490  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2476:2494  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":2468:2521  require(listing.tokens > 0, \"Listing does not exist\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_48\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/SaleContract.sol\":2558:2565  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":2558:2576  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2539:2554  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":2539:2576  block.timestamp <= listing.expiration */\n      gt\n      iszero\n        /* \"contracts/SaleContract.sol\":2531:2600  require(block.timestamp <= listing.expiration, \"Listing has expired\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_83\n      swap1\n      tag_51\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"contracts/SaleContract.sol\":2636:2647  tokenAmount */\n      dup4\n        /* \"contracts/SaleContract.sol\":2618:2625  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2618:2632  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2618:2647  listing.tokens >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2610:2695  require(listing.tokens >= tokenAmount, \"Token amount is greater than tokens on sale\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap1\n      tag_54\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/SaleContract.sol\":2714:2732  uint256 totalPrice */\n      0x00\n        /* \"contracts/SaleContract.sol\":2751:2762  tokenAmount */\n      dup5\n        /* \"contracts/SaleContract.sol\":2735:2742  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":2735:2748  listing.price */\n      0x01\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2735:2762  listing.price * tokenAmount */\n      tag_86\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_86:\n        /* \"contracts/SaleContract.sol\":2714:2762  uint256 totalPrice = listing.price * tokenAmount */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2797:2807  totalPrice */\n      dup1\n        /* \"contracts/SaleContract.sol\":2780:2793  paymentAmount */\n      dup4\n        /* \"contracts/SaleContract.sol\":2780:2807  paymentAmount == totalPrice */\n      eq\n        /* \"contracts/SaleContract.sol\":2772:2836  require(paymentAmount == totalPrice, \"Incorrect payment amount\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/SaleContract.sol\":2847:2865  uint256 commission */\n      0x00\n        /* \"contracts/SaleContract.sol\":2910:2913  100 */\n      0x64\n        /* \"contracts/SaleContract.sol\":548:550  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":2869:2882  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2869:2906  paymentAmount * COMMISSION_PERCENTAGE */\n      tag_90\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_90:\n        /* \"contracts/SaleContract.sol\":2868:2913  (paymentAmount * COMMISSION_PERCENTAGE) / 100 */\n      tag_91\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_91:\n        /* \"contracts/SaleContract.sol\":2847:2913  uint256 commission = (paymentAmount * COMMISSION_PERCENTAGE) / 100 */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2923:2943  uint256 sellerAmount */\n      0x00\n        /* \"contracts/SaleContract.sol\":2962:2972  commission */\n      dup2\n        /* \"contracts/SaleContract.sol\":2946:2959  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2946:2972  paymentAmount - commission */\n      tag_92\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_92:\n        /* \"contracts/SaleContract.sol\":2923:2972  uint256 sellerAmount = paymentAmount - commission */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3051:3064  paymentAmount */\n      dup5\n        /* \"contracts/SaleContract.sol\":2997:3009  paymentToken */\n      dup7\n        /* \"contracts/SaleContract.sol\":2991:3020  ERC20(paymentToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":3021:3031  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3041:3045  this */\n      address\n        /* \"contracts/SaleContract.sol\":2991:3047  ERC20(paymentToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"contracts/SaleContract.sol\":2991:3064  ERC20(paymentToken).allowance(msg.sender, address(this)) >= paymentAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2983:3100  require(ERC20(paymentToken).allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/SaleContract.sol\":3124:3136  paymentToken */\n      dup6\n        /* \"contracts/SaleContract.sol\":3118:3150  ERC20(paymentToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SaleContract.sol\":3151:3161  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":452:494  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      0xfcf8d2b098b3160654bbada1a8769483c71c288b\n        /* \"contracts/SaleContract.sol\":3182:3192  commission */\n      dup6\n        /* \"contracts/SaleContract.sol\":3118:3193  ERC20(paymentToken).transferFrom(msg.sender, COMMISSION_WALLET, commission) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_106:\n        /* \"contracts/SaleContract.sol\":3110:3224  require(ERC20(paymentToken).transferFrom(msg.sender, COMMISSION_WALLET, commission), \"Commission transfer failed\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/SaleContract.sol\":3248:3260  paymentToken */\n      dup6\n        /* \"contracts/SaleContract.sol\":3242:3274  ERC20(paymentToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SaleContract.sol\":3275:3285  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3287:3294  listing */\n      dup7\n        /* \"contracts/SaleContract.sol\":3287:3301  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3303:3315  sellerAmount */\n      dup5\n        /* \"contracts/SaleContract.sol\":3242:3316  ERC20(paymentToken).transferFrom(msg.sender, listing.seller, sellerAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_110:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_113:\n        /* \"contracts/SaleContract.sol\":3234:3350  require(ERC20(paymentToken).transferFrom(msg.sender, listing.seller, sellerAmount), \"Payment token transfer failed\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/SaleContract.sol\":3395:3406  tokenAmount */\n      dup7\n        /* \"contracts/SaleContract.sol\":3378:3385  listing */\n      dup5\n        /* \"contracts/SaleContract.sol\":3378:3392  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3378:3406  listing.tokens - tokenAmount */\n      tag_117\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_117:\n        /* \"contracts/SaleContract.sol\":3361:3368  listing */\n      dup5\n        /* \"contracts/SaleContract.sol\":3361:3375  listing.tokens */\n      0x02\n      add\n        /* \"contracts/SaleContract.sol\":3361:3406  listing.tokens = listing.tokens - tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3430:3437  listing */\n      dup4\n        /* \"contracts/SaleContract.sol\":3430:3453  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3424:3463  ERC20(listing.contractAddress).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/SaleContract.sol\":3464:3474  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3476:3487  tokenAmount */\n      dup10\n        /* \"contracts/SaleContract.sol\":3424:3488  ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_118:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_121:\n        /* \"contracts/SaleContract.sol\":3416:3514  require(ERC20(listing.contractAddress).transfer(msg.sender, tokenAmount), \"Token transfer failed\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_74\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/SaleContract.sol\":2403:3521  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SaleContract.sol\":2283:3521  function buyTokensWithERC20(uint256 listingId, uint256 tokenAmount, address paymentToken, uint256 paymentAmount) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":557:1358  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) public {... */\n    tag_37:\n        /* \"contracts/SaleContract.sol\":684:685  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":676:681  price */\n      dup5\n        /* \"contracts/SaleContract.sol\":676:685  price > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":668:721  require(price > 0, \"Price must be greater than zero\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/SaleContract.sol\":748:749  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":739:745  tokens */\n      dup3\n        /* \"contracts/SaleContract.sol\":739:749  tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":731:786  require(tokens > 0, \"Tokens must be greater than zero\") */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/SaleContract.sol\":815:816  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":804:812  duration */\n      dup2\n        /* \"contracts/SaleContract.sol\":804:816  duration > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":796:855  require(duration > 0, \"Duration must be greater than zero\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \"contracts/SaleContract.sol\":936:942  tokens */\n      dup2\n        /* \"contracts/SaleContract.sol\":879:894  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":873:905  ERC20(contractAddress).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":906:916  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":926:930  this */\n      address\n        /* \"contracts/SaleContract.sol\":873:932  ERC20(contractAddress).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap3\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_137:\n        /* \"contracts/SaleContract.sol\":873:942  ERC20(contractAddress).allowance(msg.sender, address(this)) >= tokens */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":865:970  require(ERC20(contractAddress).allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/SaleContract.sol\":994:1009  contractAddress */\n      dup3\n        /* \"contracts/SaleContract.sol\":988:1023  ERC20(contractAddress).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/SaleContract.sol\":1024:1034  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1044:1048  this */\n      address\n        /* \"contracts/SaleContract.sol\":1051:1057  tokens */\n      dup6\n        /* \"contracts/SaleContract.sol\":988:1058  ERC20(contractAddress).transferFrom(msg.sender, address(this), tokens) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_143\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_144:\n        /* \"contracts/SaleContract.sol\":980:1084  require(ERC20(contractAddress).transferFrom(msg.sender, address(this), tokens), \"Token transfer failed\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_74\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/SaleContract.sol\":1095:1109  listingCounter */\n      0x01\n      0x00\n        /* \"contracts/SaleContract.sol\":1095:1111  listingCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SaleContract.sol\":1187:1202  contractAddress */\n      dup5\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1223:1228  price */\n      dup6\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1250:1256  tokens */\n      dup4\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1278:1288  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1332:1340  duration */\n      dup3\n        /* \"contracts/SaleContract.sol\":1314:1329  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":1314:1340  block.timestamp + duration */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"contracts/SaleContract.sol\":1148:1351  Listing({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SaleContract.sol\":1121:1129  listings */\n      0x00\n        /* \"contracts/SaleContract.sol\":1121:1145  listings[listingCounter] */\n      0x00\n        /* \"contracts/SaleContract.sol\":1130:1144  listingCounter */\n      sload(0x01)\n        /* \"contracts/SaleContract.sol\":1121:1145  listings[listingCounter] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":1121:1351  listings[listingCounter] = Listing({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SaleContract.sol\":557:1358  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":323:367  mapping (uint256 => Listing) public listings */\n    tag_42:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_151:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_152:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_199\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_151\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_153:\n        /* \"#utility.yul\":328:352   */\n      tag_201\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_152\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_203\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_153\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_154:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_155:\n        /* \"#utility.yul\":763:787   */\n      tag_206\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_154\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_19:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_208\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_155\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_157:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_159:\n        /* \"#utility.yul\":1428:1452   */\n      tag_213\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_154\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_214:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_160:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_216\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_159\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:2102   */\n    tag_26:\n        /* \"#utility.yul\":1696:1702   */\n      0x00\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1753:1755   */\n      0x40\n        /* \"#utility.yul\":1741:1750   */\n      dup4\n        /* \"#utility.yul\":1732:1739   */\n      dup6\n        /* \"#utility.yul\":1728:1751   */\n      sub\n        /* \"#utility.yul\":1724:1756   */\n      slt\n        /* \"#utility.yul\":1721:1840   */\n      iszero\n      tag_218\n      jumpi\n        /* \"#utility.yul\":1759:1838   */\n      tag_219\n      tag_157\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":1721:1840   */\n    tag_218:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1904:1957   */\n      tag_220\n        /* \"#utility.yul\":1949:1956   */\n      dup6\n        /* \"#utility.yul\":1940:1946   */\n      dup3\n        /* \"#utility.yul\":1929:1938   */\n      dup7\n        /* \"#utility.yul\":1925:1947   */\n      add\n        /* \"#utility.yul\":1904:1957   */\n      tag_160\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":1894:1957   */\n      swap3\n      pop\n        /* \"#utility.yul\":1850:1967   */\n      pop\n        /* \"#utility.yul\":2006:2008   */\n      0x20\n        /* \"#utility.yul\":2032:2085   */\n      tag_221\n        /* \"#utility.yul\":2077:2084   */\n      dup6\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2057:2066   */\n      dup7\n        /* \"#utility.yul\":2053:2075   */\n      add\n        /* \"#utility.yul\":2032:2085   */\n      tag_160\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2022:2085   */\n      swap2\n      pop\n        /* \"#utility.yul\":1977:2095   */\n      pop\n        /* \"#utility.yul\":1628:2102   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_161:\n        /* \"#utility.yul\":2181:2205   */\n      tag_223\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_152\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_224\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      0x00\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_224:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_162:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_226\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_161\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:3146   */\n    tag_31:\n        /* \"#utility.yul\":2467:2473   */\n      0x00\n        /* \"#utility.yul\":2475:2481   */\n      0x00\n        /* \"#utility.yul\":2483:2489   */\n      0x00\n        /* \"#utility.yul\":2491:2497   */\n      0x00\n        /* \"#utility.yul\":2540:2543   */\n      0x80\n        /* \"#utility.yul\":2528:2537   */\n      dup6\n        /* \"#utility.yul\":2519:2526   */\n      dup8\n        /* \"#utility.yul\":2515:2538   */\n      sub\n        /* \"#utility.yul\":2511:2544   */\n      slt\n        /* \"#utility.yul\":2508:2628   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":2547:2626   */\n      tag_229\n      tag_157\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":2508:2628   */\n    tag_228:\n        /* \"#utility.yul\":2667:2668   */\n      0x00\n        /* \"#utility.yul\":2692:2745   */\n      tag_230\n        /* \"#utility.yul\":2737:2744   */\n      dup8\n        /* \"#utility.yul\":2728:2734   */\n      dup3\n        /* \"#utility.yul\":2717:2726   */\n      dup9\n        /* \"#utility.yul\":2713:2735   */\n      add\n        /* \"#utility.yul\":2692:2745   */\n      tag_160\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":2682:2745   */\n      swap5\n      pop\n        /* \"#utility.yul\":2638:2755   */\n      pop\n        /* \"#utility.yul\":2794:2796   */\n      0x20\n        /* \"#utility.yul\":2820:2873   */\n      tag_231\n        /* \"#utility.yul\":2865:2872   */\n      dup8\n        /* \"#utility.yul\":2856:2862   */\n      dup3\n        /* \"#utility.yul\":2845:2854   */\n      dup9\n        /* \"#utility.yul\":2841:2863   */\n      add\n        /* \"#utility.yul\":2820:2873   */\n      tag_160\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":2810:2873   */\n      swap4\n      pop\n        /* \"#utility.yul\":2765:2883   */\n      pop\n        /* \"#utility.yul\":2922:2924   */\n      0x40\n        /* \"#utility.yul\":2948:3001   */\n      tag_232\n        /* \"#utility.yul\":2993:3000   */\n      dup8\n        /* \"#utility.yul\":2984:2990   */\n      dup3\n        /* \"#utility.yul\":2973:2982   */\n      dup9\n        /* \"#utility.yul\":2969:2991   */\n      add\n        /* \"#utility.yul\":2948:3001   */\n      tag_162\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":2938:3001   */\n      swap3\n      pop\n        /* \"#utility.yul\":2893:3011   */\n      pop\n        /* \"#utility.yul\":3050:3052   */\n      0x60\n        /* \"#utility.yul\":3076:3129   */\n      tag_233\n        /* \"#utility.yul\":3121:3128   */\n      dup8\n        /* \"#utility.yul\":3112:3118   */\n      dup3\n        /* \"#utility.yul\":3101:3110   */\n      dup9\n        /* \"#utility.yul\":3097:3119   */\n      add\n        /* \"#utility.yul\":3076:3129   */\n      tag_160\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":3066:3129   */\n      swap2\n      pop\n        /* \"#utility.yul\":3021:3139   */\n      pop\n        /* \"#utility.yul\":2381:3146   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3152:3917   */\n    tag_36:\n        /* \"#utility.yul\":3238:3244   */\n      0x00\n        /* \"#utility.yul\":3246:3252   */\n      0x00\n        /* \"#utility.yul\":3254:3260   */\n      0x00\n        /* \"#utility.yul\":3262:3268   */\n      0x00\n        /* \"#utility.yul\":3311:3314   */\n      0x80\n        /* \"#utility.yul\":3299:3308   */\n      dup6\n        /* \"#utility.yul\":3290:3297   */\n      dup8\n        /* \"#utility.yul\":3286:3309   */\n      sub\n        /* \"#utility.yul\":3282:3315   */\n      slt\n        /* \"#utility.yul\":3279:3399   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":3318:3397   */\n      tag_236\n      tag_157\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":3279:3399   */\n    tag_235:\n        /* \"#utility.yul\":3438:3439   */\n      0x00\n        /* \"#utility.yul\":3463:3516   */\n      tag_237\n        /* \"#utility.yul\":3508:3515   */\n      dup8\n        /* \"#utility.yul\":3499:3505   */\n      dup3\n        /* \"#utility.yul\":3488:3497   */\n      dup9\n        /* \"#utility.yul\":3484:3506   */\n      add\n        /* \"#utility.yul\":3463:3516   */\n      tag_160\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":3453:3516   */\n      swap5\n      pop\n        /* \"#utility.yul\":3409:3526   */\n      pop\n        /* \"#utility.yul\":3565:3567   */\n      0x20\n        /* \"#utility.yul\":3591:3644   */\n      tag_238\n        /* \"#utility.yul\":3636:3643   */\n      dup8\n        /* \"#utility.yul\":3627:3633   */\n      dup3\n        /* \"#utility.yul\":3616:3625   */\n      dup9\n        /* \"#utility.yul\":3612:3634   */\n      add\n        /* \"#utility.yul\":3591:3644   */\n      tag_162\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":3581:3644   */\n      swap4\n      pop\n        /* \"#utility.yul\":3536:3654   */\n      pop\n        /* \"#utility.yul\":3693:3695   */\n      0x40\n        /* \"#utility.yul\":3719:3772   */\n      tag_239\n        /* \"#utility.yul\":3764:3771   */\n      dup8\n        /* \"#utility.yul\":3755:3761   */\n      dup3\n        /* \"#utility.yul\":3744:3753   */\n      dup9\n        /* \"#utility.yul\":3740:3762   */\n      add\n        /* \"#utility.yul\":3719:3772   */\n      tag_160\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":3709:3772   */\n      swap3\n      pop\n        /* \"#utility.yul\":3664:3782   */\n      pop\n        /* \"#utility.yul\":3821:3823   */\n      0x60\n        /* \"#utility.yul\":3847:3900   */\n      tag_240\n        /* \"#utility.yul\":3892:3899   */\n      dup8\n        /* \"#utility.yul\":3883:3889   */\n      dup3\n        /* \"#utility.yul\":3872:3881   */\n      dup9\n        /* \"#utility.yul\":3868:3890   */\n      add\n        /* \"#utility.yul\":3847:3900   */\n      tag_160\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":3837:3900   */\n      swap2\n      pop\n        /* \"#utility.yul\":3792:3910   */\n      pop\n        /* \"#utility.yul\":3152:3917   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3923:4252   */\n    tag_41:\n        /* \"#utility.yul\":3982:3988   */\n      0x00\n        /* \"#utility.yul\":4031:4033   */\n      0x20\n        /* \"#utility.yul\":4019:4028   */\n      dup3\n        /* \"#utility.yul\":4010:4017   */\n      dup5\n        /* \"#utility.yul\":4006:4029   */\n      sub\n        /* \"#utility.yul\":4002:4034   */\n      slt\n        /* \"#utility.yul\":3999:4118   */\n      iszero\n      tag_242\n      jumpi\n        /* \"#utility.yul\":4037:4116   */\n      tag_243\n      tag_157\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":3999:4118   */\n    tag_242:\n        /* \"#utility.yul\":4157:4158   */\n      0x00\n        /* \"#utility.yul\":4182:4235   */\n      tag_244\n        /* \"#utility.yul\":4227:4234   */\n      dup5\n        /* \"#utility.yul\":4218:4224   */\n      dup3\n        /* \"#utility.yul\":4207:4216   */\n      dup6\n        /* \"#utility.yul\":4203:4225   */\n      add\n        /* \"#utility.yul\":4182:4235   */\n      tag_160\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":4172:4235   */\n      swap2\n      pop\n        /* \"#utility.yul\":4128:4245   */\n      pop\n        /* \"#utility.yul\":3923:4252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4258:4922   */\n    tag_44:\n        /* \"#utility.yul\":4463:4467   */\n      0x00\n        /* \"#utility.yul\":4501:4504   */\n      0xa0\n        /* \"#utility.yul\":4490:4499   */\n      dup3\n        /* \"#utility.yul\":4486:4505   */\n      add\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4515:4586   */\n      tag_246\n        /* \"#utility.yul\":4583:4584   */\n      0x00\n        /* \"#utility.yul\":4572:4581   */\n      dup4\n        /* \"#utility.yul\":4568:4585   */\n      add\n        /* \"#utility.yul\":4559:4565   */\n      dup9\n        /* \"#utility.yul\":4515:4586   */\n      tag_153\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":4596:4668   */\n      tag_247\n        /* \"#utility.yul\":4664:4666   */\n      0x20\n        /* \"#utility.yul\":4653:4662   */\n      dup4\n        /* \"#utility.yul\":4649:4667   */\n      add\n        /* \"#utility.yul\":4640:4646   */\n      dup8\n        /* \"#utility.yul\":4596:4668   */\n      tag_155\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":4678:4750   */\n      tag_248\n        /* \"#utility.yul\":4746:4748   */\n      0x40\n        /* \"#utility.yul\":4735:4744   */\n      dup4\n        /* \"#utility.yul\":4731:4749   */\n      add\n        /* \"#utility.yul\":4722:4728   */\n      dup7\n        /* \"#utility.yul\":4678:4750   */\n      tag_155\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":4760:4832   */\n      tag_249\n        /* \"#utility.yul\":4828:4830   */\n      0x60\n        /* \"#utility.yul\":4817:4826   */\n      dup4\n        /* \"#utility.yul\":4813:4831   */\n      add\n        /* \"#utility.yul\":4804:4810   */\n      dup6\n        /* \"#utility.yul\":4760:4832   */\n      tag_153\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":4842:4915   */\n      tag_250\n        /* \"#utility.yul\":4910:4913   */\n      0x80\n        /* \"#utility.yul\":4899:4908   */\n      dup4\n        /* \"#utility.yul\":4895:4914   */\n      add\n        /* \"#utility.yul\":4886:4892   */\n      dup5\n        /* \"#utility.yul\":4842:4915   */\n      tag_155\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":4258:4922   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4928:5097   */\n    tag_163:\n        /* \"#utility.yul\":5012:5023   */\n      0x00\n        /* \"#utility.yul\":5046:5052   */\n      dup3\n        /* \"#utility.yul\":5041:5044   */\n      dup3\n        /* \"#utility.yul\":5034:5053   */\n      mstore\n        /* \"#utility.yul\":5086:5090   */\n      0x20\n        /* \"#utility.yul\":5081:5084   */\n      dup3\n        /* \"#utility.yul\":5077:5091   */\n      add\n        /* \"#utility.yul\":5062:5091   */\n      swap1\n      pop\n        /* \"#utility.yul\":4928:5097   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5103:5275   */\n    tag_164:\n        /* \"#utility.yul\":5243:5267   */\n      0x4c697374696e6720646f6573206e6f7420657869737400000000000000000000\n        /* \"#utility.yul\":5239:5240   */\n      0x00\n        /* \"#utility.yul\":5231:5237   */\n      dup3\n        /* \"#utility.yul\":5227:5241   */\n      add\n        /* \"#utility.yul\":5220:5268   */\n      mstore\n        /* \"#utility.yul\":5103:5275   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5281:5647   */\n    tag_165:\n        /* \"#utility.yul\":5423:5426   */\n      0x00\n        /* \"#utility.yul\":5444:5511   */\n      tag_254\n        /* \"#utility.yul\":5508:5510   */\n      0x16\n        /* \"#utility.yul\":5503:5506   */\n      dup4\n        /* \"#utility.yul\":5444:5511   */\n      tag_163\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":5437:5511   */\n      swap2\n      pop\n        /* \"#utility.yul\":5520:5613   */\n      tag_255\n        /* \"#utility.yul\":5609:5612   */\n      dup3\n        /* \"#utility.yul\":5520:5613   */\n      tag_164\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":5638:5640   */\n      0x20\n        /* \"#utility.yul\":5633:5636   */\n      dup3\n        /* \"#utility.yul\":5629:5641   */\n      add\n        /* \"#utility.yul\":5622:5641   */\n      swap1\n      pop\n        /* \"#utility.yul\":5281:5647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5653:6072   */\n    tag_48:\n        /* \"#utility.yul\":5819:5823   */\n      0x00\n        /* \"#utility.yul\":5857:5859   */\n      0x20\n        /* \"#utility.yul\":5846:5855   */\n      dup3\n        /* \"#utility.yul\":5842:5860   */\n      add\n        /* \"#utility.yul\":5834:5860   */\n      swap1\n      pop\n        /* \"#utility.yul\":5906:5915   */\n      dup2\n        /* \"#utility.yul\":5900:5904   */\n      dup2\n        /* \"#utility.yul\":5896:5916   */\n      sub\n        /* \"#utility.yul\":5892:5893   */\n      0x00\n        /* \"#utility.yul\":5881:5890   */\n      dup4\n        /* \"#utility.yul\":5877:5894   */\n      add\n        /* \"#utility.yul\":5870:5917   */\n      mstore\n        /* \"#utility.yul\":5934:6065   */\n      tag_257\n        /* \"#utility.yul\":6060:6064   */\n      dup2\n        /* \"#utility.yul\":5934:6065   */\n      tag_165\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":5926:6065   */\n      swap1\n      pop\n        /* \"#utility.yul\":5653:6072   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6078:6247   */\n    tag_166:\n        /* \"#utility.yul\":6218:6239   */\n      0x4c697374696e6720686173206578706972656400000000000000000000000000\n        /* \"#utility.yul\":6214:6215   */\n      0x00\n        /* \"#utility.yul\":6206:6212   */\n      dup3\n        /* \"#utility.yul\":6202:6216   */\n      add\n        /* \"#utility.yul\":6195:6240   */\n      mstore\n        /* \"#utility.yul\":6078:6247   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6253:6619   */\n    tag_167:\n        /* \"#utility.yul\":6395:6398   */\n      0x00\n        /* \"#utility.yul\":6416:6483   */\n      tag_260\n        /* \"#utility.yul\":6480:6482   */\n      0x13\n        /* \"#utility.yul\":6475:6478   */\n      dup4\n        /* \"#utility.yul\":6416:6483   */\n      tag_163\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":6409:6483   */\n      swap2\n      pop\n        /* \"#utility.yul\":6492:6585   */\n      tag_261\n        /* \"#utility.yul\":6581:6584   */\n      dup3\n        /* \"#utility.yul\":6492:6585   */\n      tag_166\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":6610:6612   */\n      0x20\n        /* \"#utility.yul\":6605:6608   */\n      dup3\n        /* \"#utility.yul\":6601:6613   */\n      add\n        /* \"#utility.yul\":6594:6613   */\n      swap1\n      pop\n        /* \"#utility.yul\":6253:6619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6625:7044   */\n    tag_51:\n        /* \"#utility.yul\":6791:6795   */\n      0x00\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6818:6827   */\n      dup3\n        /* \"#utility.yul\":6814:6832   */\n      add\n        /* \"#utility.yul\":6806:6832   */\n      swap1\n      pop\n        /* \"#utility.yul\":6878:6887   */\n      dup2\n        /* \"#utility.yul\":6872:6876   */\n      dup2\n        /* \"#utility.yul\":6868:6888   */\n      sub\n        /* \"#utility.yul\":6864:6865   */\n      0x00\n        /* \"#utility.yul\":6853:6862   */\n      dup4\n        /* \"#utility.yul\":6849:6866   */\n      add\n        /* \"#utility.yul\":6842:6889   */\n      mstore\n        /* \"#utility.yul\":6906:7037   */\n      tag_263\n        /* \"#utility.yul\":7032:7036   */\n      dup2\n        /* \"#utility.yul\":6906:7037   */\n      tag_167\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":6898:7037   */\n      swap1\n      pop\n        /* \"#utility.yul\":6625:7044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7050:7280   */\n    tag_168:\n        /* \"#utility.yul\":7190:7224   */\n      0x546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b\n        /* \"#utility.yul\":7186:7187   */\n      0x00\n        /* \"#utility.yul\":7178:7184   */\n      dup3\n        /* \"#utility.yul\":7174:7188   */\n      add\n        /* \"#utility.yul\":7167:7225   */\n      mstore\n        /* \"#utility.yul\":7259:7272   */\n      0x656e73206f6e2073616c65000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7254:7256   */\n      0x20\n        /* \"#utility.yul\":7246:7252   */\n      dup3\n        /* \"#utility.yul\":7242:7257   */\n      add\n        /* \"#utility.yul\":7235:7273   */\n      mstore\n        /* \"#utility.yul\":7050:7280   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7286:7652   */\n    tag_169:\n        /* \"#utility.yul\":7428:7431   */\n      0x00\n        /* \"#utility.yul\":7449:7516   */\n      tag_266\n        /* \"#utility.yul\":7513:7515   */\n      0x2b\n        /* \"#utility.yul\":7508:7511   */\n      dup4\n        /* \"#utility.yul\":7449:7516   */\n      tag_163\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":7442:7516   */\n      swap2\n      pop\n        /* \"#utility.yul\":7525:7618   */\n      tag_267\n        /* \"#utility.yul\":7614:7617   */\n      dup3\n        /* \"#utility.yul\":7525:7618   */\n      tag_168\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":7643:7645   */\n      0x40\n        /* \"#utility.yul\":7638:7641   */\n      dup3\n        /* \"#utility.yul\":7634:7646   */\n      add\n        /* \"#utility.yul\":7627:7646   */\n      swap1\n      pop\n        /* \"#utility.yul\":7286:7652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7658:8077   */\n    tag_54:\n        /* \"#utility.yul\":7824:7828   */\n      0x00\n        /* \"#utility.yul\":7862:7864   */\n      0x20\n        /* \"#utility.yul\":7851:7860   */\n      dup3\n        /* \"#utility.yul\":7847:7865   */\n      add\n        /* \"#utility.yul\":7839:7865   */\n      swap1\n      pop\n        /* \"#utility.yul\":7911:7920   */\n      dup2\n        /* \"#utility.yul\":7905:7909   */\n      dup2\n        /* \"#utility.yul\":7901:7921   */\n      sub\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7886:7895   */\n      dup4\n        /* \"#utility.yul\":7882:7899   */\n      add\n        /* \"#utility.yul\":7875:7922   */\n      mstore\n        /* \"#utility.yul\":7939:8070   */\n      tag_269\n        /* \"#utility.yul\":8065:8069   */\n      dup2\n        /* \"#utility.yul\":7939:8070   */\n      tag_169\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":7931:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:8077   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8083:8263   */\n    tag_170:\n        /* \"#utility.yul\":8131:8208   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8128:8129   */\n      0x00\n        /* \"#utility.yul\":8121:8209   */\n      mstore\n        /* \"#utility.yul\":8228:8232   */\n      0x11\n        /* \"#utility.yul\":8225:8226   */\n      0x04\n        /* \"#utility.yul\":8218:8233   */\n      mstore\n        /* \"#utility.yul\":8252:8256   */\n      0x24\n        /* \"#utility.yul\":8249:8250   */\n      0x00\n        /* \"#utility.yul\":8242:8257   */\n      revert\n        /* \"#utility.yul\":8269:8679   */\n    tag_56:\n        /* \"#utility.yul\":8309:8316   */\n      0x00\n        /* \"#utility.yul\":8332:8352   */\n      tag_272\n        /* \"#utility.yul\":8350:8351   */\n      dup3\n        /* \"#utility.yul\":8332:8352   */\n      tag_154\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":8327:8352   */\n      swap2\n      pop\n        /* \"#utility.yul\":8366:8386   */\n      tag_273\n        /* \"#utility.yul\":8384:8385   */\n      dup4\n        /* \"#utility.yul\":8366:8386   */\n      tag_154\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8361:8386   */\n      swap3\n      pop\n        /* \"#utility.yul\":8421:8422   */\n      dup3\n        /* \"#utility.yul\":8418:8419   */\n      dup3\n        /* \"#utility.yul\":8414:8423   */\n      mul\n        /* \"#utility.yul\":8443:8473   */\n      tag_274\n        /* \"#utility.yul\":8461:8472   */\n      dup2\n        /* \"#utility.yul\":8443:8473   */\n      tag_154\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":8432:8473   */\n      swap2\n      pop\n        /* \"#utility.yul\":8622:8623   */\n      dup3\n        /* \"#utility.yul\":8613:8620   */\n      dup3\n        /* \"#utility.yul\":8609:8624   */\n      div\n        /* \"#utility.yul\":8606:8607   */\n      dup5\n        /* \"#utility.yul\":8603:8625   */\n      eq\n        /* \"#utility.yul\":8583:8584   */\n      dup4\n        /* \"#utility.yul\":8576:8585   */\n      iszero\n        /* \"#utility.yul\":8556:8639   */\n      or\n        /* \"#utility.yul\":8533:8672   */\n      tag_275\n      jumpi\n        /* \"#utility.yul\":8652:8670   */\n      tag_276\n      tag_170\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":8533:8672   */\n    tag_275:\n        /* \"#utility.yul\":8317:8679   */\n      pop\n        /* \"#utility.yul\":8269:8679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8685:8855   */\n    tag_171:\n        /* \"#utility.yul\":8825:8847   */\n      0x496e636f72726563742076616c75652073656e74000000000000000000000000\n        /* \"#utility.yul\":8821:8822   */\n      0x00\n        /* \"#utility.yul\":8813:8819   */\n      dup3\n        /* \"#utility.yul\":8809:8823   */\n      add\n        /* \"#utility.yul\":8802:8848   */\n      mstore\n        /* \"#utility.yul\":8685:8855   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8861:9227   */\n    tag_172:\n        /* \"#utility.yul\":9003:9006   */\n      0x00\n        /* \"#utility.yul\":9024:9091   */\n      tag_279\n        /* \"#utility.yul\":9088:9090   */\n      0x14\n        /* \"#utility.yul\":9083:9086   */\n      dup4\n        /* \"#utility.yul\":9024:9091   */\n      tag_163\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9017:9091   */\n      swap2\n      pop\n        /* \"#utility.yul\":9100:9193   */\n      tag_280\n        /* \"#utility.yul\":9189:9192   */\n      dup3\n        /* \"#utility.yul\":9100:9193   */\n      tag_171\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9218:9220   */\n      0x20\n        /* \"#utility.yul\":9213:9216   */\n      dup3\n        /* \"#utility.yul\":9209:9221   */\n      add\n        /* \"#utility.yul\":9202:9221   */\n      swap1\n      pop\n        /* \"#utility.yul\":8861:9227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9233:9652   */\n    tag_59:\n        /* \"#utility.yul\":9399:9403   */\n      0x00\n        /* \"#utility.yul\":9437:9439   */\n      0x20\n        /* \"#utility.yul\":9426:9435   */\n      dup3\n        /* \"#utility.yul\":9422:9440   */\n      add\n        /* \"#utility.yul\":9414:9440   */\n      swap1\n      pop\n        /* \"#utility.yul\":9486:9495   */\n      dup2\n        /* \"#utility.yul\":9480:9484   */\n      dup2\n        /* \"#utility.yul\":9476:9496   */\n      sub\n        /* \"#utility.yul\":9472:9473   */\n      0x00\n        /* \"#utility.yul\":9461:9470   */\n      dup4\n        /* \"#utility.yul\":9457:9474   */\n      add\n        /* \"#utility.yul\":9450:9497   */\n      mstore\n        /* \"#utility.yul\":9514:9645   */\n      tag_282\n        /* \"#utility.yul\":9640:9644   */\n      dup2\n        /* \"#utility.yul\":9514:9645   */\n      tag_172\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":9506:9645   */\n      swap1\n      pop\n        /* \"#utility.yul\":9233:9652   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9658:9838   */\n    tag_173:\n        /* \"#utility.yul\":9706:9783   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9703:9704   */\n      0x00\n        /* \"#utility.yul\":9696:9784   */\n      mstore\n        /* \"#utility.yul\":9803:9807   */\n      0x12\n        /* \"#utility.yul\":9800:9801   */\n      0x04\n        /* \"#utility.yul\":9793:9808   */\n      mstore\n        /* \"#utility.yul\":9827:9831   */\n      0x24\n        /* \"#utility.yul\":9824:9825   */\n      0x00\n        /* \"#utility.yul\":9817:9832   */\n      revert\n        /* \"#utility.yul\":9844:10029   */\n    tag_62:\n        /* \"#utility.yul\":9884:9885   */\n      0x00\n        /* \"#utility.yul\":9901:9921   */\n      tag_285\n        /* \"#utility.yul\":9919:9920   */\n      dup3\n        /* \"#utility.yul\":9901:9921   */\n      tag_154\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":9896:9921   */\n      swap2\n      pop\n        /* \"#utility.yul\":9935:9955   */\n      tag_286\n        /* \"#utility.yul\":9953:9954   */\n      dup4\n        /* \"#utility.yul\":9935:9955   */\n      tag_154\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":9930:9955   */\n      swap3\n      pop\n        /* \"#utility.yul\":9974:9975   */\n      dup3\n        /* \"#utility.yul\":9964:9999   */\n      tag_287\n      jumpi\n        /* \"#utility.yul\":9979:9997   */\n      tag_288\n      tag_173\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":9964:9999   */\n    tag_287:\n        /* \"#utility.yul\":10021:10022   */\n      dup3\n        /* \"#utility.yul\":10018:10019   */\n      dup3\n        /* \"#utility.yul\":10014:10023   */\n      div\n        /* \"#utility.yul\":10009:10023   */\n      swap1\n      pop\n        /* \"#utility.yul\":9844:10029   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10229   */\n    tag_64:\n        /* \"#utility.yul\":10075:10079   */\n      0x00\n        /* \"#utility.yul\":10095:10115   */\n      tag_290\n        /* \"#utility.yul\":10113:10114   */\n      dup3\n        /* \"#utility.yul\":10095:10115   */\n      tag_154\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":10090:10115   */\n      swap2\n      pop\n        /* \"#utility.yul\":10129:10149   */\n      tag_291\n        /* \"#utility.yul\":10147:10148   */\n      dup4\n        /* \"#utility.yul\":10129:10149   */\n      tag_154\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":10124:10149   */\n      swap3\n      pop\n        /* \"#utility.yul\":10173:10174   */\n      dup3\n        /* \"#utility.yul\":10170:10171   */\n      dup3\n        /* \"#utility.yul\":10166:10175   */\n      sub\n        /* \"#utility.yul\":10158:10175   */\n      swap1\n      pop\n        /* \"#utility.yul\":10197:10198   */\n      dup2\n        /* \"#utility.yul\":10191:10195   */\n      dup2\n        /* \"#utility.yul\":10188:10199   */\n      gt\n        /* \"#utility.yul\":10185:10222   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":10202:10220   */\n      tag_293\n      tag_170\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":10185:10222   */\n    tag_292:\n        /* \"#utility.yul\":10035:10229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10235:10567   */\n    tag_67:\n        /* \"#utility.yul\":10356:10360   */\n      0x00\n        /* \"#utility.yul\":10394:10396   */\n      0x40\n        /* \"#utility.yul\":10383:10392   */\n      dup3\n        /* \"#utility.yul\":10379:10397   */\n      add\n        /* \"#utility.yul\":10371:10397   */\n      swap1\n      pop\n        /* \"#utility.yul\":10407:10478   */\n      tag_295\n        /* \"#utility.yul\":10475:10476   */\n      0x00\n        /* \"#utility.yul\":10464:10473   */\n      dup4\n        /* \"#utility.yul\":10460:10477   */\n      add\n        /* \"#utility.yul\":10451:10457   */\n      dup6\n        /* \"#utility.yul\":10407:10478   */\n      tag_153\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":10488:10560   */\n      tag_296\n        /* \"#utility.yul\":10556:10558   */\n      0x20\n        /* \"#utility.yul\":10545:10554   */\n      dup4\n        /* \"#utility.yul\":10541:10559   */\n      add\n        /* \"#utility.yul\":10532:10538   */\n      dup5\n        /* \"#utility.yul\":10488:10560   */\n      tag_155\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":10235:10567   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10573:10663   */\n    tag_174:\n        /* \"#utility.yul\":10607:10614   */\n      0x00\n        /* \"#utility.yul\":10650:10655   */\n      dup2\n        /* \"#utility.yul\":10643:10656   */\n      iszero\n        /* \"#utility.yul\":10636:10657   */\n      iszero\n        /* \"#utility.yul\":10625:10657   */\n      swap1\n      pop\n        /* \"#utility.yul\":10573:10663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10669:10785   */\n    tag_175:\n        /* \"#utility.yul\":10739:10760   */\n      tag_299\n        /* \"#utility.yul\":10754:10759   */\n      dup2\n        /* \"#utility.yul\":10739:10760   */\n      tag_174\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":10732:10737   */\n      dup2\n        /* \"#utility.yul\":10729:10761   */\n      eq\n        /* \"#utility.yul\":10719:10779   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":10775:10776   */\n      0x00\n        /* \"#utility.yul\":10772:10773   */\n      0x00\n        /* \"#utility.yul\":10765:10777   */\n      revert\n        /* \"#utility.yul\":10719:10779   */\n    tag_300:\n        /* \"#utility.yul\":10669:10785   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10791:10928   */\n    tag_176:\n        /* \"#utility.yul\":10845:10850   */\n      0x00\n        /* \"#utility.yul\":10876:10882   */\n      dup2\n        /* \"#utility.yul\":10870:10883   */\n      mload\n        /* \"#utility.yul\":10861:10883   */\n      swap1\n      pop\n        /* \"#utility.yul\":10892:10922   */\n      tag_302\n        /* \"#utility.yul\":10916:10921   */\n      dup2\n        /* \"#utility.yul\":10892:10922   */\n      tag_175\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":10791:10928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11279   */\n    tag_71:\n        /* \"#utility.yul\":11001:11007   */\n      0x00\n        /* \"#utility.yul\":11050:11052   */\n      0x20\n        /* \"#utility.yul\":11038:11047   */\n      dup3\n        /* \"#utility.yul\":11029:11036   */\n      dup5\n        /* \"#utility.yul\":11025:11048   */\n      sub\n        /* \"#utility.yul\":11021:11053   */\n      slt\n        /* \"#utility.yul\":11018:11137   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":11056:11135   */\n      tag_305\n      tag_157\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11018:11137   */\n    tag_304:\n        /* \"#utility.yul\":11176:11177   */\n      0x00\n        /* \"#utility.yul\":11201:11262   */\n      tag_306\n        /* \"#utility.yul\":11254:11261   */\n      dup5\n        /* \"#utility.yul\":11245:11251   */\n      dup3\n        /* \"#utility.yul\":11234:11243   */\n      dup6\n        /* \"#utility.yul\":11230:11252   */\n      add\n        /* \"#utility.yul\":11201:11262   */\n      tag_176\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":11191:11262   */\n      swap2\n      pop\n        /* \"#utility.yul\":11147:11272   */\n      pop\n        /* \"#utility.yul\":10934:11279   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11285:11456   */\n    tag_177:\n        /* \"#utility.yul\":11425:11448   */\n      0x546f6b656e207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":11421:11422   */\n      0x00\n        /* \"#utility.yul\":11413:11419   */\n      dup3\n        /* \"#utility.yul\":11409:11423   */\n      add\n        /* \"#utility.yul\":11402:11449   */\n      mstore\n        /* \"#utility.yul\":11285:11456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11462:11828   */\n    tag_178:\n        /* \"#utility.yul\":11604:11607   */\n      0x00\n        /* \"#utility.yul\":11625:11692   */\n      tag_309\n        /* \"#utility.yul\":11689:11691   */\n      0x15\n        /* \"#utility.yul\":11684:11687   */\n      dup4\n        /* \"#utility.yul\":11625:11692   */\n      tag_163\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":11618:11692   */\n      swap2\n      pop\n        /* \"#utility.yul\":11701:11794   */\n      tag_310\n        /* \"#utility.yul\":11790:11793   */\n      dup3\n        /* \"#utility.yul\":11701:11794   */\n      tag_177\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":11819:11821   */\n      0x20\n        /* \"#utility.yul\":11814:11817   */\n      dup3\n        /* \"#utility.yul\":11810:11822   */\n      add\n        /* \"#utility.yul\":11803:11822   */\n      swap1\n      pop\n        /* \"#utility.yul\":11462:11828   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11834:12253   */\n    tag_74:\n        /* \"#utility.yul\":12000:12004   */\n      0x00\n        /* \"#utility.yul\":12038:12040   */\n      0x20\n        /* \"#utility.yul\":12027:12036   */\n      dup3\n        /* \"#utility.yul\":12023:12041   */\n      add\n        /* \"#utility.yul\":12015:12041   */\n      swap1\n      pop\n        /* \"#utility.yul\":12087:12096   */\n      dup2\n        /* \"#utility.yul\":12081:12085   */\n      dup2\n        /* \"#utility.yul\":12077:12097   */\n      sub\n        /* \"#utility.yul\":12073:12074   */\n      0x00\n        /* \"#utility.yul\":12062:12071   */\n      dup4\n        /* \"#utility.yul\":12058:12075   */\n      add\n        /* \"#utility.yul\":12051:12098   */\n      mstore\n        /* \"#utility.yul\":12115:12246   */\n      tag_312\n        /* \"#utility.yul\":12241:12245   */\n      dup2\n        /* \"#utility.yul\":12115:12246   */\n      tag_178\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":12107:12246   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:12253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12259:12433   */\n    tag_179:\n        /* \"#utility.yul\":12399:12425   */\n      0x496e636f7272656374207061796d656e7420616d6f756e740000000000000000\n        /* \"#utility.yul\":12395:12396   */\n      0x00\n        /* \"#utility.yul\":12387:12393   */\n      dup3\n        /* \"#utility.yul\":12383:12397   */\n      add\n        /* \"#utility.yul\":12376:12426   */\n      mstore\n        /* \"#utility.yul\":12259:12433   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12439:12805   */\n    tag_180:\n        /* \"#utility.yul\":12581:12584   */\n      0x00\n        /* \"#utility.yul\":12602:12669   */\n      tag_315\n        /* \"#utility.yul\":12666:12668   */\n      0x18\n        /* \"#utility.yul\":12661:12664   */\n      dup4\n        /* \"#utility.yul\":12602:12669   */\n      tag_163\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":12595:12669   */\n      swap2\n      pop\n        /* \"#utility.yul\":12678:12771   */\n      tag_316\n        /* \"#utility.yul\":12767:12770   */\n      dup3\n        /* \"#utility.yul\":12678:12771   */\n      tag_179\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":12796:12798   */\n      0x20\n        /* \"#utility.yul\":12791:12794   */\n      dup3\n        /* \"#utility.yul\":12787:12799   */\n      add\n        /* \"#utility.yul\":12780:12799   */\n      swap1\n      pop\n        /* \"#utility.yul\":12439:12805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12811:13230   */\n    tag_89:\n        /* \"#utility.yul\":12977:12981   */\n      0x00\n        /* \"#utility.yul\":13015:13017   */\n      0x20\n        /* \"#utility.yul\":13004:13013   */\n      dup3\n        /* \"#utility.yul\":13000:13018   */\n      add\n        /* \"#utility.yul\":12992:13018   */\n      swap1\n      pop\n        /* \"#utility.yul\":13064:13073   */\n      dup2\n        /* \"#utility.yul\":13058:13062   */\n      dup2\n        /* \"#utility.yul\":13054:13074   */\n      sub\n        /* \"#utility.yul\":13050:13051   */\n      0x00\n        /* \"#utility.yul\":13039:13048   */\n      dup4\n        /* \"#utility.yul\":13035:13052   */\n      add\n        /* \"#utility.yul\":13028:13075   */\n      mstore\n        /* \"#utility.yul\":13092:13223   */\n      tag_318\n        /* \"#utility.yul\":13218:13222   */\n      dup2\n        /* \"#utility.yul\":13092:13223   */\n      tag_180\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":13084:13223   */\n      swap1\n      pop\n        /* \"#utility.yul\":12811:13230   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13236:13568   */\n    tag_94:\n        /* \"#utility.yul\":13357:13361   */\n      0x00\n        /* \"#utility.yul\":13395:13397   */\n      0x40\n        /* \"#utility.yul\":13384:13393   */\n      dup3\n        /* \"#utility.yul\":13380:13398   */\n      add\n        /* \"#utility.yul\":13372:13398   */\n      swap1\n      pop\n        /* \"#utility.yul\":13408:13479   */\n      tag_320\n        /* \"#utility.yul\":13476:13477   */\n      0x00\n        /* \"#utility.yul\":13465:13474   */\n      dup4\n        /* \"#utility.yul\":13461:13478   */\n      add\n        /* \"#utility.yul\":13452:13458   */\n      dup6\n        /* \"#utility.yul\":13408:13479   */\n      tag_153\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":13489:13561   */\n      tag_321\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"#utility.yul\":13546:13555   */\n      dup4\n        /* \"#utility.yul\":13542:13560   */\n      add\n        /* \"#utility.yul\":13533:13539   */\n      dup5\n        /* \"#utility.yul\":13489:13561   */\n      tag_153\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":13236:13568   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13574:13717   */\n    tag_181:\n        /* \"#utility.yul\":13631:13636   */\n      0x00\n        /* \"#utility.yul\":13662:13668   */\n      dup2\n        /* \"#utility.yul\":13656:13669   */\n      mload\n        /* \"#utility.yul\":13647:13669   */\n      swap1\n      pop\n        /* \"#utility.yul\":13678:13711   */\n      tag_323\n        /* \"#utility.yul\":13705:13710   */\n      dup2\n        /* \"#utility.yul\":13678:13711   */\n      tag_159\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":13574:13717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13723:14074   */\n    tag_98:\n        /* \"#utility.yul\":13793:13799   */\n      0x00\n        /* \"#utility.yul\":13842:13844   */\n      0x20\n        /* \"#utility.yul\":13830:13839   */\n      dup3\n        /* \"#utility.yul\":13821:13828   */\n      dup5\n        /* \"#utility.yul\":13817:13840   */\n      sub\n        /* \"#utility.yul\":13813:13845   */\n      slt\n        /* \"#utility.yul\":13810:13929   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":13848:13927   */\n      tag_326\n      tag_157\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":13810:13929   */\n    tag_325:\n        /* \"#utility.yul\":13968:13969   */\n      0x00\n        /* \"#utility.yul\":13993:14057   */\n      tag_327\n        /* \"#utility.yul\":14049:14056   */\n      dup5\n        /* \"#utility.yul\":14040:14046   */\n      dup3\n        /* \"#utility.yul\":14029:14038   */\n      dup6\n        /* \"#utility.yul\":14025:14047   */\n      add\n        /* \"#utility.yul\":13993:14057   */\n      tag_181\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":13983:14057   */\n      swap2\n      pop\n        /* \"#utility.yul\":13939:14067   */\n      pop\n        /* \"#utility.yul\":13723:14074   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14080:14261   */\n    tag_182:\n        /* \"#utility.yul\":14220:14253   */\n      0x5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f7700\n        /* \"#utility.yul\":14216:14217   */\n      0x00\n        /* \"#utility.yul\":14208:14214   */\n      dup3\n        /* \"#utility.yul\":14204:14218   */\n      add\n        /* \"#utility.yul\":14197:14254   */\n      mstore\n        /* \"#utility.yul\":14080:14261   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14267:14633   */\n    tag_183:\n        /* \"#utility.yul\":14409:14412   */\n      0x00\n        /* \"#utility.yul\":14430:14497   */\n      tag_330\n        /* \"#utility.yul\":14494:14496   */\n      0x1f\n        /* \"#utility.yul\":14489:14492   */\n      dup4\n        /* \"#utility.yul\":14430:14497   */\n      tag_163\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":14423:14497   */\n      swap2\n      pop\n        /* \"#utility.yul\":14506:14599   */\n      tag_331\n        /* \"#utility.yul\":14595:14598   */\n      dup3\n        /* \"#utility.yul\":14506:14599   */\n      tag_182\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":14624:14626   */\n      0x20\n        /* \"#utility.yul\":14619:14622   */\n      dup3\n        /* \"#utility.yul\":14615:14627   */\n      add\n        /* \"#utility.yul\":14608:14627   */\n      swap1\n      pop\n        /* \"#utility.yul\":14267:14633   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14639:15058   */\n    tag_101:\n        /* \"#utility.yul\":14805:14809   */\n      0x00\n        /* \"#utility.yul\":14843:14845   */\n      0x20\n        /* \"#utility.yul\":14832:14841   */\n      dup3\n        /* \"#utility.yul\":14828:14846   */\n      add\n        /* \"#utility.yul\":14820:14846   */\n      swap1\n      pop\n        /* \"#utility.yul\":14892:14901   */\n      dup2\n        /* \"#utility.yul\":14886:14890   */\n      dup2\n        /* \"#utility.yul\":14882:14902   */\n      sub\n        /* \"#utility.yul\":14878:14879   */\n      0x00\n        /* \"#utility.yul\":14867:14876   */\n      dup4\n        /* \"#utility.yul\":14863:14880   */\n      add\n        /* \"#utility.yul\":14856:14903   */\n      mstore\n        /* \"#utility.yul\":14920:15051   */\n      tag_333\n        /* \"#utility.yul\":15046:15050   */\n      dup2\n        /* \"#utility.yul\":14920:15051   */\n      tag_183\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":14912:15051   */\n      swap1\n      pop\n        /* \"#utility.yul\":14639:15058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15064:15506   */\n    tag_103:\n        /* \"#utility.yul\":15213:15217   */\n      0x00\n        /* \"#utility.yul\":15251:15253   */\n      0x60\n        /* \"#utility.yul\":15240:15249   */\n      dup3\n        /* \"#utility.yul\":15236:15254   */\n      add\n        /* \"#utility.yul\":15228:15254   */\n      swap1\n      pop\n        /* \"#utility.yul\":15264:15335   */\n      tag_335\n        /* \"#utility.yul\":15332:15333   */\n      0x00\n        /* \"#utility.yul\":15321:15330   */\n      dup4\n        /* \"#utility.yul\":15317:15334   */\n      add\n        /* \"#utility.yul\":15308:15314   */\n      dup7\n        /* \"#utility.yul\":15264:15335   */\n      tag_153\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":15345:15417   */\n      tag_336\n        /* \"#utility.yul\":15413:15415   */\n      0x20\n        /* \"#utility.yul\":15402:15411   */\n      dup4\n        /* \"#utility.yul\":15398:15416   */\n      add\n        /* \"#utility.yul\":15389:15395   */\n      dup6\n        /* \"#utility.yul\":15345:15417   */\n      tag_153\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":15427:15499   */\n      tag_337\n        /* \"#utility.yul\":15495:15497   */\n      0x40\n        /* \"#utility.yul\":15484:15493   */\n      dup4\n        /* \"#utility.yul\":15480:15498   */\n      add\n        /* \"#utility.yul\":15471:15477   */\n      dup5\n        /* \"#utility.yul\":15427:15499   */\n      tag_155\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":15064:15506   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15512:15688   */\n    tag_184:\n        /* \"#utility.yul\":15652:15680   */\n      0x436f6d6d697373696f6e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":15648:15649   */\n      0x00\n        /* \"#utility.yul\":15640:15646   */\n      dup3\n        /* \"#utility.yul\":15636:15650   */\n      add\n        /* \"#utility.yul\":15629:15681   */\n      mstore\n        /* \"#utility.yul\":15512:15688   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15694:16060   */\n    tag_185:\n        /* \"#utility.yul\":15836:15839   */\n      0x00\n        /* \"#utility.yul\":15857:15924   */\n      tag_340\n        /* \"#utility.yul\":15921:15923   */\n      0x1a\n        /* \"#utility.yul\":15916:15919   */\n      dup4\n        /* \"#utility.yul\":15857:15924   */\n      tag_163\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":15850:15924   */\n      swap2\n      pop\n        /* \"#utility.yul\":15933:16026   */\n      tag_341\n        /* \"#utility.yul\":16022:16025   */\n      dup3\n        /* \"#utility.yul\":15933:16026   */\n      tag_184\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":16051:16053   */\n      0x20\n        /* \"#utility.yul\":16046:16049   */\n      dup3\n        /* \"#utility.yul\":16042:16054   */\n      add\n        /* \"#utility.yul\":16035:16054   */\n      swap1\n      pop\n        /* \"#utility.yul\":15694:16060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16066:16485   */\n    tag_109:\n        /* \"#utility.yul\":16232:16236   */\n      0x00\n        /* \"#utility.yul\":16270:16272   */\n      0x20\n        /* \"#utility.yul\":16259:16268   */\n      dup3\n        /* \"#utility.yul\":16255:16273   */\n      add\n        /* \"#utility.yul\":16247:16273   */\n      swap1\n      pop\n        /* \"#utility.yul\":16319:16328   */\n      dup2\n        /* \"#utility.yul\":16313:16317   */\n      dup2\n        /* \"#utility.yul\":16309:16329   */\n      sub\n        /* \"#utility.yul\":16305:16306   */\n      0x00\n        /* \"#utility.yul\":16294:16303   */\n      dup4\n        /* \"#utility.yul\":16290:16307   */\n      add\n        /* \"#utility.yul\":16283:16330   */\n      mstore\n        /* \"#utility.yul\":16347:16478   */\n      tag_343\n        /* \"#utility.yul\":16473:16477   */\n      dup2\n        /* \"#utility.yul\":16347:16478   */\n      tag_185\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":16339:16478   */\n      swap1\n      pop\n        /* \"#utility.yul\":16066:16485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16491:16670   */\n    tag_186:\n        /* \"#utility.yul\":16631:16662   */\n      0x5061796d656e7420746f6b656e207472616e73666572206661696c6564000000\n        /* \"#utility.yul\":16627:16628   */\n      0x00\n        /* \"#utility.yul\":16619:16625   */\n      dup3\n        /* \"#utility.yul\":16615:16629   */\n      add\n        /* \"#utility.yul\":16608:16663   */\n      mstore\n        /* \"#utility.yul\":16491:16670   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16676:17042   */\n    tag_187:\n        /* \"#utility.yul\":16818:16821   */\n      0x00\n        /* \"#utility.yul\":16839:16906   */\n      tag_346\n        /* \"#utility.yul\":16903:16905   */\n      0x1d\n        /* \"#utility.yul\":16898:16901   */\n      dup4\n        /* \"#utility.yul\":16839:16906   */\n      tag_163\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":16832:16906   */\n      swap2\n      pop\n        /* \"#utility.yul\":16915:17008   */\n      tag_347\n        /* \"#utility.yul\":17004:17007   */\n      dup3\n        /* \"#utility.yul\":16915:17008   */\n      tag_186\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":17033:17035   */\n      0x20\n        /* \"#utility.yul\":17028:17031   */\n      dup3\n        /* \"#utility.yul\":17024:17036   */\n      add\n        /* \"#utility.yul\":17017:17036   */\n      swap1\n      pop\n        /* \"#utility.yul\":16676:17042   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17048:17467   */\n    tag_116:\n        /* \"#utility.yul\":17214:17218   */\n      0x00\n        /* \"#utility.yul\":17252:17254   */\n      0x20\n        /* \"#utility.yul\":17241:17250   */\n      dup3\n        /* \"#utility.yul\":17237:17255   */\n      add\n        /* \"#utility.yul\":17229:17255   */\n      swap1\n      pop\n        /* \"#utility.yul\":17301:17310   */\n      dup2\n        /* \"#utility.yul\":17295:17299   */\n      dup2\n        /* \"#utility.yul\":17291:17311   */\n      sub\n        /* \"#utility.yul\":17287:17288   */\n      0x00\n        /* \"#utility.yul\":17276:17285   */\n      dup4\n        /* \"#utility.yul\":17272:17289   */\n      add\n        /* \"#utility.yul\":17265:17312   */\n      mstore\n        /* \"#utility.yul\":17329:17460   */\n      tag_349\n        /* \"#utility.yul\":17455:17459   */\n      dup2\n        /* \"#utility.yul\":17329:17460   */\n      tag_187\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":17321:17460   */\n      swap1\n      pop\n        /* \"#utility.yul\":17048:17467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17473:17654   */\n    tag_188:\n        /* \"#utility.yul\":17613:17646   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":17609:17610   */\n      0x00\n        /* \"#utility.yul\":17601:17607   */\n      dup3\n        /* \"#utility.yul\":17597:17611   */\n      add\n        /* \"#utility.yul\":17590:17647   */\n      mstore\n        /* \"#utility.yul\":17473:17654   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17660:18026   */\n    tag_189:\n        /* \"#utility.yul\":17802:17805   */\n      0x00\n        /* \"#utility.yul\":17823:17890   */\n      tag_352\n        /* \"#utility.yul\":17887:17889   */\n      0x1f\n        /* \"#utility.yul\":17882:17885   */\n      dup4\n        /* \"#utility.yul\":17823:17890   */\n      tag_163\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":17816:17890   */\n      swap2\n      pop\n        /* \"#utility.yul\":17899:17992   */\n      tag_353\n        /* \"#utility.yul\":17988:17991   */\n      dup3\n        /* \"#utility.yul\":17899:17992   */\n      tag_188\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":18017:18019   */\n      0x20\n        /* \"#utility.yul\":18012:18015   */\n      dup3\n        /* \"#utility.yul\":18008:18020   */\n      add\n        /* \"#utility.yul\":18001:18020   */\n      swap1\n      pop\n        /* \"#utility.yul\":17660:18026   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18032:18451   */\n    tag_127:\n        /* \"#utility.yul\":18198:18202   */\n      0x00\n        /* \"#utility.yul\":18236:18238   */\n      0x20\n        /* \"#utility.yul\":18225:18234   */\n      dup3\n        /* \"#utility.yul\":18221:18239   */\n      add\n        /* \"#utility.yul\":18213:18239   */\n      swap1\n      pop\n        /* \"#utility.yul\":18285:18294   */\n      dup2\n        /* \"#utility.yul\":18279:18283   */\n      dup2\n        /* \"#utility.yul\":18275:18295   */\n      sub\n        /* \"#utility.yul\":18271:18272   */\n      0x00\n        /* \"#utility.yul\":18260:18269   */\n      dup4\n        /* \"#utility.yul\":18256:18273   */\n      add\n        /* \"#utility.yul\":18249:18296   */\n      mstore\n        /* \"#utility.yul\":18313:18444   */\n      tag_355\n        /* \"#utility.yul\":18439:18443   */\n      dup2\n        /* \"#utility.yul\":18313:18444   */\n      tag_189\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":18305:18444   */\n      swap1\n      pop\n        /* \"#utility.yul\":18032:18451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18457:18639   */\n    tag_190:\n        /* \"#utility.yul\":18597:18631   */\n      0x546f6b656e73206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":18593:18594   */\n      0x00\n        /* \"#utility.yul\":18585:18591   */\n      dup3\n        /* \"#utility.yul\":18581:18595   */\n      add\n        /* \"#utility.yul\":18574:18632   */\n      mstore\n        /* \"#utility.yul\":18457:18639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18645:19011   */\n    tag_191:\n        /* \"#utility.yul\":18787:18790   */\n      0x00\n        /* \"#utility.yul\":18808:18875   */\n      tag_358\n        /* \"#utility.yul\":18872:18874   */\n      0x20\n        /* \"#utility.yul\":18867:18870   */\n      dup4\n        /* \"#utility.yul\":18808:18875   */\n      tag_163\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":18801:18875   */\n      swap2\n      pop\n        /* \"#utility.yul\":18884:18977   */\n      tag_359\n        /* \"#utility.yul\":18973:18976   */\n      dup3\n        /* \"#utility.yul\":18884:18977   */\n      tag_190\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":19002:19004   */\n      0x20\n        /* \"#utility.yul\":18997:19000   */\n      dup3\n        /* \"#utility.yul\":18993:19005   */\n      add\n        /* \"#utility.yul\":18986:19005   */\n      swap1\n      pop\n        /* \"#utility.yul\":18645:19011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19017:19436   */\n    tag_130:\n        /* \"#utility.yul\":19183:19187   */\n      0x00\n        /* \"#utility.yul\":19221:19223   */\n      0x20\n        /* \"#utility.yul\":19210:19219   */\n      dup3\n        /* \"#utility.yul\":19206:19224   */\n      add\n        /* \"#utility.yul\":19198:19224   */\n      swap1\n      pop\n        /* \"#utility.yul\":19270:19279   */\n      dup2\n        /* \"#utility.yul\":19264:19268   */\n      dup2\n        /* \"#utility.yul\":19260:19280   */\n      sub\n        /* \"#utility.yul\":19256:19257   */\n      0x00\n        /* \"#utility.yul\":19245:19254   */\n      dup4\n        /* \"#utility.yul\":19241:19258   */\n      add\n        /* \"#utility.yul\":19234:19281   */\n      mstore\n        /* \"#utility.yul\":19298:19429   */\n      tag_361\n        /* \"#utility.yul\":19424:19428   */\n      dup2\n        /* \"#utility.yul\":19298:19429   */\n      tag_191\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":19290:19429   */\n      swap1\n      pop\n        /* \"#utility.yul\":19017:19436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19442:19663   */\n    tag_192:\n        /* \"#utility.yul\":19582:19616   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e207a65\n        /* \"#utility.yul\":19578:19579   */\n      0x00\n        /* \"#utility.yul\":19570:19576   */\n      dup3\n        /* \"#utility.yul\":19566:19580   */\n      add\n        /* \"#utility.yul\":19559:19617   */\n      mstore\n        /* \"#utility.yul\":19651:19655   */\n      0x726f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19646:19648   */\n      0x20\n        /* \"#utility.yul\":19638:19644   */\n      dup3\n        /* \"#utility.yul\":19634:19649   */\n      add\n        /* \"#utility.yul\":19627:19656   */\n      mstore\n        /* \"#utility.yul\":19442:19663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19669:20035   */\n    tag_193:\n        /* \"#utility.yul\":19811:19814   */\n      0x00\n        /* \"#utility.yul\":19832:19899   */\n      tag_364\n        /* \"#utility.yul\":19896:19898   */\n      0x22\n        /* \"#utility.yul\":19891:19894   */\n      dup4\n        /* \"#utility.yul\":19832:19899   */\n      tag_163\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":19825:19899   */\n      swap2\n      pop\n        /* \"#utility.yul\":19908:20001   */\n      tag_365\n        /* \"#utility.yul\":19997:20000   */\n      dup3\n        /* \"#utility.yul\":19908:20001   */\n      tag_192\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":20026:20028   */\n      0x40\n        /* \"#utility.yul\":20021:20024   */\n      dup3\n        /* \"#utility.yul\":20017:20029   */\n      add\n        /* \"#utility.yul\":20010:20029   */\n      swap1\n      pop\n        /* \"#utility.yul\":19669:20035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20041:20460   */\n    tag_133:\n        /* \"#utility.yul\":20207:20211   */\n      0x00\n        /* \"#utility.yul\":20245:20247   */\n      0x20\n        /* \"#utility.yul\":20234:20243   */\n      dup3\n        /* \"#utility.yul\":20230:20248   */\n      add\n        /* \"#utility.yul\":20222:20248   */\n      swap1\n      pop\n        /* \"#utility.yul\":20294:20303   */\n      dup2\n        /* \"#utility.yul\":20288:20292   */\n      dup2\n        /* \"#utility.yul\":20284:20304   */\n      sub\n        /* \"#utility.yul\":20280:20281   */\n      0x00\n        /* \"#utility.yul\":20269:20278   */\n      dup4\n        /* \"#utility.yul\":20265:20282   */\n      add\n        /* \"#utility.yul\":20258:20305   */\n      mstore\n        /* \"#utility.yul\":20322:20453   */\n      tag_367\n        /* \"#utility.yul\":20448:20452   */\n      dup2\n        /* \"#utility.yul\":20322:20453   */\n      tag_193\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":20314:20453   */\n      swap1\n      pop\n        /* \"#utility.yul\":20041:20460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20466:20639   */\n    tag_194:\n        /* \"#utility.yul\":20606:20631   */\n      0x546f6b656e20616c6c6f77616e636520746f6f206c6f77000000000000000000\n        /* \"#utility.yul\":20602:20603   */\n      0x00\n        /* \"#utility.yul\":20594:20600   */\n      dup3\n        /* \"#utility.yul\":20590:20604   */\n      add\n        /* \"#utility.yul\":20583:20632   */\n      mstore\n        /* \"#utility.yul\":20466:20639   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20645:21011   */\n    tag_195:\n        /* \"#utility.yul\":20787:20790   */\n      0x00\n        /* \"#utility.yul\":20808:20875   */\n      tag_370\n        /* \"#utility.yul\":20872:20874   */\n      0x17\n        /* \"#utility.yul\":20867:20870   */\n      dup4\n        /* \"#utility.yul\":20808:20875   */\n      tag_163\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":20801:20875   */\n      swap2\n      pop\n        /* \"#utility.yul\":20884:20977   */\n      tag_371\n        /* \"#utility.yul\":20973:20976   */\n      dup3\n        /* \"#utility.yul\":20884:20977   */\n      tag_194\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":21002:21004   */\n      0x20\n        /* \"#utility.yul\":20997:21000   */\n      dup3\n        /* \"#utility.yul\":20993:21005   */\n      add\n        /* \"#utility.yul\":20986:21005   */\n      swap1\n      pop\n        /* \"#utility.yul\":20645:21011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21017:21436   */\n    tag_140:\n        /* \"#utility.yul\":21183:21187   */\n      0x00\n        /* \"#utility.yul\":21221:21223   */\n      0x20\n        /* \"#utility.yul\":21210:21219   */\n      dup3\n        /* \"#utility.yul\":21206:21224   */\n      add\n        /* \"#utility.yul\":21198:21224   */\n      swap1\n      pop\n        /* \"#utility.yul\":21270:21279   */\n      dup2\n        /* \"#utility.yul\":21264:21268   */\n      dup2\n        /* \"#utility.yul\":21260:21280   */\n      sub\n        /* \"#utility.yul\":21256:21257   */\n      0x00\n        /* \"#utility.yul\":21245:21254   */\n      dup4\n        /* \"#utility.yul\":21241:21258   */\n      add\n        /* \"#utility.yul\":21234:21281   */\n      mstore\n        /* \"#utility.yul\":21298:21429   */\n      tag_373\n        /* \"#utility.yul\":21424:21428   */\n      dup2\n        /* \"#utility.yul\":21298:21429   */\n      tag_195\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":21290:21429   */\n      swap1\n      pop\n        /* \"#utility.yul\":21017:21436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21442:21675   */\n    tag_148:\n        /* \"#utility.yul\":21481:21484   */\n      0x00\n        /* \"#utility.yul\":21504:21528   */\n      tag_375\n        /* \"#utility.yul\":21522:21527   */\n      dup3\n        /* \"#utility.yul\":21504:21528   */\n      tag_154\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":21495:21528   */\n      swap2\n      pop\n        /* \"#utility.yul\":21550:21616   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":21543:21548   */\n      dup3\n        /* \"#utility.yul\":21540:21617   */\n      sub\n        /* \"#utility.yul\":21537:21640   */\n      tag_376\n      jumpi\n        /* \"#utility.yul\":21620:21638   */\n      tag_377\n      tag_170\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":21537:21640   */\n    tag_376:\n        /* \"#utility.yul\":21667:21668   */\n      0x01\n        /* \"#utility.yul\":21660:21665   */\n      dup3\n        /* \"#utility.yul\":21656:21669   */\n      add\n        /* \"#utility.yul\":21649:21669   */\n      swap1\n      pop\n        /* \"#utility.yul\":21442:21675   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21681:21872   */\n    tag_150:\n        /* \"#utility.yul\":21721:21724   */\n      0x00\n        /* \"#utility.yul\":21740:21760   */\n      tag_379\n        /* \"#utility.yul\":21758:21759   */\n      dup3\n        /* \"#utility.yul\":21740:21760   */\n      tag_154\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":21735:21760   */\n      swap2\n      pop\n        /* \"#utility.yul\":21774:21794   */\n      tag_380\n        /* \"#utility.yul\":21792:21793   */\n      dup4\n        /* \"#utility.yul\":21774:21794   */\n      tag_154\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":21769:21794   */\n      swap3\n      pop\n        /* \"#utility.yul\":21817:21818   */\n      dup3\n        /* \"#utility.yul\":21814:21815   */\n      dup3\n        /* \"#utility.yul\":21810:21819   */\n      add\n        /* \"#utility.yul\":21803:21819   */\n      swap1\n      pop\n        /* \"#utility.yul\":21838:21841   */\n      dup1\n        /* \"#utility.yul\":21835:21836   */\n      dup3\n        /* \"#utility.yul\":21832:21842   */\n      gt\n        /* \"#utility.yul\":21829:21865   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":21845:21863   */\n      tag_382\n      tag_170\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":21829:21865   */\n    tag_381:\n        /* \"#utility.yul\":21681:21872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066ece59cf0048f266d5dbd0339e6a0c701006a8c1afdc591624a26fd4dd875f464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061186e8061001c5f395ff3fe60806040526004361061006f575f3560e01c80637975ce281161004d5780637975ce28146100f15780637a82a87f1461010d5780639ffae41b14610135578063de74e57b1461015d5761006f565b806317c73ff0146100735780631bf1de9b1461009d5780636c2c9c7d146100c7575b5f5ffd5b34801561007e575f5ffd5b5061008761019d565b6040516100949190610dd6565b60405180910390f35b3480156100a8575f5ffd5b506100b16101b5565b6040516100be9190610e07565b60405180910390f35b3480156100d2575f5ffd5b506100db6101ba565b6040516100e89190610e07565b60405180910390f35b61010b60048036038101906101069190610e4e565b6101c0565b005b348015610118575f5ffd5b50610133600480360381019061012e9190610eb6565b6104e2565b005b348015610140575f5ffd5b5061015b60048036038101906101569190610f1a565b6109b2565b005b348015610168575f5ffd5b50610183600480360381019061017e9190610f7e565b610d28565b604051610194959493929190610fa9565b60405180910390f35b73fcf8d2b098b3160654bbada1a8769483c71c288b81565b600a81565b60015481565b5f5f5f8481526020019081526020015f2090505f816002015411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090611054565b60405180910390fd5b8060040154421115610260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610257906110bc565b60405180910390fd5b81816002015410156102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e9061114a565b60405180910390fd5b5f8282600101546102b89190611195565b90508034146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390611220565b60405180910390fd5b5f6064600a8361030c9190611195565b610316919061126b565b90505f8183610325919061129b565b9050848460020154610337919061129b565b8460020181905550835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b815260040161039c9291906112ce565b6020604051808303815f875af11580156103b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103dc919061132a565b61041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104129061139f565b60405180910390fd5b73fcf8d2b098b3160654bbada1a8769483c71c288b73ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610472573d5f5f3e3d5ffd5b50836003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156104d9573d5f5f3e3d5ffd5b50505050505050565b5f5f5f8681526020019081526020015f2090505f81600201541161053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290611054565b60405180910390fd5b8060040154421115610582576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610579906110bc565b60405180910390fd5b83816002015410156105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c09061114a565b60405180910390fd5b5f8482600101546105da9190611195565b905080831461061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061590611407565b60405180910390fd5b5f6064600a8561062e9190611195565b610638919061126b565b90505f8185610647919061129b565b9050848673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610685929190611425565b602060405180830381865afa1580156106a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c49190611460565b1015610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc906114d5565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3373fcf8d2b098b3160654bbada1a8769483c71c288b856040518463ffffffff1660e01b8152600401610756939291906114f3565b6020604051808303815f875af1158015610772573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610796919061132a565b6107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90611572565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd33866003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401610835939291906114f3565b6020604051808303815f875af1158015610851573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610875919061132a565b6108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ab906115da565b60405180910390fd5b8684600201546108c4919061129b565b8460020181905550835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33896040518363ffffffff1660e01b81526004016109299291906112ce565b6020604051808303815f875af1158015610945573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610969919061132a565b6109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f9061139f565b60405180910390fd5b5050505050505050565b5f84116109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611642565b60405180910390fd5b5f8211610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d906116aa565b60405180910390fd5b5f8111610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f90611738565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610ab4929190611425565b602060405180830381865afa158015610acf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190611460565b1015610b34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2b906117a0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b71939291906114f3565b6020604051808303815f875af1158015610b8d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb1919061132a565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be79061139f565b60405180910390fd5b60015f815480929190610c02906117be565b91905055506040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018242610c629190611805565b8152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015590505050505050565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dc082610d97565b9050919050565b610dd081610db6565b82525050565b5f602082019050610de95f830184610dc7565b92915050565b5f819050919050565b610e0181610def565b82525050565b5f602082019050610e1a5f830184610df8565b92915050565b5f5ffd5b610e2d81610def565b8114610e37575f5ffd5b50565b5f81359050610e4881610e24565b92915050565b5f5f60408385031215610e6457610e63610e20565b5b5f610e7185828601610e3a565b9250506020610e8285828601610e3a565b9150509250929050565b610e9581610db6565b8114610e9f575f5ffd5b50565b5f81359050610eb081610e8c565b92915050565b5f5f5f5f60808587031215610ece57610ecd610e20565b5b5f610edb87828801610e3a565b9450506020610eec87828801610e3a565b9350506040610efd87828801610ea2565b9250506060610f0e87828801610e3a565b91505092959194509250565b5f5f5f5f60808587031215610f3257610f31610e20565b5b5f610f3f87828801610e3a565b9450506020610f5087828801610ea2565b9350506040610f6187828801610e3a565b9250506060610f7287828801610e3a565b91505092959194509250565b5f60208284031215610f9357610f92610e20565b5b5f610fa084828501610e3a565b91505092915050565b5f60a082019050610fbc5f830188610dc7565b610fc96020830187610df8565b610fd66040830186610df8565b610fe36060830185610dc7565b610ff06080830184610df8565b9695505050505050565b5f82825260208201905092915050565b7f4c697374696e6720646f6573206e6f74206578697374000000000000000000005f82015250565b5f61103e601683610ffa565b91506110498261100a565b602082019050919050565b5f6020820190508181035f83015261106b81611032565b9050919050565b7f4c697374696e67206861732065787069726564000000000000000000000000005f82015250565b5f6110a6601383610ffa565b91506110b182611072565b602082019050919050565b5f6020820190508181035f8301526110d38161109a565b9050919050565b7f546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b5f8201527f656e73206f6e2073616c65000000000000000000000000000000000000000000602082015250565b5f611134602b83610ffa565b915061113f826110da565b604082019050919050565b5f6020820190508181035f83015261116181611128565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61119f82610def565b91506111aa83610def565b92508282026111b881610def565b915082820484148315176111cf576111ce611168565b5b5092915050565b7f496e636f72726563742076616c75652073656e740000000000000000000000005f82015250565b5f61120a601483610ffa565b9150611215826111d6565b602082019050919050565b5f6020820190508181035f830152611237816111fe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61127582610def565b915061128083610def565b9250826112905761128f61123e565b5b828204905092915050565b5f6112a582610def565b91506112b083610def565b92508282039050818111156112c8576112c7611168565b5b92915050565b5f6040820190506112e15f830185610dc7565b6112ee6020830184610df8565b9392505050565b5f8115159050919050565b611309816112f5565b8114611313575f5ffd5b50565b5f8151905061132481611300565b92915050565b5f6020828403121561133f5761133e610e20565b5b5f61134c84828501611316565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f611389601583610ffa565b915061139482611355565b602082019050919050565b5f6020820190508181035f8301526113b68161137d565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f6113f1601883610ffa565b91506113fc826113bd565b602082019050919050565b5f6020820190508181035f83015261141e816113e5565b9050919050565b5f6040820190506114385f830185610dc7565b6114456020830184610dc7565b9392505050565b5f8151905061145a81610e24565b92915050565b5f6020828403121561147557611474610e20565b5b5f6114828482850161144c565b91505092915050565b7f5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77005f82015250565b5f6114bf601f83610ffa565b91506114ca8261148b565b602082019050919050565b5f6020820190508181035f8301526114ec816114b3565b9050919050565b5f6060820190506115065f830186610dc7565b6115136020830185610dc7565b6115206040830184610df8565b949350505050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f61155c601a83610ffa565b915061156782611528565b602082019050919050565b5f6020820190508181035f83015261158981611550565b9050919050565b7f5061796d656e7420746f6b656e207472616e73666572206661696c65640000005f82015250565b5f6115c4601d83610ffa565b91506115cf82611590565b602082019050919050565b5f6020820190508181035f8301526115f1816115b8565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f61162c601f83610ffa565b9150611637826115f8565b602082019050919050565b5f6020820190508181035f83015261165981611620565b9050919050565b7f546f6b656e73206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f611694602083610ffa565b915061169f82611660565b602082019050919050565b5f6020820190508181035f8301526116c181611688565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f611722602283610ffa565b915061172d826116c8565b604082019050919050565b5f6020820190508181035f83015261174f81611716565b9050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f770000000000000000005f82015250565b5f61178a601783610ffa565b915061179582611756565b602082019050919050565b5f6020820190508181035f8301526117b78161177e565b9050919050565b5f6117c882610def565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117fa576117f9611168565b5b600182019050919050565b5f61180f82610def565b915061181a83610def565b925082820190508082111561183257611831611168565b5b9291505056fea264697066735822122066ece59cf0048f266d5dbd0339e6a0c701006a8c1afdc591624a26fd4dd875f464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x186E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7975CE28 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x7975CE28 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x7A82A87F EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x15D JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP DUP5 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xA DUP6 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP3 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST LT ISZERO PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x945 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB1 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC02 SWAP1 PUSH2 0x17BE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC0 DUP3 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xDB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE9 PUSH0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE01 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH0 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP2 EQ PUSH2 0xE37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE48 DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE71 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE82 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE95 DUP2 PUSH2 0xDB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB0 DUP2 PUSH2 0xE8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDB DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xEEC DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xEFD DUP8 DUP3 DUP9 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF0E DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF3F DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF50 DUP8 DUP3 DUP9 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xF61 DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF72 DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA0 DUP5 DUP3 DUP6 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH0 DUP4 ADD DUP9 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xFC9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xFD6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xFE3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103E PUSH1 0x16 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1049 DUP3 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106B DUP2 PUSH2 0x1032 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A6 PUSH1 0x13 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x10B1 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D3 DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E742069732067726561746572207468616E20746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E73206F6E2073616C65000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 PUSH1 0x2B DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x113F DUP3 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1161 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x119F DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x11AA DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11B8 DUP2 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0x1168 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742076616C75652073656E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120A PUSH1 0x14 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1275 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x1280 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x123E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A5 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x12B0 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12C8 JUMPI PUSH2 0x12C7 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x12EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1309 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1313 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1324 DUP2 PUSH2 0x1300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133F JUMPI PUSH2 0x133E PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134C DUP5 DUP3 DUP6 ADD PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1389 PUSH1 0x15 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1394 DUP3 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13B6 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F1 PUSH1 0x18 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x13FC DUP3 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x141E DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1438 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1445 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x145A DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1482 DUP5 DUP3 DUP6 ADD PUSH2 0x144C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BF PUSH1 0x1F DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x14CA DUP3 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EC DUP2 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1506 PUSH0 DUP4 ADD DUP7 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1513 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1520 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155C PUSH1 0x1A DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1589 DUP2 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E207472616E73666572206661696C6564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15C4 PUSH1 0x1D DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x15CF DUP3 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x162C PUSH1 0x1F DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1637 DUP3 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1659 DUP2 PUSH2 0x1620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 PUSH1 0x20 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x169F DUP3 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C1 DUP2 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1722 PUSH1 0x22 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x172D DUP3 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x174F DUP2 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178A PUSH1 0x17 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1795 DUP3 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B7 DUP2 PUSH2 0x177E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17C8 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180F DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x181A DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xECE59CF0048F26 PUSH14 0x5DBD0339E6A0C701006A8C1AFDC5 SWAP2 PUSH3 0x4A26FD 0x4D 0xD8 PUSH22 0xF464736F6C634300081C003300000000000000000000 ",
							"sourceMap": "135:3388:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMISSION_PERCENTAGE_813": {
									"entryPoint": 437,
									"id": 813,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMISSION_WALLET_810": {
									"entryPoint": 413,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addListing_898": {
									"entryPoint": 2482,
									"id": 898,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyTokensWithERC20_1146": {
									"entryPoint": 1250,
									"id": 1146,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyTokens_1007": {
									"entryPoint": 448,
									"id": 1007,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@listingCounter_807": {
									"entryPoint": 442,
									"id": 807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listings_805": {
									"entryPoint": 3368,
									"id": 805,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 4886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256": {
									"entryPoint": 3866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 3766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5768,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5157,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4814,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4009,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4426,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5802,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3616,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355": {
									"entryPoint": 5520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d": {
									"entryPoint": 5053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131": {
									"entryPoint": 5259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538": {
									"entryPoint": 4210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55": {
									"entryPoint": 4106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b": {
									"entryPoint": 5728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4864,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21875:6",
										"nodeType": "YulBlock",
										"src": "0:21875:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:6",
													"nodeType": "YulBlock",
													"src": "52:81:6",
													"statements": [
														{
															"nativeSrc": "62:65:6",
															"nodeType": "YulAssignment",
															"src": "62:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:6",
																		"nodeType": "YulLiteral",
																		"src": "84:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:6"
																},
																"nativeSrc": "73:54:6",
																"nodeType": "YulFunctionCall",
																"src": "73:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:6",
														"nodeType": "YulTypedName",
														"src": "34:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:6",
														"nodeType": "YulTypedName",
														"src": "44:7:6",
														"type": ""
													}
												],
												"src": "7:126:6"
											},
											{
												"body": {
													"nativeSrc": "184:51:6",
													"nodeType": "YulBlock",
													"src": "184:51:6",
													"statements": [
														{
															"nativeSrc": "194:35:6",
															"nodeType": "YulAssignment",
															"src": "194:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:6"
																},
																"nativeSrc": "205:24:6",
																"nodeType": "YulFunctionCall",
																"src": "205:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:6",
														"nodeType": "YulTypedName",
														"src": "166:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:6",
														"nodeType": "YulTypedName",
														"src": "176:7:6",
														"type": ""
													}
												],
												"src": "139:96:6"
											},
											{
												"body": {
													"nativeSrc": "306:53:6",
													"nodeType": "YulBlock",
													"src": "306:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:6"
																		},
																		"nativeSrc": "328:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:6"
																},
																"nativeSrc": "316:37:6",
																"nodeType": "YulFunctionCall",
																"src": "316:37:6"
															},
															"nativeSrc": "316:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:6",
														"nodeType": "YulTypedName",
														"src": "294:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:6",
														"nodeType": "YulTypedName",
														"src": "301:3:6",
														"type": ""
													}
												],
												"src": "241:118:6"
											},
											{
												"body": {
													"nativeSrc": "463:124:6",
													"nodeType": "YulBlock",
													"src": "463:124:6",
													"statements": [
														{
															"nativeSrc": "473:26:6",
															"nodeType": "YulAssignment",
															"src": "473:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:6",
																		"nodeType": "YulLiteral",
																		"src": "496:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:6"
																},
																"nativeSrc": "481:18:6",
																"nodeType": "YulFunctionCall",
																"src": "481:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:6",
																				"nodeType": "YulLiteral",
																				"src": "577:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:6"
																		},
																		"nativeSrc": "562:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:6"
																},
																"nativeSrc": "509:71:6",
																"nodeType": "YulFunctionCall",
																"src": "509:71:6"
															},
															"nativeSrc": "509:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:6",
														"nodeType": "YulTypedName",
														"src": "435:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:6",
														"nodeType": "YulTypedName",
														"src": "447:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:6",
														"nodeType": "YulTypedName",
														"src": "458:4:6",
														"type": ""
													}
												],
												"src": "365:222:6"
											},
											{
												"body": {
													"nativeSrc": "638:32:6",
													"nodeType": "YulBlock",
													"src": "638:32:6",
													"statements": [
														{
															"nativeSrc": "648:16:6",
															"nodeType": "YulAssignment",
															"src": "648:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:6",
																"nodeType": "YulIdentifier",
																"src": "659:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:6",
														"nodeType": "YulTypedName",
														"src": "620:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:6",
														"nodeType": "YulTypedName",
														"src": "630:7:6",
														"type": ""
													}
												],
												"src": "593:77:6"
											},
											{
												"body": {
													"nativeSrc": "741:53:6",
													"nodeType": "YulBlock",
													"src": "741:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:6"
																		},
																		"nativeSrc": "763:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:6"
																},
																"nativeSrc": "751:37:6",
																"nodeType": "YulFunctionCall",
																"src": "751:37:6"
															},
															"nativeSrc": "751:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:6",
														"nodeType": "YulTypedName",
														"src": "729:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:6",
														"nodeType": "YulTypedName",
														"src": "736:3:6",
														"type": ""
													}
												],
												"src": "676:118:6"
											},
											{
												"body": {
													"nativeSrc": "898:124:6",
													"nodeType": "YulBlock",
													"src": "898:124:6",
													"statements": [
														{
															"nativeSrc": "908:26:6",
															"nodeType": "YulAssignment",
															"src": "908:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:6",
																		"nodeType": "YulLiteral",
																		"src": "931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:6"
																},
																"nativeSrc": "916:18:6",
																"nodeType": "YulFunctionCall",
																"src": "916:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:6"
																		},
																		"nativeSrc": "997:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:6"
																},
																"nativeSrc": "944:71:6",
																"nodeType": "YulFunctionCall",
																"src": "944:71:6"
															},
															"nativeSrc": "944:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:6",
														"nodeType": "YulTypedName",
														"src": "870:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:6",
														"nodeType": "YulTypedName",
														"src": "882:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:6",
														"nodeType": "YulTypedName",
														"src": "893:4:6",
														"type": ""
													}
												],
												"src": "800:222:6"
											},
											{
												"body": {
													"nativeSrc": "1068:35:6",
													"nodeType": "YulBlock",
													"src": "1068:35:6",
													"statements": [
														{
															"nativeSrc": "1078:19:6",
															"nodeType": "YulAssignment",
															"src": "1078:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:6"
																},
																"nativeSrc": "1088:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:6",
														"nodeType": "YulTypedName",
														"src": "1061:6:6",
														"type": ""
													}
												],
												"src": "1028:75:6"
											},
											{
												"body": {
													"nativeSrc": "1198:28:6",
													"nodeType": "YulBlock",
													"src": "1198:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:6"
																},
																"nativeSrc": "1208:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:6"
															},
															"nativeSrc": "1208:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:6"
											},
											{
												"body": {
													"nativeSrc": "1321:28:6",
													"nodeType": "YulBlock",
													"src": "1321:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:6"
																},
																"nativeSrc": "1331:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:6"
															},
															"nativeSrc": "1331:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:6"
											},
											{
												"body": {
													"nativeSrc": "1398:79:6",
													"nodeType": "YulBlock",
													"src": "1398:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:6",
																"nodeType": "YulBlock",
																"src": "1455:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:6"
																			},
																			"nativeSrc": "1457:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:6"
																		},
																		"nativeSrc": "1457:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:6"
																				},
																				"nativeSrc": "1428:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:6"
																		},
																		"nativeSrc": "1418:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:6"
																},
																"nativeSrc": "1411:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:6"
															},
															"nativeSrc": "1408:63:6",
															"nodeType": "YulIf",
															"src": "1408:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:6",
														"nodeType": "YulTypedName",
														"src": "1391:5:6",
														"type": ""
													}
												],
												"src": "1355:122:6"
											},
											{
												"body": {
													"nativeSrc": "1535:87:6",
													"nodeType": "YulBlock",
													"src": "1535:87:6",
													"statements": [
														{
															"nativeSrc": "1545:29:6",
															"nodeType": "YulAssignment",
															"src": "1545:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:6"
																},
																"nativeSrc": "1554:20:6",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1583:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:6"
																},
																"nativeSrc": "1583:33:6",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:6"
															},
															"nativeSrc": "1583:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1483:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:6",
														"nodeType": "YulTypedName",
														"src": "1513:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:6",
														"nodeType": "YulTypedName",
														"src": "1521:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:6",
														"nodeType": "YulTypedName",
														"src": "1529:5:6",
														"type": ""
													}
												],
												"src": "1483:139:6"
											},
											{
												"body": {
													"nativeSrc": "1711:391:6",
													"nodeType": "YulBlock",
													"src": "1711:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1757:83:6",
																"nodeType": "YulBlock",
																"src": "1757:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1759:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1759:77:6"
																			},
																			"nativeSrc": "1759:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1759:79:6"
																		},
																		"nativeSrc": "1759:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1732:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1732:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1728:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:6"
																		},
																		"nativeSrc": "1728:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1724:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1724:3:6"
																},
																"nativeSrc": "1724:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1724:32:6"
															},
															"nativeSrc": "1721:119:6",
															"nodeType": "YulIf",
															"src": "1721:119:6"
														},
														{
															"nativeSrc": "1850:117:6",
															"nodeType": "YulBlock",
															"src": "1850:117:6",
															"statements": [
																{
																	"nativeSrc": "1865:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1865:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1879:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1879:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1869:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1869:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1894:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1894:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1929:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1929:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1940:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1940:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1925:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:6"
																				},
																				"nativeSrc": "1925:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1925:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1949:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1904:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1904:20:6"
																		},
																		"nativeSrc": "1904:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1894:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1894:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1977:118:6",
															"nodeType": "YulBlock",
															"src": "1977:118:6",
															"statements": [
																{
																	"nativeSrc": "1992:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1992:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2006:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2006:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1996:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1996:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2022:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2022:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2057:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2057:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2068:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2053:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2053:3:6"
																				},
																				"nativeSrc": "2053:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2053:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2077:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2077:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2032:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2032:20:6"
																		},
																		"nativeSrc": "2032:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2022:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2022:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "1628:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1673:9:6",
														"nodeType": "YulTypedName",
														"src": "1673:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1684:7:6",
														"nodeType": "YulTypedName",
														"src": "1684:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1696:6:6",
														"nodeType": "YulTypedName",
														"src": "1696:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1704:6:6",
														"nodeType": "YulTypedName",
														"src": "1704:6:6",
														"type": ""
													}
												],
												"src": "1628:474:6"
											},
											{
												"body": {
													"nativeSrc": "2151:79:6",
													"nodeType": "YulBlock",
													"src": "2151:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:6",
																"nodeType": "YulBlock",
																"src": "2208:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:6"
																			},
																			"nativeSrc": "2210:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:6"
																		},
																		"nativeSrc": "2210:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2181:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:6"
																				},
																				"nativeSrc": "2181:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:6"
																		},
																		"nativeSrc": "2171:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:6"
																},
																"nativeSrc": "2164:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:6"
															},
															"nativeSrc": "2161:63:6",
															"nodeType": "YulIf",
															"src": "2161:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2108:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:6",
														"nodeType": "YulTypedName",
														"src": "2144:5:6",
														"type": ""
													}
												],
												"src": "2108:122:6"
											},
											{
												"body": {
													"nativeSrc": "2288:87:6",
													"nodeType": "YulBlock",
													"src": "2288:87:6",
													"statements": [
														{
															"nativeSrc": "2298:29:6",
															"nodeType": "YulAssignment",
															"src": "2298:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:6"
																},
																"nativeSrc": "2307:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2336:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:6"
																},
																"nativeSrc": "2336:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:6"
															},
															"nativeSrc": "2336:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2236:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:6",
														"nodeType": "YulTypedName",
														"src": "2266:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:6",
														"nodeType": "YulTypedName",
														"src": "2274:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:6",
														"nodeType": "YulTypedName",
														"src": "2282:5:6",
														"type": ""
													}
												],
												"src": "2236:139:6"
											},
											{
												"body": {
													"nativeSrc": "2498:648:6",
													"nodeType": "YulBlock",
													"src": "2498:648:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2545:83:6",
																"nodeType": "YulBlock",
																"src": "2545:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2547:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2547:77:6"
																			},
																			"nativeSrc": "2547:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2547:79:6"
																		},
																		"nativeSrc": "2547:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2547:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2519:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2519:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2528:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2528:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2515:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2515:3:6"
																		},
																		"nativeSrc": "2515:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2515:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2540:3:6",
																		"nodeType": "YulLiteral",
																		"src": "2540:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2511:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2511:3:6"
																},
																"nativeSrc": "2511:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2511:33:6"
															},
															"nativeSrc": "2508:120:6",
															"nodeType": "YulIf",
															"src": "2508:120:6"
														},
														{
															"nativeSrc": "2638:117:6",
															"nodeType": "YulBlock",
															"src": "2638:117:6",
															"statements": [
																{
																	"nativeSrc": "2653:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2653:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2667:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2667:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2657:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2657:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2682:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2682:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2717:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2717:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2728:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2728:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2713:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2713:3:6"
																				},
																				"nativeSrc": "2713:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2713:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2737:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2737:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2692:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2692:20:6"
																		},
																		"nativeSrc": "2692:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2682:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2682:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2765:118:6",
															"nodeType": "YulBlock",
															"src": "2765:118:6",
															"statements": [
																{
																	"nativeSrc": "2780:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2780:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2794:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2784:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2784:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2810:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2810:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2845:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2845:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2856:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2856:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2841:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2841:3:6"
																				},
																				"nativeSrc": "2841:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2841:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2865:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2865:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2820:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2820:20:6"
																		},
																		"nativeSrc": "2820:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2820:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2810:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2810:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2893:118:6",
															"nodeType": "YulBlock",
															"src": "2893:118:6",
															"statements": [
																{
																	"nativeSrc": "2908:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2908:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2922:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2922:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2912:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2912:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2938:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2938:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2973:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2973:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2984:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2984:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2969:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2969:3:6"
																				},
																				"nativeSrc": "2969:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2969:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2993:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2993:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2948:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2948:20:6"
																		},
																		"nativeSrc": "2948:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2948:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2938:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2938:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3021:118:6",
															"nodeType": "YulBlock",
															"src": "3021:118:6",
															"statements": [
																{
																	"nativeSrc": "3036:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3036:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3050:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3050:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3040:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3040:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3066:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3066:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3101:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3101:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3112:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3112:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3097:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3097:3:6"
																				},
																				"nativeSrc": "3097:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3097:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3121:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3121:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3076:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3076:20:6"
																		},
																		"nativeSrc": "3076:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3076:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3066:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3066:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "2381:765:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2444:9:6",
														"nodeType": "YulTypedName",
														"src": "2444:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2455:7:6",
														"nodeType": "YulTypedName",
														"src": "2455:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2467:6:6",
														"nodeType": "YulTypedName",
														"src": "2467:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2475:6:6",
														"nodeType": "YulTypedName",
														"src": "2475:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2483:6:6",
														"nodeType": "YulTypedName",
														"src": "2483:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2491:6:6",
														"nodeType": "YulTypedName",
														"src": "2491:6:6",
														"type": ""
													}
												],
												"src": "2381:765:6"
											},
											{
												"body": {
													"nativeSrc": "3269:648:6",
													"nodeType": "YulBlock",
													"src": "3269:648:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3316:83:6",
																"nodeType": "YulBlock",
																"src": "3316:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3318:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3318:77:6"
																			},
																			"nativeSrc": "3318:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3318:79:6"
																		},
																		"nativeSrc": "3318:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3318:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3290:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3290:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3299:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3299:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3286:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:6"
																		},
																		"nativeSrc": "3286:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3311:3:6",
																		"nodeType": "YulLiteral",
																		"src": "3311:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3282:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3282:3:6"
																},
																"nativeSrc": "3282:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3282:33:6"
															},
															"nativeSrc": "3279:120:6",
															"nodeType": "YulIf",
															"src": "3279:120:6"
														},
														{
															"nativeSrc": "3409:117:6",
															"nodeType": "YulBlock",
															"src": "3409:117:6",
															"statements": [
																{
																	"nativeSrc": "3424:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3424:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3438:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3438:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3428:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3428:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3453:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3453:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3488:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3488:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3499:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3499:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3484:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:6"
																				},
																				"nativeSrc": "3484:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3484:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3508:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3508:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3463:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3463:20:6"
																		},
																		"nativeSrc": "3463:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3463:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3453:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3453:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3536:118:6",
															"nodeType": "YulBlock",
															"src": "3536:118:6",
															"statements": [
																{
																	"nativeSrc": "3551:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3551:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3565:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3565:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3555:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3555:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3581:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3581:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3616:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3616:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3627:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3627:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3612:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3612:3:6"
																				},
																				"nativeSrc": "3612:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3612:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3636:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3636:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3591:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3591:20:6"
																		},
																		"nativeSrc": "3591:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3591:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3581:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3581:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3664:118:6",
															"nodeType": "YulBlock",
															"src": "3664:118:6",
															"statements": [
																{
																	"nativeSrc": "3679:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3679:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3693:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3693:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3683:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3683:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3709:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3709:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3744:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3744:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3755:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3755:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3740:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3740:3:6"
																				},
																				"nativeSrc": "3740:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3740:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3764:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3764:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3719:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3719:20:6"
																		},
																		"nativeSrc": "3719:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3719:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3709:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3709:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3792:118:6",
															"nodeType": "YulBlock",
															"src": "3792:118:6",
															"statements": [
																{
																	"nativeSrc": "3807:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3807:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3821:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:6",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3811:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3811:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3837:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3837:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3872:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3872:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3883:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3883:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3868:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3868:3:6"
																				},
																				"nativeSrc": "3868:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3868:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3892:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3892:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3847:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3847:20:6"
																		},
																		"nativeSrc": "3847:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3847:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3837:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3837:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256",
												"nativeSrc": "3152:765:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:6",
														"nodeType": "YulTypedName",
														"src": "3215:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3226:7:6",
														"nodeType": "YulTypedName",
														"src": "3226:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3238:6:6",
														"nodeType": "YulTypedName",
														"src": "3238:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3246:6:6",
														"nodeType": "YulTypedName",
														"src": "3246:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3254:6:6",
														"nodeType": "YulTypedName",
														"src": "3254:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3262:6:6",
														"nodeType": "YulTypedName",
														"src": "3262:6:6",
														"type": ""
													}
												],
												"src": "3152:765:6"
											},
											{
												"body": {
													"nativeSrc": "3989:263:6",
													"nodeType": "YulBlock",
													"src": "3989:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4035:83:6",
																"nodeType": "YulBlock",
																"src": "4035:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4037:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4037:77:6"
																			},
																			"nativeSrc": "4037:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4037:79:6"
																		},
																		"nativeSrc": "4037:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4037:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4010:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4010:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4019:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4019:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4006:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4006:3:6"
																		},
																		"nativeSrc": "4006:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4006:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4031:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4031:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4002:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4002:3:6"
																},
																"nativeSrc": "4002:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4002:32:6"
															},
															"nativeSrc": "3999:119:6",
															"nodeType": "YulIf",
															"src": "3999:119:6"
														},
														{
															"nativeSrc": "4128:117:6",
															"nodeType": "YulBlock",
															"src": "4128:117:6",
															"statements": [
																{
																	"nativeSrc": "4143:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4143:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4157:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4157:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4147:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4147:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4172:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4172:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4207:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4207:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4218:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4218:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4203:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4203:3:6"
																				},
																				"nativeSrc": "4203:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4203:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4227:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4227:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4182:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4182:20:6"
																		},
																		"nativeSrc": "4182:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4182:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4172:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4172:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3923:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3959:9:6",
														"nodeType": "YulTypedName",
														"src": "3959:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3970:7:6",
														"nodeType": "YulTypedName",
														"src": "3970:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3982:6:6",
														"nodeType": "YulTypedName",
														"src": "3982:6:6",
														"type": ""
													}
												],
												"src": "3923:329:6"
											},
											{
												"body": {
													"nativeSrc": "4468:454:6",
													"nodeType": "YulBlock",
													"src": "4468:454:6",
													"statements": [
														{
															"nativeSrc": "4478:27:6",
															"nodeType": "YulAssignment",
															"src": "4478:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4490:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4490:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4501:3:6",
																		"nodeType": "YulLiteral",
																		"src": "4501:3:6",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4486:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4486:3:6"
																},
																"nativeSrc": "4486:19:6",
																"nodeType": "YulFunctionCall",
																"src": "4486:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4478:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4478:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4559:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4559:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4572:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4572:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4583:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4583:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4568:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4568:3:6"
																		},
																		"nativeSrc": "4568:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4568:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4515:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4515:43:6"
																},
																"nativeSrc": "4515:71:6",
																"nodeType": "YulFunctionCall",
																"src": "4515:71:6"
															},
															"nativeSrc": "4515:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "4515:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4640:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4640:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4653:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4653:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4664:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4664:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4649:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4649:3:6"
																		},
																		"nativeSrc": "4649:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4649:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4596:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4596:43:6"
																},
																"nativeSrc": "4596:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4596:72:6"
															},
															"nativeSrc": "4596:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4596:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4722:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4722:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4735:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4735:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4746:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4746:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4731:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:6"
																		},
																		"nativeSrc": "4731:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4731:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4678:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4678:43:6"
																},
																"nativeSrc": "4678:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4678:72:6"
															},
															"nativeSrc": "4678:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4678:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4804:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4804:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4817:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4828:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4828:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4813:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4813:3:6"
																		},
																		"nativeSrc": "4813:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4813:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4760:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4760:43:6"
																},
																"nativeSrc": "4760:72:6",
																"nodeType": "YulFunctionCall",
																"src": "4760:72:6"
															},
															"nativeSrc": "4760:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "4760:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4886:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4886:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4899:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4899:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4910:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4910:3:6",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4895:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:6"
																		},
																		"nativeSrc": "4895:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:19:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4842:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4842:43:6"
																},
																"nativeSrc": "4842:73:6",
																"nodeType": "YulFunctionCall",
																"src": "4842:73:6"
															},
															"nativeSrc": "4842:73:6",
															"nodeType": "YulExpressionStatement",
															"src": "4842:73:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4258:664:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4408:9:6",
														"nodeType": "YulTypedName",
														"src": "4408:9:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4420:6:6",
														"nodeType": "YulTypedName",
														"src": "4420:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4428:6:6",
														"nodeType": "YulTypedName",
														"src": "4428:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4436:6:6",
														"nodeType": "YulTypedName",
														"src": "4436:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4444:6:6",
														"nodeType": "YulTypedName",
														"src": "4444:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4452:6:6",
														"nodeType": "YulTypedName",
														"src": "4452:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4463:4:6",
														"nodeType": "YulTypedName",
														"src": "4463:4:6",
														"type": ""
													}
												],
												"src": "4258:664:6"
											},
											{
												"body": {
													"nativeSrc": "5024:73:6",
													"nodeType": "YulBlock",
													"src": "5024:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5041:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5041:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5046:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5046:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5034:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5034:6:6"
																},
																"nativeSrc": "5034:19:6",
																"nodeType": "YulFunctionCall",
																"src": "5034:19:6"
															},
															"nativeSrc": "5034:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "5034:19:6"
														},
														{
															"nativeSrc": "5062:29:6",
															"nodeType": "YulAssignment",
															"src": "5062:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5081:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5081:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5086:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5086:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5077:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5077:3:6"
																},
																"nativeSrc": "5077:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5077:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5062:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "5062:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4928:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4996:3:6",
														"nodeType": "YulTypedName",
														"src": "4996:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5001:6:6",
														"nodeType": "YulTypedName",
														"src": "5001:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5012:11:6",
														"nodeType": "YulTypedName",
														"src": "5012:11:6",
														"type": ""
													}
												],
												"src": "4928:169:6"
											},
											{
												"body": {
													"nativeSrc": "5209:66:6",
													"nodeType": "YulBlock",
													"src": "5209:66:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5231:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5231:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5239:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5239:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5227:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5227:3:6"
																		},
																		"nativeSrc": "5227:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5227:14:6"
																	},
																	{
																		"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "5243:24:6",
																		"nodeType": "YulLiteral",
																		"src": "5243:24:6",
																		"type": "",
																		"value": "Listing does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5220:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5220:6:6"
																},
																"nativeSrc": "5220:48:6",
																"nodeType": "YulFunctionCall",
																"src": "5220:48:6"
															},
															"nativeSrc": "5220:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "5220:48:6"
														}
													]
												},
												"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
												"nativeSrc": "5103:172:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5201:6:6",
														"nodeType": "YulTypedName",
														"src": "5201:6:6",
														"type": ""
													}
												],
												"src": "5103:172:6"
											},
											{
												"body": {
													"nativeSrc": "5427:220:6",
													"nodeType": "YulBlock",
													"src": "5427:220:6",
													"statements": [
														{
															"nativeSrc": "5437:74:6",
															"nodeType": "YulAssignment",
															"src": "5437:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5503:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5503:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5508:2:6",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5444:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5444:58:6"
																},
																"nativeSrc": "5444:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5444:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5437:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5437:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5609:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5609:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																	"nativeSrc": "5520:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "5520:88:6"
																},
																"nativeSrc": "5520:93:6",
																"nodeType": "YulFunctionCall",
																"src": "5520:93:6"
															},
															"nativeSrc": "5520:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "5520:93:6"
														},
														{
															"nativeSrc": "5622:19:6",
															"nodeType": "YulAssignment",
															"src": "5622:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5633:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5633:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5638:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5629:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5629:3:6"
																},
																"nativeSrc": "5629:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5629:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5622:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5622:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5281:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5415:3:6",
														"nodeType": "YulTypedName",
														"src": "5415:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5423:3:6",
														"nodeType": "YulTypedName",
														"src": "5423:3:6",
														"type": ""
													}
												],
												"src": "5281:366:6"
											},
											{
												"body": {
													"nativeSrc": "5824:248:6",
													"nodeType": "YulBlock",
													"src": "5824:248:6",
													"statements": [
														{
															"nativeSrc": "5834:26:6",
															"nodeType": "YulAssignment",
															"src": "5834:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5846:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5846:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5857:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5857:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5842:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5842:3:6"
																},
																"nativeSrc": "5842:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5842:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5834:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5834:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5881:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5881:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5892:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5892:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5877:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5877:3:6"
																		},
																		"nativeSrc": "5877:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5877:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5900:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5900:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5906:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5906:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5896:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5896:3:6"
																		},
																		"nativeSrc": "5896:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5896:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5870:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:6"
																},
																"nativeSrc": "5870:47:6",
																"nodeType": "YulFunctionCall",
																"src": "5870:47:6"
															},
															"nativeSrc": "5870:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "5870:47:6"
														},
														{
															"nativeSrc": "5926:139:6",
															"nodeType": "YulAssignment",
															"src": "5926:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6060:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6060:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5934:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "5934:124:6"
																},
																"nativeSrc": "5934:131:6",
																"nodeType": "YulFunctionCall",
																"src": "5934:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5926:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5926:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5653:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5804:9:6",
														"nodeType": "YulTypedName",
														"src": "5804:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5819:4:6",
														"nodeType": "YulTypedName",
														"src": "5819:4:6",
														"type": ""
													}
												],
												"src": "5653:419:6"
											},
											{
												"body": {
													"nativeSrc": "6184:63:6",
													"nodeType": "YulBlock",
													"src": "6184:63:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6206:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6206:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6214:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6214:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6202:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:6"
																		},
																		"nativeSrc": "6202:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6202:14:6"
																	},
																	{
																		"hexValue": "4c697374696e67206861732065787069726564",
																		"kind": "string",
																		"nativeSrc": "6218:21:6",
																		"nodeType": "YulLiteral",
																		"src": "6218:21:6",
																		"type": "",
																		"value": "Listing has expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6195:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6195:6:6"
																},
																"nativeSrc": "6195:45:6",
																"nodeType": "YulFunctionCall",
																"src": "6195:45:6"
															},
															"nativeSrc": "6195:45:6",
															"nodeType": "YulExpressionStatement",
															"src": "6195:45:6"
														}
													]
												},
												"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
												"nativeSrc": "6078:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6176:6:6",
														"nodeType": "YulTypedName",
														"src": "6176:6:6",
														"type": ""
													}
												],
												"src": "6078:169:6"
											},
											{
												"body": {
													"nativeSrc": "6399:220:6",
													"nodeType": "YulBlock",
													"src": "6399:220:6",
													"statements": [
														{
															"nativeSrc": "6409:74:6",
															"nodeType": "YulAssignment",
															"src": "6409:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6475:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6480:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6480:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6416:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "6416:58:6"
																},
																"nativeSrc": "6416:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6416:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6409:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6409:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6581:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6581:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																	"nativeSrc": "6492:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "6492:88:6"
																},
																"nativeSrc": "6492:93:6",
																"nodeType": "YulFunctionCall",
																"src": "6492:93:6"
															},
															"nativeSrc": "6492:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "6492:93:6"
														},
														{
															"nativeSrc": "6594:19:6",
															"nodeType": "YulAssignment",
															"src": "6594:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6605:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6605:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6610:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6610:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6601:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6601:3:6"
																},
																"nativeSrc": "6601:12:6",
																"nodeType": "YulFunctionCall",
																"src": "6601:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6594:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6594:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6253:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6387:3:6",
														"nodeType": "YulTypedName",
														"src": "6387:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6395:3:6",
														"nodeType": "YulTypedName",
														"src": "6395:3:6",
														"type": ""
													}
												],
												"src": "6253:366:6"
											},
											{
												"body": {
													"nativeSrc": "6796:248:6",
													"nodeType": "YulBlock",
													"src": "6796:248:6",
													"statements": [
														{
															"nativeSrc": "6806:26:6",
															"nodeType": "YulAssignment",
															"src": "6806:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6818:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6818:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6814:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6814:3:6"
																},
																"nativeSrc": "6814:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6814:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6806:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6806:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6853:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6864:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6864:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6849:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6849:3:6"
																		},
																		"nativeSrc": "6849:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6849:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6872:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "6872:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6878:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6878:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6868:3:6"
																		},
																		"nativeSrc": "6868:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6868:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6842:6:6"
																},
																"nativeSrc": "6842:47:6",
																"nodeType": "YulFunctionCall",
																"src": "6842:47:6"
															},
															"nativeSrc": "6842:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "6842:47:6"
														},
														{
															"nativeSrc": "6898:139:6",
															"nodeType": "YulAssignment",
															"src": "6898:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7032:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "7032:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6906:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "6906:124:6"
																},
																"nativeSrc": "6906:131:6",
																"nodeType": "YulFunctionCall",
																"src": "6906:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6898:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6898:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6625:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6776:9:6",
														"nodeType": "YulTypedName",
														"src": "6776:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6791:4:6",
														"nodeType": "YulTypedName",
														"src": "6791:4:6",
														"type": ""
													}
												],
												"src": "6625:419:6"
											},
											{
												"body": {
													"nativeSrc": "7156:124:6",
													"nodeType": "YulBlock",
													"src": "7156:124:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7178:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7178:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7186:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7186:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7174:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7174:3:6"
																		},
																		"nativeSrc": "7174:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7174:14:6"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b",
																		"kind": "string",
																		"nativeSrc": "7190:34:6",
																		"nodeType": "YulLiteral",
																		"src": "7190:34:6",
																		"type": "",
																		"value": "Token amount is greater than tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7167:6:6"
																},
																"nativeSrc": "7167:58:6",
																"nodeType": "YulFunctionCall",
																"src": "7167:58:6"
															},
															"nativeSrc": "7167:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "7167:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7246:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7246:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7242:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7242:3:6"
																		},
																		"nativeSrc": "7242:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7242:15:6"
																	},
																	{
																		"hexValue": "656e73206f6e2073616c65",
																		"kind": "string",
																		"nativeSrc": "7259:13:6",
																		"nodeType": "YulLiteral",
																		"src": "7259:13:6",
																		"type": "",
																		"value": "ens on sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7235:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:6"
																},
																"nativeSrc": "7235:38:6",
																"nodeType": "YulFunctionCall",
																"src": "7235:38:6"
															},
															"nativeSrc": "7235:38:6",
															"nodeType": "YulExpressionStatement",
															"src": "7235:38:6"
														}
													]
												},
												"name": "store_literal_in_memory_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
												"nativeSrc": "7050:230:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7148:6:6",
														"nodeType": "YulTypedName",
														"src": "7148:6:6",
														"type": ""
													}
												],
												"src": "7050:230:6"
											},
											{
												"body": {
													"nativeSrc": "7432:220:6",
													"nodeType": "YulBlock",
													"src": "7432:220:6",
													"statements": [
														{
															"nativeSrc": "7442:74:6",
															"nodeType": "YulAssignment",
															"src": "7442:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7508:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7508:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7513:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7513:2:6",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7449:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7449:58:6"
																},
																"nativeSrc": "7449:67:6",
																"nodeType": "YulFunctionCall",
																"src": "7449:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7442:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7614:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7614:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
																	"nativeSrc": "7525:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "7525:88:6"
																},
																"nativeSrc": "7525:93:6",
																"nodeType": "YulFunctionCall",
																"src": "7525:93:6"
															},
															"nativeSrc": "7525:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "7525:93:6"
														},
														{
															"nativeSrc": "7627:19:6",
															"nodeType": "YulAssignment",
															"src": "7627:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7638:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7638:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7643:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7643:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7634:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7634:3:6"
																},
																"nativeSrc": "7634:12:6",
																"nodeType": "YulFunctionCall",
																"src": "7634:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7627:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7627:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7286:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7420:3:6",
														"nodeType": "YulTypedName",
														"src": "7420:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7428:3:6",
														"nodeType": "YulTypedName",
														"src": "7428:3:6",
														"type": ""
													}
												],
												"src": "7286:366:6"
											},
											{
												"body": {
													"nativeSrc": "7829:248:6",
													"nodeType": "YulBlock",
													"src": "7829:248:6",
													"statements": [
														{
															"nativeSrc": "7839:26:6",
															"nodeType": "YulAssignment",
															"src": "7839:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7851:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7851:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7862:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7862:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7847:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7847:3:6"
																},
																"nativeSrc": "7847:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7847:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7839:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7839:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7886:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7886:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7897:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7897:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:6"
																		},
																		"nativeSrc": "7882:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7905:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "7905:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7911:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7901:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:6"
																		},
																		"nativeSrc": "7901:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7901:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7875:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:6"
																},
																"nativeSrc": "7875:47:6",
																"nodeType": "YulFunctionCall",
																"src": "7875:47:6"
															},
															"nativeSrc": "7875:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "7875:47:6"
														},
														{
															"nativeSrc": "7931:139:6",
															"nodeType": "YulAssignment",
															"src": "7931:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8065:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8065:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7939:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "7939:124:6"
																},
																"nativeSrc": "7939:131:6",
																"nodeType": "YulFunctionCall",
																"src": "7939:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7931:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7931:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7658:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7809:9:6",
														"nodeType": "YulTypedName",
														"src": "7809:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7824:4:6",
														"nodeType": "YulTypedName",
														"src": "7824:4:6",
														"type": ""
													}
												],
												"src": "7658:419:6"
											},
											{
												"body": {
													"nativeSrc": "8111:152:6",
													"nodeType": "YulBlock",
													"src": "8111:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8128:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8128:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8131:77:6",
																		"nodeType": "YulLiteral",
																		"src": "8131:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8121:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8121:6:6"
																},
																"nativeSrc": "8121:88:6",
																"nodeType": "YulFunctionCall",
																"src": "8121:88:6"
															},
															"nativeSrc": "8121:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "8121:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8225:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8225:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8228:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8228:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8218:6:6"
																},
																"nativeSrc": "8218:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8218:15:6"
															},
															"nativeSrc": "8218:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8218:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8249:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8249:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8252:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8252:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8242:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:6"
																},
																"nativeSrc": "8242:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8242:15:6"
															},
															"nativeSrc": "8242:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "8242:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8083:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "8083:180:6"
											},
											{
												"body": {
													"nativeSrc": "8317:362:6",
													"nodeType": "YulBlock",
													"src": "8317:362:6",
													"statements": [
														{
															"nativeSrc": "8327:25:6",
															"nodeType": "YulAssignment",
															"src": "8327:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8350:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8350:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8332:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8332:17:6"
																},
																"nativeSrc": "8332:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8332:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8327:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8327:1:6"
																}
															]
														},
														{
															"nativeSrc": "8361:25:6",
															"nodeType": "YulAssignment",
															"src": "8361:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8384:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8384:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8366:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8366:17:6"
																},
																"nativeSrc": "8366:20:6",
																"nodeType": "YulFunctionCall",
																"src": "8366:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8361:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "8361:1:6"
																}
															]
														},
														{
															"nativeSrc": "8395:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8395:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8418:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8418:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8421:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "8421:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8414:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8414:3:6"
																},
																"nativeSrc": "8414:9:6",
																"nodeType": "YulFunctionCall",
																"src": "8414:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8399:11:6",
																	"nodeType": "YulTypedName",
																	"src": "8399:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8432:41:6",
															"nodeType": "YulAssignment",
															"src": "8432:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8461:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "8461:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8443:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "8443:17:6"
																},
																"nativeSrc": "8443:30:6",
																"nodeType": "YulFunctionCall",
																"src": "8443:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8432:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "8432:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8650:22:6",
																"nodeType": "YulBlock",
																"src": "8650:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8652:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "8652:16:6"
																			},
																			"nativeSrc": "8652:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8652:18:6"
																		},
																		"nativeSrc": "8652:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8652:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8583:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8583:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8576:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "8576:6:6"
																				},
																				"nativeSrc": "8576:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8576:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8606:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "8606:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8613:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "8613:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8622:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "8622:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8609:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "8609:3:6"
																						},
																						"nativeSrc": "8609:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "8609:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8603:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "8603:2:6"
																				},
																				"nativeSrc": "8603:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8603:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8556:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "8556:2:6"
																		},
																		"nativeSrc": "8556:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8556:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8536:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8536:6:6"
																},
																"nativeSrc": "8536:113:6",
																"nodeType": "YulFunctionCall",
																"src": "8536:113:6"
															},
															"nativeSrc": "8533:139:6",
															"nodeType": "YulIf",
															"src": "8533:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8269:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8300:1:6",
														"nodeType": "YulTypedName",
														"src": "8300:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8303:1:6",
														"nodeType": "YulTypedName",
														"src": "8303:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "8309:7:6",
														"nodeType": "YulTypedName",
														"src": "8309:7:6",
														"type": ""
													}
												],
												"src": "8269:410:6"
											},
											{
												"body": {
													"nativeSrc": "8791:64:6",
													"nodeType": "YulBlock",
													"src": "8791:64:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8813:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8821:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8821:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8809:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:6"
																		},
																		"nativeSrc": "8809:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8809:14:6"
																	},
																	{
																		"hexValue": "496e636f72726563742076616c75652073656e74",
																		"kind": "string",
																		"nativeSrc": "8825:22:6",
																		"nodeType": "YulLiteral",
																		"src": "8825:22:6",
																		"type": "",
																		"value": "Incorrect value sent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8802:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8802:6:6"
																},
																"nativeSrc": "8802:46:6",
																"nodeType": "YulFunctionCall",
																"src": "8802:46:6"
															},
															"nativeSrc": "8802:46:6",
															"nodeType": "YulExpressionStatement",
															"src": "8802:46:6"
														}
													]
												},
												"name": "store_literal_in_memory_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
												"nativeSrc": "8685:170:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8783:6:6",
														"nodeType": "YulTypedName",
														"src": "8783:6:6",
														"type": ""
													}
												],
												"src": "8685:170:6"
											},
											{
												"body": {
													"nativeSrc": "9007:220:6",
													"nodeType": "YulBlock",
													"src": "9007:220:6",
													"statements": [
														{
															"nativeSrc": "9017:74:6",
															"nodeType": "YulAssignment",
															"src": "9017:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9083:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9083:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9088:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9088:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9024:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "9024:58:6"
																},
																"nativeSrc": "9024:67:6",
																"nodeType": "YulFunctionCall",
																"src": "9024:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9017:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9017:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9189:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9189:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
																	"nativeSrc": "9100:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "9100:88:6"
																},
																"nativeSrc": "9100:93:6",
																"nodeType": "YulFunctionCall",
																"src": "9100:93:6"
															},
															"nativeSrc": "9100:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "9100:93:6"
														},
														{
															"nativeSrc": "9202:19:6",
															"nodeType": "YulAssignment",
															"src": "9202:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9213:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9213:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9218:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9218:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9209:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:3:6"
																},
																"nativeSrc": "9209:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9209:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9202:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9202:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8861:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8995:3:6",
														"nodeType": "YulTypedName",
														"src": "8995:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9003:3:6",
														"nodeType": "YulTypedName",
														"src": "9003:3:6",
														"type": ""
													}
												],
												"src": "8861:366:6"
											},
											{
												"body": {
													"nativeSrc": "9404:248:6",
													"nodeType": "YulBlock",
													"src": "9404:248:6",
													"statements": [
														{
															"nativeSrc": "9414:26:6",
															"nodeType": "YulAssignment",
															"src": "9414:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9426:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "9426:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9437:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9437:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9422:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9422:3:6"
																},
																"nativeSrc": "9422:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9422:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9414:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9414:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9461:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9461:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9472:1:6",
																				"nodeType": "YulLiteral",
																				"src": "9472:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9457:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9457:3:6"
																		},
																		"nativeSrc": "9457:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9457:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9480:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9480:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9486:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9486:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9476:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:6"
																		},
																		"nativeSrc": "9476:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9476:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9450:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9450:6:6"
																},
																"nativeSrc": "9450:47:6",
																"nodeType": "YulFunctionCall",
																"src": "9450:47:6"
															},
															"nativeSrc": "9450:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "9450:47:6"
														},
														{
															"nativeSrc": "9506:139:6",
															"nodeType": "YulAssignment",
															"src": "9506:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9640:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9640:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9514:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "9514:124:6"
																},
																"nativeSrc": "9514:131:6",
																"nodeType": "YulFunctionCall",
																"src": "9514:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9506:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9506:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9233:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9384:9:6",
														"nodeType": "YulTypedName",
														"src": "9384:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9399:4:6",
														"nodeType": "YulTypedName",
														"src": "9399:4:6",
														"type": ""
													}
												],
												"src": "9233:419:6"
											},
											{
												"body": {
													"nativeSrc": "9686:152:6",
													"nodeType": "YulBlock",
													"src": "9686:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9703:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9706:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9706:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9696:6:6"
																},
																"nativeSrc": "9696:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9696:88:6"
															},
															"nativeSrc": "9696:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9696:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9800:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9800:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9803:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9803:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9793:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9793:6:6"
																},
																"nativeSrc": "9793:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9793:15:6"
															},
															"nativeSrc": "9793:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9793:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9824:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9824:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9827:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9827:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9817:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9817:6:6"
																},
																"nativeSrc": "9817:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9817:15:6"
															},
															"nativeSrc": "9817:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9817:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9658:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9658:180:6"
											},
											{
												"body": {
													"nativeSrc": "9886:143:6",
													"nodeType": "YulBlock",
													"src": "9886:143:6",
													"statements": [
														{
															"nativeSrc": "9896:25:6",
															"nodeType": "YulAssignment",
															"src": "9896:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9919:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9919:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9901:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9901:17:6"
																},
																"nativeSrc": "9901:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9901:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9896:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9896:1:6"
																}
															]
														},
														{
															"nativeSrc": "9930:25:6",
															"nodeType": "YulAssignment",
															"src": "9930:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9953:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9953:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9935:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9935:17:6"
																},
																"nativeSrc": "9935:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9935:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9930:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9930:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9977:22:6",
																"nodeType": "YulBlock",
																"src": "9977:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9979:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9979:16:6"
																			},
																			"nativeSrc": "9979:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9979:18:6"
																		},
																		"nativeSrc": "9979:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9979:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9974:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9974:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9967:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9967:6:6"
																},
																"nativeSrc": "9967:9:6",
																"nodeType": "YulFunctionCall",
																"src": "9967:9:6"
															},
															"nativeSrc": "9964:35:6",
															"nodeType": "YulIf",
															"src": "9964:35:6"
														},
														{
															"nativeSrc": "10009:14:6",
															"nodeType": "YulAssignment",
															"src": "10009:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10018:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10018:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10021:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10021:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10014:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10014:3:6"
																},
																"nativeSrc": "10014:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10014:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10009:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10009:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9844:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9875:1:6",
														"nodeType": "YulTypedName",
														"src": "9875:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9878:1:6",
														"nodeType": "YulTypedName",
														"src": "9878:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9884:1:6",
														"nodeType": "YulTypedName",
														"src": "9884:1:6",
														"type": ""
													}
												],
												"src": "9844:185:6"
											},
											{
												"body": {
													"nativeSrc": "10080:149:6",
													"nodeType": "YulBlock",
													"src": "10080:149:6",
													"statements": [
														{
															"nativeSrc": "10090:25:6",
															"nodeType": "YulAssignment",
															"src": "10090:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10113:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10113:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10095:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10095:17:6"
																},
																"nativeSrc": "10095:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10095:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10090:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10090:1:6"
																}
															]
														},
														{
															"nativeSrc": "10124:25:6",
															"nodeType": "YulAssignment",
															"src": "10124:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10147:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10147:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10129:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10129:17:6"
																},
																"nativeSrc": "10129:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10129:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10124:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10124:1:6"
																}
															]
														},
														{
															"nativeSrc": "10158:17:6",
															"nodeType": "YulAssignment",
															"src": "10158:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10170:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10170:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10173:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10173:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10166:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10166:3:6"
																},
																"nativeSrc": "10166:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10166:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10158:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10158:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10200:22:6",
																"nodeType": "YulBlock",
																"src": "10200:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10202:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10202:16:6"
																			},
																			"nativeSrc": "10202:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10202:18:6"
																		},
																		"nativeSrc": "10202:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10202:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10191:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10191:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10197:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10197:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10188:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10188:2:6"
																},
																"nativeSrc": "10188:11:6",
																"nodeType": "YulFunctionCall",
																"src": "10188:11:6"
															},
															"nativeSrc": "10185:37:6",
															"nodeType": "YulIf",
															"src": "10185:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10035:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10066:1:6",
														"nodeType": "YulTypedName",
														"src": "10066:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10069:1:6",
														"nodeType": "YulTypedName",
														"src": "10069:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10075:4:6",
														"nodeType": "YulTypedName",
														"src": "10075:4:6",
														"type": ""
													}
												],
												"src": "10035:194:6"
											},
											{
												"body": {
													"nativeSrc": "10361:206:6",
													"nodeType": "YulBlock",
													"src": "10361:206:6",
													"statements": [
														{
															"nativeSrc": "10371:26:6",
															"nodeType": "YulAssignment",
															"src": "10371:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10383:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10383:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10394:2:6",
																		"nodeType": "YulLiteral",
																		"src": "10394:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10379:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10379:3:6"
																},
																"nativeSrc": "10379:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10379:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10371:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "10371:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10451:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10451:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10464:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10464:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10475:1:6",
																				"nodeType": "YulLiteral",
																				"src": "10475:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10460:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10460:3:6"
																		},
																		"nativeSrc": "10460:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10460:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10407:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10407:43:6"
																},
																"nativeSrc": "10407:71:6",
																"nodeType": "YulFunctionCall",
																"src": "10407:71:6"
															},
															"nativeSrc": "10407:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "10407:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10532:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10532:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "10545:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10556:2:6",
																				"nodeType": "YulLiteral",
																				"src": "10556:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10541:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10541:3:6"
																		},
																		"nativeSrc": "10541:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10541:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10488:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "10488:43:6"
																},
																"nativeSrc": "10488:72:6",
																"nodeType": "YulFunctionCall",
																"src": "10488:72:6"
															},
															"nativeSrc": "10488:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "10488:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10235:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10325:9:6",
														"nodeType": "YulTypedName",
														"src": "10325:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10337:6:6",
														"nodeType": "YulTypedName",
														"src": "10337:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10345:6:6",
														"nodeType": "YulTypedName",
														"src": "10345:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10356:4:6",
														"nodeType": "YulTypedName",
														"src": "10356:4:6",
														"type": ""
													}
												],
												"src": "10235:332:6"
											},
											{
												"body": {
													"nativeSrc": "10615:48:6",
													"nodeType": "YulBlock",
													"src": "10615:48:6",
													"statements": [
														{
															"nativeSrc": "10625:32:6",
															"nodeType": "YulAssignment",
															"src": "10625:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10650:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10650:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "10643:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "10643:6:6"
																		},
																		"nativeSrc": "10643:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10643:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10636:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10636:6:6"
																},
																"nativeSrc": "10636:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10636:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "10625:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "10625:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "10573:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10597:5:6",
														"nodeType": "YulTypedName",
														"src": "10597:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "10607:7:6",
														"nodeType": "YulTypedName",
														"src": "10607:7:6",
														"type": ""
													}
												],
												"src": "10573:90:6"
											},
											{
												"body": {
													"nativeSrc": "10709:76:6",
													"nodeType": "YulBlock",
													"src": "10709:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "10763:16:6",
																"nodeType": "YulBlock",
																"src": "10763:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10772:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10772:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10775:1:6",
																					"nodeType": "YulLiteral",
																					"src": "10775:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10765:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10765:6:6"
																			},
																			"nativeSrc": "10765:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10765:12:6"
																		},
																		"nativeSrc": "10765:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10765:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10732:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "10732:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10754:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "10754:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10739:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "10739:14:6"
																				},
																				"nativeSrc": "10739:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10739:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10729:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10729:2:6"
																		},
																		"nativeSrc": "10729:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10729:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10722:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10722:6:6"
																},
																"nativeSrc": "10722:40:6",
																"nodeType": "YulFunctionCall",
																"src": "10722:40:6"
															},
															"nativeSrc": "10719:60:6",
															"nodeType": "YulIf",
															"src": "10719:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10669:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10702:5:6",
														"nodeType": "YulTypedName",
														"src": "10702:5:6",
														"type": ""
													}
												],
												"src": "10669:116:6"
											},
											{
												"body": {
													"nativeSrc": "10851:77:6",
													"nodeType": "YulBlock",
													"src": "10851:77:6",
													"statements": [
														{
															"nativeSrc": "10861:22:6",
															"nodeType": "YulAssignment",
															"src": "10861:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10876:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "10876:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10870:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10870:5:6"
																},
																"nativeSrc": "10870:13:6",
																"nodeType": "YulFunctionCall",
																"src": "10870:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10861:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10861:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10916:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10916:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10892:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "10892:23:6"
																},
																"nativeSrc": "10892:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10892:30:6"
															},
															"nativeSrc": "10892:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "10892:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10791:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10829:6:6",
														"nodeType": "YulTypedName",
														"src": "10829:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10837:3:6",
														"nodeType": "YulTypedName",
														"src": "10837:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10845:5:6",
														"nodeType": "YulTypedName",
														"src": "10845:5:6",
														"type": ""
													}
												],
												"src": "10791:137:6"
											},
											{
												"body": {
													"nativeSrc": "11008:271:6",
													"nodeType": "YulBlock",
													"src": "11008:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11054:83:6",
																"nodeType": "YulBlock",
																"src": "11054:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11056:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "11056:77:6"
																			},
																			"nativeSrc": "11056:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11056:79:6"
																		},
																		"nativeSrc": "11056:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11056:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11029:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11038:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11038:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11025:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11025:3:6"
																		},
																		"nativeSrc": "11025:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11025:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11050:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11050:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11021:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11021:3:6"
																},
																"nativeSrc": "11021:32:6",
																"nodeType": "YulFunctionCall",
																"src": "11021:32:6"
															},
															"nativeSrc": "11018:119:6",
															"nodeType": "YulIf",
															"src": "11018:119:6"
														},
														{
															"nativeSrc": "11147:125:6",
															"nodeType": "YulBlock",
															"src": "11147:125:6",
															"statements": [
																{
																	"nativeSrc": "11162:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11162:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11176:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11176:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11166:6:6",
																			"nodeType": "YulTypedName",
																			"src": "11166:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11191:71:6",
																	"nodeType": "YulAssignment",
																	"src": "11191:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11234:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "11234:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11245:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "11245:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11230:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "11230:3:6"
																				},
																				"nativeSrc": "11230:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "11230:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11254:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "11254:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "11201:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "11201:28:6"
																		},
																		"nativeSrc": "11201:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11201:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11191:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "11191:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10934:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10978:9:6",
														"nodeType": "YulTypedName",
														"src": "10978:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10989:7:6",
														"nodeType": "YulTypedName",
														"src": "10989:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11001:6:6",
														"nodeType": "YulTypedName",
														"src": "11001:6:6",
														"type": ""
													}
												],
												"src": "10934:345:6"
											},
											{
												"body": {
													"nativeSrc": "11391:65:6",
													"nodeType": "YulBlock",
													"src": "11391:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11413:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11413:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11421:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11421:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11409:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11409:3:6"
																		},
																		"nativeSrc": "11409:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11409:14:6"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "11425:23:6",
																		"nodeType": "YulLiteral",
																		"src": "11425:23:6",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11402:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11402:6:6"
																},
																"nativeSrc": "11402:47:6",
																"nodeType": "YulFunctionCall",
																"src": "11402:47:6"
															},
															"nativeSrc": "11402:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "11402:47:6"
														}
													]
												},
												"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
												"nativeSrc": "11285:171:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11383:6:6",
														"nodeType": "YulTypedName",
														"src": "11383:6:6",
														"type": ""
													}
												],
												"src": "11285:171:6"
											},
											{
												"body": {
													"nativeSrc": "11608:220:6",
													"nodeType": "YulBlock",
													"src": "11608:220:6",
													"statements": [
														{
															"nativeSrc": "11618:74:6",
															"nodeType": "YulAssignment",
															"src": "11618:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11684:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11684:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11689:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11689:2:6",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11625:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "11625:58:6"
																},
																"nativeSrc": "11625:67:6",
																"nodeType": "YulFunctionCall",
																"src": "11625:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11618:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11618:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11790:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11790:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																	"nativeSrc": "11701:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "11701:88:6"
																},
																"nativeSrc": "11701:93:6",
																"nodeType": "YulFunctionCall",
																"src": "11701:93:6"
															},
															"nativeSrc": "11701:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "11701:93:6"
														},
														{
															"nativeSrc": "11803:19:6",
															"nodeType": "YulAssignment",
															"src": "11803:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11814:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11814:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11819:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11819:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11810:3:6"
																},
																"nativeSrc": "11810:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11810:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11803:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11462:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11596:3:6",
														"nodeType": "YulTypedName",
														"src": "11596:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11604:3:6",
														"nodeType": "YulTypedName",
														"src": "11604:3:6",
														"type": ""
													}
												],
												"src": "11462:366:6"
											},
											{
												"body": {
													"nativeSrc": "12005:248:6",
													"nodeType": "YulBlock",
													"src": "12005:248:6",
													"statements": [
														{
															"nativeSrc": "12015:26:6",
															"nodeType": "YulAssignment",
															"src": "12015:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12027:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12027:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12038:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12023:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12023:3:6"
																},
																"nativeSrc": "12023:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12023:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12015:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12015:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12062:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12062:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12073:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12073:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12058:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12058:3:6"
																		},
																		"nativeSrc": "12058:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12058:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12081:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12081:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12087:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12087:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12077:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12077:3:6"
																		},
																		"nativeSrc": "12077:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12077:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12051:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12051:6:6"
																},
																"nativeSrc": "12051:47:6",
																"nodeType": "YulFunctionCall",
																"src": "12051:47:6"
															},
															"nativeSrc": "12051:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "12051:47:6"
														},
														{
															"nativeSrc": "12107:139:6",
															"nodeType": "YulAssignment",
															"src": "12107:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12241:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12241:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12115:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "12115:124:6"
																},
																"nativeSrc": "12115:131:6",
																"nodeType": "YulFunctionCall",
																"src": "12115:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12107:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12107:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11834:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11985:9:6",
														"nodeType": "YulTypedName",
														"src": "11985:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12000:4:6",
														"nodeType": "YulTypedName",
														"src": "12000:4:6",
														"type": ""
													}
												],
												"src": "11834:419:6"
											},
											{
												"body": {
													"nativeSrc": "12365:68:6",
													"nodeType": "YulBlock",
													"src": "12365:68:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12387:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12387:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12395:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12395:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12383:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12383:3:6"
																		},
																		"nativeSrc": "12383:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12383:14:6"
																	},
																	{
																		"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "12399:26:6",
																		"nodeType": "YulLiteral",
																		"src": "12399:26:6",
																		"type": "",
																		"value": "Incorrect payment amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12376:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12376:6:6"
																},
																"nativeSrc": "12376:50:6",
																"nodeType": "YulFunctionCall",
																"src": "12376:50:6"
															},
															"nativeSrc": "12376:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "12376:50:6"
														}
													]
												},
												"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
												"nativeSrc": "12259:174:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12357:6:6",
														"nodeType": "YulTypedName",
														"src": "12357:6:6",
														"type": ""
													}
												],
												"src": "12259:174:6"
											},
											{
												"body": {
													"nativeSrc": "12585:220:6",
													"nodeType": "YulBlock",
													"src": "12585:220:6",
													"statements": [
														{
															"nativeSrc": "12595:74:6",
															"nodeType": "YulAssignment",
															"src": "12595:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12661:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12661:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12666:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12666:2:6",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12602:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "12602:58:6"
																},
																"nativeSrc": "12602:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12602:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12595:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12595:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12767:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12767:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																	"nativeSrc": "12678:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "12678:88:6"
																},
																"nativeSrc": "12678:93:6",
																"nodeType": "YulFunctionCall",
																"src": "12678:93:6"
															},
															"nativeSrc": "12678:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "12678:93:6"
														},
														{
															"nativeSrc": "12780:19:6",
															"nodeType": "YulAssignment",
															"src": "12780:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12791:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12791:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12796:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12796:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12787:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12787:3:6"
																},
																"nativeSrc": "12787:12:6",
																"nodeType": "YulFunctionCall",
																"src": "12787:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12780:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12780:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12439:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12573:3:6",
														"nodeType": "YulTypedName",
														"src": "12573:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12581:3:6",
														"nodeType": "YulTypedName",
														"src": "12581:3:6",
														"type": ""
													}
												],
												"src": "12439:366:6"
											},
											{
												"body": {
													"nativeSrc": "12982:248:6",
													"nodeType": "YulBlock",
													"src": "12982:248:6",
													"statements": [
														{
															"nativeSrc": "12992:26:6",
															"nodeType": "YulAssignment",
															"src": "12992:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13004:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13004:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13015:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13015:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13000:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13000:3:6"
																},
																"nativeSrc": "13000:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13000:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12992:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12992:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13039:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13039:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13050:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13050:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13035:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13035:3:6"
																		},
																		"nativeSrc": "13035:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13035:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13058:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "13058:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13064:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13064:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13054:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13054:3:6"
																		},
																		"nativeSrc": "13054:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13054:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13028:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "13028:6:6"
																},
																"nativeSrc": "13028:47:6",
																"nodeType": "YulFunctionCall",
																"src": "13028:47:6"
															},
															"nativeSrc": "13028:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "13028:47:6"
														},
														{
															"nativeSrc": "13084:139:6",
															"nodeType": "YulAssignment",
															"src": "13084:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13218:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "13218:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13092:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "13092:124:6"
																},
																"nativeSrc": "13092:131:6",
																"nodeType": "YulFunctionCall",
																"src": "13092:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13084:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13084:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12811:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12962:9:6",
														"nodeType": "YulTypedName",
														"src": "12962:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12977:4:6",
														"nodeType": "YulTypedName",
														"src": "12977:4:6",
														"type": ""
													}
												],
												"src": "12811:419:6"
											},
											{
												"body": {
													"nativeSrc": "13362:206:6",
													"nodeType": "YulBlock",
													"src": "13362:206:6",
													"statements": [
														{
															"nativeSrc": "13372:26:6",
															"nodeType": "YulAssignment",
															"src": "13372:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13384:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13384:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13395:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13380:3:6"
																},
																"nativeSrc": "13380:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13380:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13372:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13372:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13452:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13452:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13465:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13465:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13476:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13476:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13461:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13461:3:6"
																		},
																		"nativeSrc": "13461:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13461:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13408:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13408:43:6"
																},
																"nativeSrc": "13408:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13408:71:6"
															},
															"nativeSrc": "13408:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13408:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13533:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13533:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13546:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13546:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13557:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13557:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13542:3:6"
																		},
																		"nativeSrc": "13542:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13542:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13489:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13489:43:6"
																},
																"nativeSrc": "13489:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13489:72:6"
															},
															"nativeSrc": "13489:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13489:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "13236:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13326:9:6",
														"nodeType": "YulTypedName",
														"src": "13326:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13338:6:6",
														"nodeType": "YulTypedName",
														"src": "13338:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13346:6:6",
														"nodeType": "YulTypedName",
														"src": "13346:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13357:4:6",
														"nodeType": "YulTypedName",
														"src": "13357:4:6",
														"type": ""
													}
												],
												"src": "13236:332:6"
											},
											{
												"body": {
													"nativeSrc": "13637:80:6",
													"nodeType": "YulBlock",
													"src": "13637:80:6",
													"statements": [
														{
															"nativeSrc": "13647:22:6",
															"nodeType": "YulAssignment",
															"src": "13647:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13662:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13662:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13656:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13656:5:6"
																},
																"nativeSrc": "13656:13:6",
																"nodeType": "YulFunctionCall",
																"src": "13656:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13647:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "13647:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13705:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "13705:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "13678:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "13678:26:6"
																},
																"nativeSrc": "13678:33:6",
																"nodeType": "YulFunctionCall",
																"src": "13678:33:6"
															},
															"nativeSrc": "13678:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "13678:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "13574:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13615:6:6",
														"nodeType": "YulTypedName",
														"src": "13615:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13623:3:6",
														"nodeType": "YulTypedName",
														"src": "13623:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13631:5:6",
														"nodeType": "YulTypedName",
														"src": "13631:5:6",
														"type": ""
													}
												],
												"src": "13574:143:6"
											},
											{
												"body": {
													"nativeSrc": "13800:274:6",
													"nodeType": "YulBlock",
													"src": "13800:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "13846:83:6",
																"nodeType": "YulBlock",
																"src": "13846:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13848:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "13848:77:6"
																			},
																			"nativeSrc": "13848:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13848:79:6"
																		},
																		"nativeSrc": "13848:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13848:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13821:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13821:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13830:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13830:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13817:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13817:3:6"
																		},
																		"nativeSrc": "13817:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13817:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13842:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13842:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13813:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13813:3:6"
																},
																"nativeSrc": "13813:32:6",
																"nodeType": "YulFunctionCall",
																"src": "13813:32:6"
															},
															"nativeSrc": "13810:119:6",
															"nodeType": "YulIf",
															"src": "13810:119:6"
														},
														{
															"nativeSrc": "13939:128:6",
															"nodeType": "YulBlock",
															"src": "13939:128:6",
															"statements": [
																{
																	"nativeSrc": "13954:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13954:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13968:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13968:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13958:6:6",
																			"nodeType": "YulTypedName",
																			"src": "13958:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13983:74:6",
																	"nodeType": "YulAssignment",
																	"src": "13983:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14029:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "14029:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14040:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "14040:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14025:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "14025:3:6"
																				},
																				"nativeSrc": "14025:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "14025:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14049:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "14049:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "13993:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "13993:31:6"
																		},
																		"nativeSrc": "13993:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13993:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13983:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "13983:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "13723:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13770:9:6",
														"nodeType": "YulTypedName",
														"src": "13770:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13781:7:6",
														"nodeType": "YulTypedName",
														"src": "13781:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13793:6:6",
														"nodeType": "YulTypedName",
														"src": "13793:6:6",
														"type": ""
													}
												],
												"src": "13723:351:6"
											},
											{
												"body": {
													"nativeSrc": "14186:75:6",
													"nodeType": "YulBlock",
													"src": "14186:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14208:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "14208:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14216:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14216:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14204:3:6"
																		},
																		"nativeSrc": "14204:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14204:14:6"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "14220:33:6",
																		"nodeType": "YulLiteral",
																		"src": "14220:33:6",
																		"type": "",
																		"value": "Payment token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14197:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14197:6:6"
																},
																"nativeSrc": "14197:57:6",
																"nodeType": "YulFunctionCall",
																"src": "14197:57:6"
															},
															"nativeSrc": "14197:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "14197:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
												"nativeSrc": "14080:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14178:6:6",
														"nodeType": "YulTypedName",
														"src": "14178:6:6",
														"type": ""
													}
												],
												"src": "14080:181:6"
											},
											{
												"body": {
													"nativeSrc": "14413:220:6",
													"nodeType": "YulBlock",
													"src": "14413:220:6",
													"statements": [
														{
															"nativeSrc": "14423:74:6",
															"nodeType": "YulAssignment",
															"src": "14423:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14489:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14489:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14494:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14494:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14430:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "14430:58:6"
																},
																"nativeSrc": "14430:67:6",
																"nodeType": "YulFunctionCall",
																"src": "14430:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14423:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14423:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14595:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14595:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																	"nativeSrc": "14506:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "14506:88:6"
																},
																"nativeSrc": "14506:93:6",
																"nodeType": "YulFunctionCall",
																"src": "14506:93:6"
															},
															"nativeSrc": "14506:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "14506:93:6"
														},
														{
															"nativeSrc": "14608:19:6",
															"nodeType": "YulAssignment",
															"src": "14608:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14619:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "14619:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14624:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14624:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14615:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14615:3:6"
																},
																"nativeSrc": "14615:12:6",
																"nodeType": "YulFunctionCall",
																"src": "14615:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14608:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14608:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14267:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14401:3:6",
														"nodeType": "YulTypedName",
														"src": "14401:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14409:3:6",
														"nodeType": "YulTypedName",
														"src": "14409:3:6",
														"type": ""
													}
												],
												"src": "14267:366:6"
											},
											{
												"body": {
													"nativeSrc": "14810:248:6",
													"nodeType": "YulBlock",
													"src": "14810:248:6",
													"statements": [
														{
															"nativeSrc": "14820:26:6",
															"nodeType": "YulAssignment",
															"src": "14820:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14832:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14832:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14843:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14843:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14828:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14828:3:6"
																},
																"nativeSrc": "14828:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14828:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14820:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14867:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14867:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14878:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14878:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14863:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14863:3:6"
																		},
																		"nativeSrc": "14863:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14863:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14886:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14886:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14892:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14892:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14882:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14882:3:6"
																		},
																		"nativeSrc": "14882:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14882:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14856:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14856:6:6"
																},
																"nativeSrc": "14856:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14856:47:6"
															},
															"nativeSrc": "14856:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14856:47:6"
														},
														{
															"nativeSrc": "14912:139:6",
															"nodeType": "YulAssignment",
															"src": "14912:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15046:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "15046:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14920:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "14920:124:6"
																},
																"nativeSrc": "14920:131:6",
																"nodeType": "YulFunctionCall",
																"src": "14920:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14912:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14912:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14639:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14790:9:6",
														"nodeType": "YulTypedName",
														"src": "14790:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14805:4:6",
														"nodeType": "YulTypedName",
														"src": "14805:4:6",
														"type": ""
													}
												],
												"src": "14639:419:6"
											},
											{
												"body": {
													"nativeSrc": "15218:288:6",
													"nodeType": "YulBlock",
													"src": "15218:288:6",
													"statements": [
														{
															"nativeSrc": "15228:26:6",
															"nodeType": "YulAssignment",
															"src": "15228:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15240:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "15240:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15251:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15251:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15236:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15236:3:6"
																},
																"nativeSrc": "15236:18:6",
																"nodeType": "YulFunctionCall",
																"src": "15236:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15228:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "15228:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15308:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15321:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15321:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15332:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15332:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15317:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15317:3:6"
																		},
																		"nativeSrc": "15317:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15317:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15264:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15264:43:6"
																},
																"nativeSrc": "15264:71:6",
																"nodeType": "YulFunctionCall",
																"src": "15264:71:6"
															},
															"nativeSrc": "15264:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "15264:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15389:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15389:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15402:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15402:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15413:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15413:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15398:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15398:3:6"
																		},
																		"nativeSrc": "15398:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15398:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15345:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15345:43:6"
																},
																"nativeSrc": "15345:72:6",
																"nodeType": "YulFunctionCall",
																"src": "15345:72:6"
															},
															"nativeSrc": "15345:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "15345:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15471:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "15471:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15484:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "15484:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15495:2:6",
																				"nodeType": "YulLiteral",
																				"src": "15495:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15480:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15480:3:6"
																		},
																		"nativeSrc": "15480:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15480:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15427:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "15427:43:6"
																},
																"nativeSrc": "15427:72:6",
																"nodeType": "YulFunctionCall",
																"src": "15427:72:6"
															},
															"nativeSrc": "15427:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "15427:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "15064:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15174:9:6",
														"nodeType": "YulTypedName",
														"src": "15174:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15186:6:6",
														"nodeType": "YulTypedName",
														"src": "15186:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15194:6:6",
														"nodeType": "YulTypedName",
														"src": "15194:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15202:6:6",
														"nodeType": "YulTypedName",
														"src": "15202:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15213:4:6",
														"nodeType": "YulTypedName",
														"src": "15213:4:6",
														"type": ""
													}
												],
												"src": "15064:442:6"
											},
											{
												"body": {
													"nativeSrc": "15618:70:6",
													"nodeType": "YulBlock",
													"src": "15618:70:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15640:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "15640:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15648:1:6",
																				"nodeType": "YulLiteral",
																				"src": "15648:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "15636:3:6"
																		},
																		"nativeSrc": "15636:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "15636:14:6"
																	},
																	{
																		"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "15652:28:6",
																		"nodeType": "YulLiteral",
																		"src": "15652:28:6",
																		"type": "",
																		"value": "Commission transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15629:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "15629:6:6"
																},
																"nativeSrc": "15629:52:6",
																"nodeType": "YulFunctionCall",
																"src": "15629:52:6"
															},
															"nativeSrc": "15629:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "15629:52:6"
														}
													]
												},
												"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
												"nativeSrc": "15512:176:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15610:6:6",
														"nodeType": "YulTypedName",
														"src": "15610:6:6",
														"type": ""
													}
												],
												"src": "15512:176:6"
											},
											{
												"body": {
													"nativeSrc": "15840:220:6",
													"nodeType": "YulBlock",
													"src": "15840:220:6",
													"statements": [
														{
															"nativeSrc": "15850:74:6",
															"nodeType": "YulAssignment",
															"src": "15850:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15916:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "15916:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15921:2:6",
																		"nodeType": "YulLiteral",
																		"src": "15921:2:6",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15857:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "15857:58:6"
																},
																"nativeSrc": "15857:67:6",
																"nodeType": "YulFunctionCall",
																"src": "15857:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15850:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "15850:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16022:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16022:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																	"nativeSrc": "15933:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "15933:88:6"
																},
																"nativeSrc": "15933:93:6",
																"nodeType": "YulFunctionCall",
																"src": "15933:93:6"
															},
															"nativeSrc": "15933:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "15933:93:6"
														},
														{
															"nativeSrc": "16035:19:6",
															"nodeType": "YulAssignment",
															"src": "16035:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16046:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16046:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16051:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16051:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16042:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16042:3:6"
																},
																"nativeSrc": "16042:12:6",
																"nodeType": "YulFunctionCall",
																"src": "16042:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16035:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16035:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15694:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15828:3:6",
														"nodeType": "YulTypedName",
														"src": "15828:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15836:3:6",
														"nodeType": "YulTypedName",
														"src": "15836:3:6",
														"type": ""
													}
												],
												"src": "15694:366:6"
											},
											{
												"body": {
													"nativeSrc": "16237:248:6",
													"nodeType": "YulBlock",
													"src": "16237:248:6",
													"statements": [
														{
															"nativeSrc": "16247:26:6",
															"nodeType": "YulAssignment",
															"src": "16247:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16259:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "16259:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16270:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16270:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16255:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16255:3:6"
																},
																"nativeSrc": "16255:18:6",
																"nodeType": "YulFunctionCall",
																"src": "16255:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16247:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16247:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16294:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16294:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16305:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16305:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16290:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16290:3:6"
																		},
																		"nativeSrc": "16290:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16290:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16313:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "16313:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16319:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "16319:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16309:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16309:3:6"
																		},
																		"nativeSrc": "16309:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16309:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16283:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16283:6:6"
																},
																"nativeSrc": "16283:47:6",
																"nodeType": "YulFunctionCall",
																"src": "16283:47:6"
															},
															"nativeSrc": "16283:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "16283:47:6"
														},
														{
															"nativeSrc": "16339:139:6",
															"nodeType": "YulAssignment",
															"src": "16339:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16473:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "16473:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16347:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "16347:124:6"
																},
																"nativeSrc": "16347:131:6",
																"nodeType": "YulFunctionCall",
																"src": "16347:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16339:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "16339:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16066:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16217:9:6",
														"nodeType": "YulTypedName",
														"src": "16217:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16232:4:6",
														"nodeType": "YulTypedName",
														"src": "16232:4:6",
														"type": ""
													}
												],
												"src": "16066:419:6"
											},
											{
												"body": {
													"nativeSrc": "16597:73:6",
													"nodeType": "YulBlock",
													"src": "16597:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16619:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "16619:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16627:1:6",
																				"nodeType": "YulLiteral",
																				"src": "16627:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16615:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "16615:3:6"
																		},
																		"nativeSrc": "16615:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "16615:14:6"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "16631:31:6",
																		"nodeType": "YulLiteral",
																		"src": "16631:31:6",
																		"type": "",
																		"value": "Payment token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16608:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "16608:6:6"
																},
																"nativeSrc": "16608:55:6",
																"nodeType": "YulFunctionCall",
																"src": "16608:55:6"
															},
															"nativeSrc": "16608:55:6",
															"nodeType": "YulExpressionStatement",
															"src": "16608:55:6"
														}
													]
												},
												"name": "store_literal_in_memory_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355",
												"nativeSrc": "16491:179:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16589:6:6",
														"nodeType": "YulTypedName",
														"src": "16589:6:6",
														"type": ""
													}
												],
												"src": "16491:179:6"
											},
											{
												"body": {
													"nativeSrc": "16822:220:6",
													"nodeType": "YulBlock",
													"src": "16822:220:6",
													"statements": [
														{
															"nativeSrc": "16832:74:6",
															"nodeType": "YulAssignment",
															"src": "16832:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16898:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "16898:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16903:2:6",
																		"nodeType": "YulLiteral",
																		"src": "16903:2:6",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16839:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "16839:58:6"
																},
																"nativeSrc": "16839:67:6",
																"nodeType": "YulFunctionCall",
																"src": "16839:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16832:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "16832:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17004:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17004:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355",
																	"nativeSrc": "16915:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "16915:88:6"
																},
																"nativeSrc": "16915:93:6",
																"nodeType": "YulFunctionCall",
																"src": "16915:93:6"
															},
															"nativeSrc": "16915:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "16915:93:6"
														},
														{
															"nativeSrc": "17017:19:6",
															"nodeType": "YulAssignment",
															"src": "17017:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17028:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17028:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17033:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17033:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17024:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17024:3:6"
																},
																"nativeSrc": "17024:12:6",
																"nodeType": "YulFunctionCall",
																"src": "17024:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17017:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17017:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16676:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16810:3:6",
														"nodeType": "YulTypedName",
														"src": "16810:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16818:3:6",
														"nodeType": "YulTypedName",
														"src": "16818:3:6",
														"type": ""
													}
												],
												"src": "16676:366:6"
											},
											{
												"body": {
													"nativeSrc": "17219:248:6",
													"nodeType": "YulBlock",
													"src": "17219:248:6",
													"statements": [
														{
															"nativeSrc": "17229:26:6",
															"nodeType": "YulAssignment",
															"src": "17229:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17241:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "17241:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17252:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17252:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17237:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17237:3:6"
																},
																"nativeSrc": "17237:18:6",
																"nodeType": "YulFunctionCall",
																"src": "17237:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17229:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17229:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17276:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17276:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17287:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17287:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17272:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17272:3:6"
																		},
																		"nativeSrc": "17272:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17272:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17295:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "17295:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17301:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "17301:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17291:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17291:3:6"
																		},
																		"nativeSrc": "17291:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17291:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17265:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17265:6:6"
																},
																"nativeSrc": "17265:47:6",
																"nodeType": "YulFunctionCall",
																"src": "17265:47:6"
															},
															"nativeSrc": "17265:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "17265:47:6"
														},
														{
															"nativeSrc": "17321:139:6",
															"nodeType": "YulAssignment",
															"src": "17321:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17455:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "17455:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17329:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "17329:124:6"
																},
																"nativeSrc": "17329:131:6",
																"nodeType": "YulFunctionCall",
																"src": "17329:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17321:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "17321:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17048:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17199:9:6",
														"nodeType": "YulTypedName",
														"src": "17199:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17214:4:6",
														"nodeType": "YulTypedName",
														"src": "17214:4:6",
														"type": ""
													}
												],
												"src": "17048:419:6"
											},
											{
												"body": {
													"nativeSrc": "17579:75:6",
													"nodeType": "YulBlock",
													"src": "17579:75:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17601:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "17601:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17609:1:6",
																				"nodeType": "YulLiteral",
																				"src": "17609:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17597:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "17597:3:6"
																		},
																		"nativeSrc": "17597:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "17597:14:6"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "17613:33:6",
																		"nodeType": "YulLiteral",
																		"src": "17613:33:6",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17590:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "17590:6:6"
																},
																"nativeSrc": "17590:57:6",
																"nodeType": "YulFunctionCall",
																"src": "17590:57:6"
															},
															"nativeSrc": "17590:57:6",
															"nodeType": "YulExpressionStatement",
															"src": "17590:57:6"
														}
													]
												},
												"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
												"nativeSrc": "17473:181:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17571:6:6",
														"nodeType": "YulTypedName",
														"src": "17571:6:6",
														"type": ""
													}
												],
												"src": "17473:181:6"
											},
											{
												"body": {
													"nativeSrc": "17806:220:6",
													"nodeType": "YulBlock",
													"src": "17806:220:6",
													"statements": [
														{
															"nativeSrc": "17816:74:6",
															"nodeType": "YulAssignment",
															"src": "17816:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17882:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17882:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17887:2:6",
																		"nodeType": "YulLiteral",
																		"src": "17887:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17823:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "17823:58:6"
																},
																"nativeSrc": "17823:67:6",
																"nodeType": "YulFunctionCall",
																"src": "17823:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17816:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "17816:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17988:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "17988:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																	"nativeSrc": "17899:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "17899:88:6"
																},
																"nativeSrc": "17899:93:6",
																"nodeType": "YulFunctionCall",
																"src": "17899:93:6"
															},
															"nativeSrc": "17899:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "17899:93:6"
														},
														{
															"nativeSrc": "18001:19:6",
															"nodeType": "YulAssignment",
															"src": "18001:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18012:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18012:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18017:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18017:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18008:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18008:3:6"
																},
																"nativeSrc": "18008:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18008:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18001:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18001:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17660:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17794:3:6",
														"nodeType": "YulTypedName",
														"src": "17794:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17802:3:6",
														"nodeType": "YulTypedName",
														"src": "17802:3:6",
														"type": ""
													}
												],
												"src": "17660:366:6"
											},
											{
												"body": {
													"nativeSrc": "18203:248:6",
													"nodeType": "YulBlock",
													"src": "18203:248:6",
													"statements": [
														{
															"nativeSrc": "18213:26:6",
															"nodeType": "YulAssignment",
															"src": "18213:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18225:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "18225:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18236:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18236:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18221:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18221:3:6"
																},
																"nativeSrc": "18221:18:6",
																"nodeType": "YulFunctionCall",
																"src": "18221:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18213:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18213:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18260:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18260:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18271:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18271:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18256:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18256:3:6"
																		},
																		"nativeSrc": "18256:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18256:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18279:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "18279:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18285:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "18285:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18275:3:6"
																		},
																		"nativeSrc": "18275:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18275:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18249:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18249:6:6"
																},
																"nativeSrc": "18249:47:6",
																"nodeType": "YulFunctionCall",
																"src": "18249:47:6"
															},
															"nativeSrc": "18249:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "18249:47:6"
														},
														{
															"nativeSrc": "18305:139:6",
															"nodeType": "YulAssignment",
															"src": "18305:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18439:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "18439:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18313:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "18313:124:6"
																},
																"nativeSrc": "18313:131:6",
																"nodeType": "YulFunctionCall",
																"src": "18313:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18305:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "18305:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18032:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18183:9:6",
														"nodeType": "YulTypedName",
														"src": "18183:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18198:4:6",
														"nodeType": "YulTypedName",
														"src": "18198:4:6",
														"type": ""
													}
												],
												"src": "18032:419:6"
											},
											{
												"body": {
													"nativeSrc": "18563:76:6",
													"nodeType": "YulBlock",
													"src": "18563:76:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18585:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "18585:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18593:1:6",
																				"nodeType": "YulLiteral",
																				"src": "18593:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18581:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "18581:3:6"
																		},
																		"nativeSrc": "18581:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "18581:14:6"
																	},
																	{
																		"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "18597:34:6",
																		"nodeType": "YulLiteral",
																		"src": "18597:34:6",
																		"type": "",
																		"value": "Tokens must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18574:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "18574:6:6"
																},
																"nativeSrc": "18574:58:6",
																"nodeType": "YulFunctionCall",
																"src": "18574:58:6"
															},
															"nativeSrc": "18574:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "18574:58:6"
														}
													]
												},
												"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
												"nativeSrc": "18457:182:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18555:6:6",
														"nodeType": "YulTypedName",
														"src": "18555:6:6",
														"type": ""
													}
												],
												"src": "18457:182:6"
											},
											{
												"body": {
													"nativeSrc": "18791:220:6",
													"nodeType": "YulBlock",
													"src": "18791:220:6",
													"statements": [
														{
															"nativeSrc": "18801:74:6",
															"nodeType": "YulAssignment",
															"src": "18801:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18867:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18867:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18872:2:6",
																		"nodeType": "YulLiteral",
																		"src": "18872:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18808:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "18808:58:6"
																},
																"nativeSrc": "18808:67:6",
																"nodeType": "YulFunctionCall",
																"src": "18808:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18801:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18973:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18973:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																	"nativeSrc": "18884:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "18884:88:6"
																},
																"nativeSrc": "18884:93:6",
																"nodeType": "YulFunctionCall",
																"src": "18884:93:6"
															},
															"nativeSrc": "18884:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "18884:93:6"
														},
														{
															"nativeSrc": "18986:19:6",
															"nodeType": "YulAssignment",
															"src": "18986:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18997:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "18997:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19002:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19002:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18993:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18993:3:6"
																},
																"nativeSrc": "18993:12:6",
																"nodeType": "YulFunctionCall",
																"src": "18993:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "18986:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18645:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18779:3:6",
														"nodeType": "YulTypedName",
														"src": "18779:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18787:3:6",
														"nodeType": "YulTypedName",
														"src": "18787:3:6",
														"type": ""
													}
												],
												"src": "18645:366:6"
											},
											{
												"body": {
													"nativeSrc": "19188:248:6",
													"nodeType": "YulBlock",
													"src": "19188:248:6",
													"statements": [
														{
															"nativeSrc": "19198:26:6",
															"nodeType": "YulAssignment",
															"src": "19198:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19210:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "19210:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19221:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19221:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19206:3:6"
																},
																"nativeSrc": "19206:18:6",
																"nodeType": "YulFunctionCall",
																"src": "19206:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19198:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19198:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19245:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19245:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19256:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19256:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19241:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19241:3:6"
																		},
																		"nativeSrc": "19241:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19241:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19264:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "19264:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19270:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "19270:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19260:3:6"
																		},
																		"nativeSrc": "19260:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19260:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19234:6:6"
																},
																"nativeSrc": "19234:47:6",
																"nodeType": "YulFunctionCall",
																"src": "19234:47:6"
															},
															"nativeSrc": "19234:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "19234:47:6"
														},
														{
															"nativeSrc": "19290:139:6",
															"nodeType": "YulAssignment",
															"src": "19290:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19424:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "19424:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19298:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "19298:124:6"
																},
																"nativeSrc": "19298:131:6",
																"nodeType": "YulFunctionCall",
																"src": "19298:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19290:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "19290:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19017:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19168:9:6",
														"nodeType": "YulTypedName",
														"src": "19168:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19183:4:6",
														"nodeType": "YulTypedName",
														"src": "19183:4:6",
														"type": ""
													}
												],
												"src": "19017:419:6"
											},
											{
												"body": {
													"nativeSrc": "19548:115:6",
													"nodeType": "YulBlock",
													"src": "19548:115:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19570:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "19570:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19578:1:6",
																				"nodeType": "YulLiteral",
																				"src": "19578:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19566:3:6"
																		},
																		"nativeSrc": "19566:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19566:14:6"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65",
																		"kind": "string",
																		"nativeSrc": "19582:34:6",
																		"nodeType": "YulLiteral",
																		"src": "19582:34:6",
																		"type": "",
																		"value": "Duration must be greater than ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19559:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19559:6:6"
																},
																"nativeSrc": "19559:58:6",
																"nodeType": "YulFunctionCall",
																"src": "19559:58:6"
															},
															"nativeSrc": "19559:58:6",
															"nodeType": "YulExpressionStatement",
															"src": "19559:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19638:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "19638:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19646:2:6",
																				"nodeType": "YulLiteral",
																				"src": "19646:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19634:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "19634:3:6"
																		},
																		"nativeSrc": "19634:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "19634:15:6"
																	},
																	{
																		"hexValue": "726f",
																		"kind": "string",
																		"nativeSrc": "19651:4:6",
																		"nodeType": "YulLiteral",
																		"src": "19651:4:6",
																		"type": "",
																		"value": "ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19627:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "19627:6:6"
																},
																"nativeSrc": "19627:29:6",
																"nodeType": "YulFunctionCall",
																"src": "19627:29:6"
															},
															"nativeSrc": "19627:29:6",
															"nodeType": "YulExpressionStatement",
															"src": "19627:29:6"
														}
													]
												},
												"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
												"nativeSrc": "19442:221:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19540:6:6",
														"nodeType": "YulTypedName",
														"src": "19540:6:6",
														"type": ""
													}
												],
												"src": "19442:221:6"
											},
											{
												"body": {
													"nativeSrc": "19815:220:6",
													"nodeType": "YulBlock",
													"src": "19815:220:6",
													"statements": [
														{
															"nativeSrc": "19825:74:6",
															"nodeType": "YulAssignment",
															"src": "19825:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19891:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19891:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19896:2:6",
																		"nodeType": "YulLiteral",
																		"src": "19896:2:6",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19832:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "19832:58:6"
																},
																"nativeSrc": "19832:67:6",
																"nodeType": "YulFunctionCall",
																"src": "19832:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "19825:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19997:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "19997:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																	"nativeSrc": "19908:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "19908:88:6"
																},
																"nativeSrc": "19908:93:6",
																"nodeType": "YulFunctionCall",
																"src": "19908:93:6"
															},
															"nativeSrc": "19908:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "19908:93:6"
														},
														{
															"nativeSrc": "20010:19:6",
															"nodeType": "YulAssignment",
															"src": "20010:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20021:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20021:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20026:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20026:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20017:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20017:3:6"
																},
																"nativeSrc": "20017:12:6",
																"nodeType": "YulFunctionCall",
																"src": "20017:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20010:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20010:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19669:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19803:3:6",
														"nodeType": "YulTypedName",
														"src": "19803:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19811:3:6",
														"nodeType": "YulTypedName",
														"src": "19811:3:6",
														"type": ""
													}
												],
												"src": "19669:366:6"
											},
											{
												"body": {
													"nativeSrc": "20212:248:6",
													"nodeType": "YulBlock",
													"src": "20212:248:6",
													"statements": [
														{
															"nativeSrc": "20222:26:6",
															"nodeType": "YulAssignment",
															"src": "20222:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20234:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "20234:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20245:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20245:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20230:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20230:3:6"
																},
																"nativeSrc": "20230:18:6",
																"nodeType": "YulFunctionCall",
																"src": "20230:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20222:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20222:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20269:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20269:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20280:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20280:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20265:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20265:3:6"
																		},
																		"nativeSrc": "20265:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20265:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20288:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "20288:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20294:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "20294:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20284:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20284:3:6"
																		},
																		"nativeSrc": "20284:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20284:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20258:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "20258:6:6"
																},
																"nativeSrc": "20258:47:6",
																"nodeType": "YulFunctionCall",
																"src": "20258:47:6"
															},
															"nativeSrc": "20258:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "20258:47:6"
														},
														{
															"nativeSrc": "20314:139:6",
															"nodeType": "YulAssignment",
															"src": "20314:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20448:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "20448:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20322:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "20322:124:6"
																},
																"nativeSrc": "20322:131:6",
																"nodeType": "YulFunctionCall",
																"src": "20322:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20314:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "20314:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20041:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20192:9:6",
														"nodeType": "YulTypedName",
														"src": "20192:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20207:4:6",
														"nodeType": "YulTypedName",
														"src": "20207:4:6",
														"type": ""
													}
												],
												"src": "20041:419:6"
											},
											{
												"body": {
													"nativeSrc": "20572:67:6",
													"nodeType": "YulBlock",
													"src": "20572:67:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20594:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "20594:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20602:1:6",
																				"nodeType": "YulLiteral",
																				"src": "20602:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20590:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "20590:3:6"
																		},
																		"nativeSrc": "20590:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "20590:14:6"
																	},
																	{
																		"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "20606:25:6",
																		"nodeType": "YulLiteral",
																		"src": "20606:25:6",
																		"type": "",
																		"value": "Token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20583:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "20583:6:6"
																},
																"nativeSrc": "20583:49:6",
																"nodeType": "YulFunctionCall",
																"src": "20583:49:6"
															},
															"nativeSrc": "20583:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "20583:49:6"
														}
													]
												},
												"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
												"nativeSrc": "20466:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20564:6:6",
														"nodeType": "YulTypedName",
														"src": "20564:6:6",
														"type": ""
													}
												],
												"src": "20466:173:6"
											},
											{
												"body": {
													"nativeSrc": "20791:220:6",
													"nodeType": "YulBlock",
													"src": "20791:220:6",
													"statements": [
														{
															"nativeSrc": "20801:74:6",
															"nodeType": "YulAssignment",
															"src": "20801:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20867:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20867:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20872:2:6",
																		"nodeType": "YulLiteral",
																		"src": "20872:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20808:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "20808:58:6"
																},
																"nativeSrc": "20808:67:6",
																"nodeType": "YulFunctionCall",
																"src": "20808:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20801:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20801:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20973:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20973:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																	"nativeSrc": "20884:88:6",
																	"nodeType": "YulIdentifier",
																	"src": "20884:88:6"
																},
																"nativeSrc": "20884:93:6",
																"nodeType": "YulFunctionCall",
																"src": "20884:93:6"
															},
															"nativeSrc": "20884:93:6",
															"nodeType": "YulExpressionStatement",
															"src": "20884:93:6"
														},
														{
															"nativeSrc": "20986:19:6",
															"nodeType": "YulAssignment",
															"src": "20986:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20997:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "20997:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21002:2:6",
																		"nodeType": "YulLiteral",
																		"src": "21002:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20993:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20993:3:6"
																},
																"nativeSrc": "20993:12:6",
																"nodeType": "YulFunctionCall",
																"src": "20993:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20986:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "20986:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20645:366:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20779:3:6",
														"nodeType": "YulTypedName",
														"src": "20779:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20787:3:6",
														"nodeType": "YulTypedName",
														"src": "20787:3:6",
														"type": ""
													}
												],
												"src": "20645:366:6"
											},
											{
												"body": {
													"nativeSrc": "21188:248:6",
													"nodeType": "YulBlock",
													"src": "21188:248:6",
													"statements": [
														{
															"nativeSrc": "21198:26:6",
															"nodeType": "YulAssignment",
															"src": "21198:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21210:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "21210:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21221:2:6",
																		"nodeType": "YulLiteral",
																		"src": "21221:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21206:3:6"
																},
																"nativeSrc": "21206:18:6",
																"nodeType": "YulFunctionCall",
																"src": "21206:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21198:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "21198:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21245:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "21245:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21256:1:6",
																				"nodeType": "YulLiteral",
																				"src": "21256:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21241:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21241:3:6"
																		},
																		"nativeSrc": "21241:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21241:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21264:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "21264:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21270:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "21270:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21260:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "21260:3:6"
																		},
																		"nativeSrc": "21260:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "21260:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "21234:6:6"
																},
																"nativeSrc": "21234:47:6",
																"nodeType": "YulFunctionCall",
																"src": "21234:47:6"
															},
															"nativeSrc": "21234:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "21234:47:6"
														},
														{
															"nativeSrc": "21290:139:6",
															"nodeType": "YulAssignment",
															"src": "21290:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21424:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "21424:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21298:124:6",
																	"nodeType": "YulIdentifier",
																	"src": "21298:124:6"
																},
																"nativeSrc": "21298:131:6",
																"nodeType": "YulFunctionCall",
																"src": "21298:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21290:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "21290:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21017:419:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21168:9:6",
														"nodeType": "YulTypedName",
														"src": "21168:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21183:4:6",
														"nodeType": "YulTypedName",
														"src": "21183:4:6",
														"type": ""
													}
												],
												"src": "21017:419:6"
											},
											{
												"body": {
													"nativeSrc": "21485:190:6",
													"nodeType": "YulBlock",
													"src": "21485:190:6",
													"statements": [
														{
															"nativeSrc": "21495:33:6",
															"nodeType": "YulAssignment",
															"src": "21495:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21522:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "21522:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21504:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "21504:17:6"
																},
																"nativeSrc": "21504:24:6",
																"nodeType": "YulFunctionCall",
																"src": "21504:24:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21495:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "21495:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21618:22:6",
																"nodeType": "YulBlock",
																"src": "21618:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21620:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "21620:16:6"
																			},
																			"nativeSrc": "21620:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "21620:18:6"
																		},
																		"nativeSrc": "21620:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "21620:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21543:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "21543:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21550:66:6",
																		"nodeType": "YulLiteral",
																		"src": "21550:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "21540:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "21540:2:6"
																},
																"nativeSrc": "21540:77:6",
																"nodeType": "YulFunctionCall",
																"src": "21540:77:6"
															},
															"nativeSrc": "21537:103:6",
															"nodeType": "YulIf",
															"src": "21537:103:6"
														},
														{
															"nativeSrc": "21649:20:6",
															"nodeType": "YulAssignment",
															"src": "21649:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21660:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "21660:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21667:1:6",
																		"nodeType": "YulLiteral",
																		"src": "21667:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21656:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21656:3:6"
																},
																"nativeSrc": "21656:13:6",
																"nodeType": "YulFunctionCall",
																"src": "21656:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "21649:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21649:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "21442:233:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21471:5:6",
														"nodeType": "YulTypedName",
														"src": "21471:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "21481:3:6",
														"nodeType": "YulTypedName",
														"src": "21481:3:6",
														"type": ""
													}
												],
												"src": "21442:233:6"
											},
											{
												"body": {
													"nativeSrc": "21725:147:6",
													"nodeType": "YulBlock",
													"src": "21725:147:6",
													"statements": [
														{
															"nativeSrc": "21735:25:6",
															"nodeType": "YulAssignment",
															"src": "21735:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21758:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "21758:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21740:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "21740:17:6"
																},
																"nativeSrc": "21740:20:6",
																"nodeType": "YulFunctionCall",
																"src": "21740:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "21735:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "21735:1:6"
																}
															]
														},
														{
															"nativeSrc": "21769:25:6",
															"nodeType": "YulAssignment",
															"src": "21769:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "21792:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "21792:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "21774:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "21774:17:6"
																},
																"nativeSrc": "21774:20:6",
																"nodeType": "YulFunctionCall",
																"src": "21774:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "21769:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "21769:1:6"
																}
															]
														},
														{
															"nativeSrc": "21803:16:6",
															"nodeType": "YulAssignment",
															"src": "21803:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21814:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "21814:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21817:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "21817:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21810:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21810:3:6"
																},
																"nativeSrc": "21810:9:6",
																"nodeType": "YulFunctionCall",
																"src": "21810:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "21803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "21803:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "21843:22:6",
																"nodeType": "YulBlock",
																"src": "21843:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "21845:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "21845:16:6"
																			},
																			"nativeSrc": "21845:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "21845:18:6"
																		},
																		"nativeSrc": "21845:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "21845:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21835:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "21835:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "21838:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "21838:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "21832:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "21832:2:6"
																},
																"nativeSrc": "21832:10:6",
																"nodeType": "YulFunctionCall",
																"src": "21832:10:6"
															},
															"nativeSrc": "21829:36:6",
															"nodeType": "YulIf",
															"src": "21829:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "21681:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "21712:1:6",
														"nodeType": "YulTypedName",
														"src": "21712:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "21715:1:6",
														"nodeType": "YulTypedName",
														"src": "21715:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "21721:3:6",
														"nodeType": "YulTypedName",
														"src": "21721:3:6",
														"type": ""
													}
												],
												"src": "21681:191:6"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing has expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token amount is greater than tok\")\n\n        mstore(add(memPtr, 32), \"ens on sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect value sent\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(memPtr) {\n\n        mstore(add(memPtr, 0), \"Commission transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment token transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061006f575f3560e01c80637975ce281161004d5780637975ce28146100f15780637a82a87f1461010d5780639ffae41b14610135578063de74e57b1461015d5761006f565b806317c73ff0146100735780631bf1de9b1461009d5780636c2c9c7d146100c7575b5f5ffd5b34801561007e575f5ffd5b5061008761019d565b6040516100949190610dd6565b60405180910390f35b3480156100a8575f5ffd5b506100b16101b5565b6040516100be9190610e07565b60405180910390f35b3480156100d2575f5ffd5b506100db6101ba565b6040516100e89190610e07565b60405180910390f35b61010b60048036038101906101069190610e4e565b6101c0565b005b348015610118575f5ffd5b50610133600480360381019061012e9190610eb6565b6104e2565b005b348015610140575f5ffd5b5061015b60048036038101906101569190610f1a565b6109b2565b005b348015610168575f5ffd5b50610183600480360381019061017e9190610f7e565b610d28565b604051610194959493929190610fa9565b60405180910390f35b73fcf8d2b098b3160654bbada1a8769483c71c288b81565b600a81565b60015481565b5f5f5f8481526020019081526020015f2090505f816002015411610219576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021090611054565b60405180910390fd5b8060040154421115610260576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610257906110bc565b60405180910390fd5b81816002015410156102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e9061114a565b60405180910390fd5b5f8282600101546102b89190611195565b90508034146102fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f390611220565b60405180910390fd5b5f6064600a8361030c9190611195565b610316919061126b565b90505f8183610325919061129b565b9050848460020154610337919061129b565b8460020181905550835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b815260040161039c9291906112ce565b6020604051808303815f875af11580156103b8573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103dc919061132a565b61041b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104129061139f565b60405180910390fd5b73fcf8d2b098b3160654bbada1a8769483c71c288b73ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f19350505050158015610472573d5f5f3e3d5ffd5b50836003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc8290811502906040515f60405180830381858888f193505050501580156104d9573d5f5f3e3d5ffd5b50505050505050565b5f5f5f8681526020019081526020015f2090505f81600201541161053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290611054565b60405180910390fd5b8060040154421115610582576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610579906110bc565b60405180910390fd5b83816002015410156105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c09061114a565b60405180910390fd5b5f8482600101546105da9190611195565b905080831461061e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061590611407565b60405180910390fd5b5f6064600a8561062e9190611195565b610638919061126b565b90505f8185610647919061129b565b9050848673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610685929190611425565b602060405180830381865afa1580156106a0573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c49190611460565b1015610705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fc906114d5565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd3373fcf8d2b098b3160654bbada1a8769483c71c288b856040518463ffffffff1660e01b8152600401610756939291906114f3565b6020604051808303815f875af1158015610772573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610796919061132a565b6107d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cc90611572565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd33866003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b8152600401610835939291906114f3565b6020604051808303815f875af1158015610851573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610875919061132a565b6108b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ab906115da565b60405180910390fd5b8684600201546108c4919061129b565b8460020181905550835f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33896040518363ffffffff1660e01b81526004016109299291906112ce565b6020604051808303815f875af1158015610945573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610969919061132a565b6109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f9061139f565b60405180910390fd5b5050505050505050565b5f84116109f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109eb90611642565b60405180910390fd5b5f8211610a36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2d906116aa565b60405180910390fd5b5f8111610a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6f90611738565b60405180910390fd5b818373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610ab4929190611425565b602060405180830381865afa158015610acf573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610af39190611460565b1015610b34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2b906117a0565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610b71939291906114f3565b6020604051808303815f875af1158015610b8d573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb1919061132a565b610bf0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be79061139f565b60405180910390fd5b60015f815480929190610c02906117be565b91905055506040518060a001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018381526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018242610c629190611805565b8152505f5f60015481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015590505050505050565b5f602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610dc082610d97565b9050919050565b610dd081610db6565b82525050565b5f602082019050610de95f830184610dc7565b92915050565b5f819050919050565b610e0181610def565b82525050565b5f602082019050610e1a5f830184610df8565b92915050565b5f5ffd5b610e2d81610def565b8114610e37575f5ffd5b50565b5f81359050610e4881610e24565b92915050565b5f5f60408385031215610e6457610e63610e20565b5b5f610e7185828601610e3a565b9250506020610e8285828601610e3a565b9150509250929050565b610e9581610db6565b8114610e9f575f5ffd5b50565b5f81359050610eb081610e8c565b92915050565b5f5f5f5f60808587031215610ece57610ecd610e20565b5b5f610edb87828801610e3a565b9450506020610eec87828801610e3a565b9350506040610efd87828801610ea2565b9250506060610f0e87828801610e3a565b91505092959194509250565b5f5f5f5f60808587031215610f3257610f31610e20565b5b5f610f3f87828801610e3a565b9450506020610f5087828801610ea2565b9350506040610f6187828801610e3a565b9250506060610f7287828801610e3a565b91505092959194509250565b5f60208284031215610f9357610f92610e20565b5b5f610fa084828501610e3a565b91505092915050565b5f60a082019050610fbc5f830188610dc7565b610fc96020830187610df8565b610fd66040830186610df8565b610fe36060830185610dc7565b610ff06080830184610df8565b9695505050505050565b5f82825260208201905092915050565b7f4c697374696e6720646f6573206e6f74206578697374000000000000000000005f82015250565b5f61103e601683610ffa565b91506110498261100a565b602082019050919050565b5f6020820190508181035f83015261106b81611032565b9050919050565b7f4c697374696e67206861732065787069726564000000000000000000000000005f82015250565b5f6110a6601383610ffa565b91506110b182611072565b602082019050919050565b5f6020820190508181035f8301526110d38161109a565b9050919050565b7f546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b5f8201527f656e73206f6e2073616c65000000000000000000000000000000000000000000602082015250565b5f611134602b83610ffa565b915061113f826110da565b604082019050919050565b5f6020820190508181035f83015261116181611128565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61119f82610def565b91506111aa83610def565b92508282026111b881610def565b915082820484148315176111cf576111ce611168565b5b5092915050565b7f496e636f72726563742076616c75652073656e740000000000000000000000005f82015250565b5f61120a601483610ffa565b9150611215826111d6565b602082019050919050565b5f6020820190508181035f830152611237816111fe565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61127582610def565b915061128083610def565b9250826112905761128f61123e565b5b828204905092915050565b5f6112a582610def565b91506112b083610def565b92508282039050818111156112c8576112c7611168565b5b92915050565b5f6040820190506112e15f830185610dc7565b6112ee6020830184610df8565b9392505050565b5f8115159050919050565b611309816112f5565b8114611313575f5ffd5b50565b5f8151905061132481611300565b92915050565b5f6020828403121561133f5761133e610e20565b5b5f61134c84828501611316565b91505092915050565b7f546f6b656e207472616e73666572206661696c656400000000000000000000005f82015250565b5f611389601583610ffa565b915061139482611355565b602082019050919050565b5f6020820190508181035f8301526113b68161137d565b9050919050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f6113f1601883610ffa565b91506113fc826113bd565b602082019050919050565b5f6020820190508181035f83015261141e816113e5565b9050919050565b5f6040820190506114385f830185610dc7565b6114456020830184610dc7565b9392505050565b5f8151905061145a81610e24565b92915050565b5f6020828403121561147557611474610e20565b5b5f6114828482850161144c565b91505092915050565b7f5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77005f82015250565b5f6114bf601f83610ffa565b91506114ca8261148b565b602082019050919050565b5f6020820190508181035f8301526114ec816114b3565b9050919050565b5f6060820190506115065f830186610dc7565b6115136020830185610dc7565b6115206040830184610df8565b949350505050565b7f436f6d6d697373696f6e207472616e73666572206661696c65640000000000005f82015250565b5f61155c601a83610ffa565b915061156782611528565b602082019050919050565b5f6020820190508181035f83015261158981611550565b9050919050565b7f5061796d656e7420746f6b656e207472616e73666572206661696c65640000005f82015250565b5f6115c4601d83610ffa565b91506115cf82611590565b602082019050919050565b5f6020820190508181035f8301526115f1816115b8565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f61162c601f83610ffa565b9150611637826115f8565b602082019050919050565b5f6020820190508181035f83015261165981611620565b9050919050565b7f546f6b656e73206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f611694602083610ffa565b915061169f82611660565b602082019050919050565b5f6020820190508181035f8301526116c181611688565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f611722602283610ffa565b915061172d826116c8565b604082019050919050565b5f6020820190508181035f83015261174f81611716565b9050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f770000000000000000005f82015250565b5f61178a601783610ffa565b915061179582611756565b602082019050919050565b5f6020820190508181035f8301526117b78161177e565b9050919050565b5f6117c882610def565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036117fa576117f9611168565b5b600182019050919050565b5f61180f82610def565b915061181a83610def565b925082820190508082111561183257611831611168565b5b9291505056fea264697066735822122066ece59cf0048f266d5dbd0339e6a0c701006a8c1afdc591624a26fd4dd875f464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7975CE28 GT PUSH2 0x4D JUMPI DUP1 PUSH4 0x7975CE28 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x7A82A87F EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x15D JUMPI PUSH2 0x6F JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0xC7 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x19D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xDD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xB1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0xDB PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x106 SWAP2 SWAP1 PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x1C0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x118 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x133 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12E SWAP2 SWAP1 PUSH2 0xEB6 JUMP JUMPDEST PUSH2 0x4E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0xF1A JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x168 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x183 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17E SWAP2 SWAP1 PUSH2 0xF7E JUMP JUMPDEST PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x194 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xFA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x219 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x210 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x257 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29E SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x2B8 SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE EQ PUSH2 0x2FC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F3 SWAP1 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP DUP5 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39C SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3B8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x412 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP4 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x532 SWAP1 PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x579 SWAP1 PUSH2 0x10BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x5C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C0 SWAP1 PUSH2 0x114A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x5DA SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0xA DUP6 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1195 JUMP JUMPDEST PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x647 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST SWAP1 POP DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x685 SWAP3 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A0 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C4 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST LT ISZERO PUSH2 0x705 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FC SWAP1 PUSH2 0x14D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x756 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x772 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x796 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x7D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x835 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x8B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8AB SWAP1 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP7 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x8C4 SWAP2 SWAP1 PUSH2 0x129B JUMP JUMPDEST DUP5 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP10 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP3 SWAP2 SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x945 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x969 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0x9A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99F SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x9F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9EB SWAP1 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2D SWAP1 PUSH2 0x16AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xA78 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6F SWAP1 PUSH2 0x1738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB4 SWAP3 SWAP2 SWAP1 PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xACF JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF3 SWAP2 SWAP1 PUSH2 0x1460 JUMP JUMPDEST LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x17A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB71 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB8D JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB1 SWAP2 SWAP1 PUSH2 0x132A JUMP JUMPDEST PUSH2 0xBF0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE7 SWAP1 PUSH2 0x139F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xC02 SWAP1 PUSH2 0x17BE JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 TIMESTAMP PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x1805 JUMP JUMPDEST DUP2 MSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xDC0 DUP3 PUSH2 0xD97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xDD0 DUP2 PUSH2 0xDB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xDE9 PUSH0 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE01 DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE1A PUSH0 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xE2D DUP2 PUSH2 0xDEF JUMP JUMPDEST DUP2 EQ PUSH2 0xE37 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE48 DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE64 JUMPI PUSH2 0xE63 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE71 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xE82 DUP6 DUP3 DUP7 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xE95 DUP2 PUSH2 0xDB6 JUMP JUMPDEST DUP2 EQ PUSH2 0xE9F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xEB0 DUP2 PUSH2 0xE8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEDB DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xEEC DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xEFD DUP8 DUP3 DUP9 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF0E DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF32 JUMPI PUSH2 0xF31 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF3F DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xF50 DUP8 DUP3 DUP9 ADD PUSH2 0xEA2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xF61 DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xF72 DUP8 DUP3 DUP9 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF93 JUMPI PUSH2 0xF92 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFA0 DUP5 DUP3 DUP6 ADD PUSH2 0xE3A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH0 DUP4 ADD DUP9 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xFC9 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xFD6 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xDF8 JUMP JUMPDEST PUSH2 0xFE3 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0xFF0 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x103E PUSH1 0x16 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1049 DUP3 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106B DUP2 PUSH2 0x1032 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x10A6 PUSH1 0x13 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x10B1 DUP3 PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10D3 DUP2 PUSH2 0x109A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616D6F756E742069732067726561746572207468616E20746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E73206F6E2073616C65000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1134 PUSH1 0x2B DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x113F DUP3 PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1161 DUP2 PUSH2 0x1128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x119F DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x11AA DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x11B8 DUP2 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x11CF JUMPI PUSH2 0x11CE PUSH2 0x1168 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F72726563742076616C75652073656E74000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x120A PUSH1 0x14 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1215 DUP3 PUSH2 0x11D6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1237 DUP2 PUSH2 0x11FE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1275 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x1280 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1290 JUMPI PUSH2 0x128F PUSH2 0x123E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x12A5 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x12B0 DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12C8 JUMPI PUSH2 0x12C7 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12E1 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x12EE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1309 DUP2 PUSH2 0x12F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1313 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1324 DUP2 PUSH2 0x1300 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x133F JUMPI PUSH2 0x133E PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134C DUP5 DUP3 DUP6 ADD PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546F6B656E207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1389 PUSH1 0x15 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1394 DUP3 PUSH2 0x1355 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13B6 DUP2 PUSH2 0x137D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13F1 PUSH1 0x18 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x13FC DUP3 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x141E DUP2 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1438 PUSH0 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1445 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDC7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x145A DUP2 PUSH2 0xE24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1475 JUMPI PUSH2 0x1474 PUSH2 0xE20 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1482 DUP5 DUP3 DUP6 ADD PUSH2 0x144C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14BF PUSH1 0x1F DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x14CA DUP3 PUSH2 0x148B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14EC DUP2 PUSH2 0x14B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1506 PUSH0 DUP4 ADD DUP7 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1513 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xDC7 JUMP JUMPDEST PUSH2 0x1520 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xDF8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x436F6D6D697373696F6E207472616E73666572206661696C6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x155C PUSH1 0x1A DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1567 DUP3 PUSH2 0x1528 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1589 DUP2 PUSH2 0x1550 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E207472616E73666572206661696C6564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15C4 PUSH1 0x1D DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x15CF DUP3 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x15B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x162C PUSH1 0x1F DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1637 DUP3 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1659 DUP2 PUSH2 0x1620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1694 PUSH1 0x20 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x169F DUP3 PUSH2 0x1660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C1 DUP2 PUSH2 0x1688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1722 PUSH1 0x22 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x172D DUP3 PUSH2 0x16C8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x174F DUP2 PUSH2 0x1716 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x178A PUSH1 0x17 DUP4 PUSH2 0xFFA JUMP JUMPDEST SWAP2 POP PUSH2 0x1795 DUP3 PUSH2 0x1756 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17B7 DUP2 PUSH2 0x177E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x17C8 DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x17FA JUMPI PUSH2 0x17F9 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180F DUP3 PUSH2 0xDEF JUMP JUMPDEST SWAP2 POP PUSH2 0x181A DUP4 PUSH2 0xDEF JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1832 JUMPI PUSH2 0x1831 PUSH2 0x1168 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xECE59CF0048F26 PUSH14 0x5DBD0339E6A0C701006A8C1AFDC5 SWAP2 PUSH3 0x4A26FD 0x4D 0xD8 PUSH22 0xF464736F6C634300081C003300000000000000000000 ",
							"sourceMap": "135:3388:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;408:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:50;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;373:29;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1364:913;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2283:1238;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;557:801;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;323:44;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;408:86;452:42;408:86;:::o;500:50::-;548:2;500:50;:::o;373:29::-;;;;:::o;1364:913::-;1448:23;1474:8;:19;1483:9;1474:19;;;;;;;;;;;1448:45;;1528:1;1511:7;:14;;;:18;1503:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1593:7;:18;;;1574:15;:37;;1566:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;1671:11;1653:7;:14;;;:29;;1645:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;1749:18;1786:11;1770:7;:13;;;:27;;;;:::i;:::-;1749:48;;1828:10;1815:9;:23;1807:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1874:18;1934:3;548:2;1896:10;:34;;;;:::i;:::-;1895:42;;;;:::i;:::-;1874:63;;1947:20;1983:10;1970;:23;;;;:::i;:::-;1947:46;;2038:11;2021:7;:14;;;:28;;;;:::i;:::-;2004:7;:14;;:45;;;;2073:7;:23;;;;;;;;;;;;2067:39;;;2107:10;2119:11;2067:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2059:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;452:42;2167:35;;:47;2203:10;2167:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2232:7;:14;;;;;;;;;;;;2224:32;;:46;2257:12;2224:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1438:839;;;;1364:913;;:::o;2283:1238::-;2413:23;2439:8;:19;2448:9;2439:19;;;;;;;;;;;2413:45;;2493:1;2476:7;:14;;;:18;2468:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2558:7;:18;;;2539:15;:37;;2531:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2636:11;2618:7;:14;;;:29;;2610:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;2714:18;2751:11;2735:7;:13;;;:27;;;;:::i;:::-;2714:48;;2797:10;2780:13;:27;2772:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2847:18;2910:3;548:2;2869:13;:37;;;;:::i;:::-;2868:45;;;;:::i;:::-;2847:66;;2923:20;2962:10;2946:13;:26;;;;:::i;:::-;2923:49;;3051:13;2997:12;2991:29;;;3021:10;3041:4;2991:56;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;2983:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;3124:12;3118:32;;;3151:10;452:42;3182:10;3118:75;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3110:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;3248:12;3242:32;;;3275:10;3287:7;:14;;;;;;;;;;;;3303:12;3242:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3234:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3395:11;3378:7;:14;;;:28;;;;:::i;:::-;3361:7;:14;;:45;;;;3430:7;:23;;;;;;;;;;;;3424:39;;;3464:10;3476:11;3424:64;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3416:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2403:1118;;;;2283:1238;;;;:::o;557:801::-;684:1;676:5;:9;668:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;748:1;739:6;:10;731:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;815:1;804:8;:12;796:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;936:6;879:15;873:32;;;906:10;926:4;873:59;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;865:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;994:15;988:35;;;1024:10;1044:4;1051:6;988:70;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;980:104;;;;;;;;;;;;:::i;:::-;;;;;;;;;1095:14;;:16;;;;;;;;;:::i;:::-;;;;;;1148:203;;;;;;;;1187:15;1148:203;;;;;;1223:5;1148:203;;;;1250:6;1148:203;;;;1278:10;1148:203;;;;;;1332:8;1314:15;:26;;;;:::i;:::-;1148:203;;;1121:8;:24;1130:14;;1121:24;;;;;;;;;;;:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;557:801;;;;:::o;323:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:126:6:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:474::-;1696:6;1704;1753:2;1741:9;1732:7;1728:23;1724:32;1721:119;;;1759:79;;:::i;:::-;1721:119;1879:1;1904:53;1949:7;1940:6;1929:9;1925:22;1904:53;:::i;:::-;1894:63;;1850:117;2006:2;2032:53;2077:7;2068:6;2057:9;2053:22;2032:53;:::i;:::-;2022:63;;1977:118;1628:474;;;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:765::-;2467:6;2475;2483;2491;2540:3;2528:9;2519:7;2515:23;2511:33;2508:120;;;2547:79;;:::i;:::-;2508:120;2667:1;2692:53;2737:7;2728:6;2717:9;2713:22;2692:53;:::i;:::-;2682:63;;2638:117;2794:2;2820:53;2865:7;2856:6;2845:9;2841:22;2820:53;:::i;:::-;2810:63;;2765:118;2922:2;2948:53;2993:7;2984:6;2973:9;2969:22;2948:53;:::i;:::-;2938:63;;2893:118;3050:2;3076:53;3121:7;3112:6;3101:9;3097:22;3076:53;:::i;:::-;3066:63;;3021:118;2381:765;;;;;;;:::o;3152:::-;3238:6;3246;3254;3262;3311:3;3299:9;3290:7;3286:23;3282:33;3279:120;;;3318:79;;:::i;:::-;3279:120;3438:1;3463:53;3508:7;3499:6;3488:9;3484:22;3463:53;:::i;:::-;3453:63;;3409:117;3565:2;3591:53;3636:7;3627:6;3616:9;3612:22;3591:53;:::i;:::-;3581:63;;3536:118;3693:2;3719:53;3764:7;3755:6;3744:9;3740:22;3719:53;:::i;:::-;3709:63;;3664:118;3821:2;3847:53;3892:7;3883:6;3872:9;3868:22;3847:53;:::i;:::-;3837:63;;3792:118;3152:765;;;;;;;:::o;3923:329::-;3982:6;4031:2;4019:9;4010:7;4006:23;4002:32;3999:119;;;4037:79;;:::i;:::-;3999:119;4157:1;4182:53;4227:7;4218:6;4207:9;4203:22;4182:53;:::i;:::-;4172:63;;4128:117;3923:329;;;;:::o;4258:664::-;4463:4;4501:3;4490:9;4486:19;4478:27;;4515:71;4583:1;4572:9;4568:17;4559:6;4515:71;:::i;:::-;4596:72;4664:2;4653:9;4649:18;4640:6;4596:72;:::i;:::-;4678;4746:2;4735:9;4731:18;4722:6;4678:72;:::i;:::-;4760;4828:2;4817:9;4813:18;4804:6;4760:72;:::i;:::-;4842:73;4910:3;4899:9;4895:19;4886:6;4842:73;:::i;:::-;4258:664;;;;;;;;:::o;4928:169::-;5012:11;5046:6;5041:3;5034:19;5086:4;5081:3;5077:14;5062:29;;4928:169;;;;:::o;5103:172::-;5243:24;5239:1;5231:6;5227:14;5220:48;5103:172;:::o;5281:366::-;5423:3;5444:67;5508:2;5503:3;5444:67;:::i;:::-;5437:74;;5520:93;5609:3;5520:93;:::i;:::-;5638:2;5633:3;5629:12;5622:19;;5281:366;;;:::o;5653:419::-;5819:4;5857:2;5846:9;5842:18;5834:26;;5906:9;5900:4;5896:20;5892:1;5881:9;5877:17;5870:47;5934:131;6060:4;5934:131;:::i;:::-;5926:139;;5653:419;;;:::o;6078:169::-;6218:21;6214:1;6206:6;6202:14;6195:45;6078:169;:::o;6253:366::-;6395:3;6416:67;6480:2;6475:3;6416:67;:::i;:::-;6409:74;;6492:93;6581:3;6492:93;:::i;:::-;6610:2;6605:3;6601:12;6594:19;;6253:366;;;:::o;6625:419::-;6791:4;6829:2;6818:9;6814:18;6806:26;;6878:9;6872:4;6868:20;6864:1;6853:9;6849:17;6842:47;6906:131;7032:4;6906:131;:::i;:::-;6898:139;;6625:419;;;:::o;7050:230::-;7190:34;7186:1;7178:6;7174:14;7167:58;7259:13;7254:2;7246:6;7242:15;7235:38;7050:230;:::o;7286:366::-;7428:3;7449:67;7513:2;7508:3;7449:67;:::i;:::-;7442:74;;7525:93;7614:3;7525:93;:::i;:::-;7643:2;7638:3;7634:12;7627:19;;7286:366;;;:::o;7658:419::-;7824:4;7862:2;7851:9;7847:18;7839:26;;7911:9;7905:4;7901:20;7897:1;7886:9;7882:17;7875:47;7939:131;8065:4;7939:131;:::i;:::-;7931:139;;7658:419;;;:::o;8083:180::-;8131:77;8128:1;8121:88;8228:4;8225:1;8218:15;8252:4;8249:1;8242:15;8269:410;8309:7;8332:20;8350:1;8332:20;:::i;:::-;8327:25;;8366:20;8384:1;8366:20;:::i;:::-;8361:25;;8421:1;8418;8414:9;8443:30;8461:11;8443:30;:::i;:::-;8432:41;;8622:1;8613:7;8609:15;8606:1;8603:22;8583:1;8576:9;8556:83;8533:139;;8652:18;;:::i;:::-;8533:139;8317:362;8269:410;;;;:::o;8685:170::-;8825:22;8821:1;8813:6;8809:14;8802:46;8685:170;:::o;8861:366::-;9003:3;9024:67;9088:2;9083:3;9024:67;:::i;:::-;9017:74;;9100:93;9189:3;9100:93;:::i;:::-;9218:2;9213:3;9209:12;9202:19;;8861:366;;;:::o;9233:419::-;9399:4;9437:2;9426:9;9422:18;9414:26;;9486:9;9480:4;9476:20;9472:1;9461:9;9457:17;9450:47;9514:131;9640:4;9514:131;:::i;:::-;9506:139;;9233:419;;;:::o;9658:180::-;9706:77;9703:1;9696:88;9803:4;9800:1;9793:15;9827:4;9824:1;9817:15;9844:185;9884:1;9901:20;9919:1;9901:20;:::i;:::-;9896:25;;9935:20;9953:1;9935:20;:::i;:::-;9930:25;;9974:1;9964:35;;9979:18;;:::i;:::-;9964:35;10021:1;10018;10014:9;10009:14;;9844:185;;;;:::o;10035:194::-;10075:4;10095:20;10113:1;10095:20;:::i;:::-;10090:25;;10129:20;10147:1;10129:20;:::i;:::-;10124:25;;10173:1;10170;10166:9;10158:17;;10197:1;10191:4;10188:11;10185:37;;;10202:18;;:::i;:::-;10185:37;10035:194;;;;:::o;10235:332::-;10356:4;10394:2;10383:9;10379:18;10371:26;;10407:71;10475:1;10464:9;10460:17;10451:6;10407:71;:::i;:::-;10488:72;10556:2;10545:9;10541:18;10532:6;10488:72;:::i;:::-;10235:332;;;;;:::o;10573:90::-;10607:7;10650:5;10643:13;10636:21;10625:32;;10573:90;;;:::o;10669:116::-;10739:21;10754:5;10739:21;:::i;:::-;10732:5;10729:32;10719:60;;10775:1;10772;10765:12;10719:60;10669:116;:::o;10791:137::-;10845:5;10876:6;10870:13;10861:22;;10892:30;10916:5;10892:30;:::i;:::-;10791:137;;;;:::o;10934:345::-;11001:6;11050:2;11038:9;11029:7;11025:23;11021:32;11018:119;;;11056:79;;:::i;:::-;11018:119;11176:1;11201:61;11254:7;11245:6;11234:9;11230:22;11201:61;:::i;:::-;11191:71;;11147:125;10934:345;;;;:::o;11285:171::-;11425:23;11421:1;11413:6;11409:14;11402:47;11285:171;:::o;11462:366::-;11604:3;11625:67;11689:2;11684:3;11625:67;:::i;:::-;11618:74;;11701:93;11790:3;11701:93;:::i;:::-;11819:2;11814:3;11810:12;11803:19;;11462:366;;;:::o;11834:419::-;12000:4;12038:2;12027:9;12023:18;12015:26;;12087:9;12081:4;12077:20;12073:1;12062:9;12058:17;12051:47;12115:131;12241:4;12115:131;:::i;:::-;12107:139;;11834:419;;;:::o;12259:174::-;12399:26;12395:1;12387:6;12383:14;12376:50;12259:174;:::o;12439:366::-;12581:3;12602:67;12666:2;12661:3;12602:67;:::i;:::-;12595:74;;12678:93;12767:3;12678:93;:::i;:::-;12796:2;12791:3;12787:12;12780:19;;12439:366;;;:::o;12811:419::-;12977:4;13015:2;13004:9;13000:18;12992:26;;13064:9;13058:4;13054:20;13050:1;13039:9;13035:17;13028:47;13092:131;13218:4;13092:131;:::i;:::-;13084:139;;12811:419;;;:::o;13236:332::-;13357:4;13395:2;13384:9;13380:18;13372:26;;13408:71;13476:1;13465:9;13461:17;13452:6;13408:71;:::i;:::-;13489:72;13557:2;13546:9;13542:18;13533:6;13489:72;:::i;:::-;13236:332;;;;;:::o;13574:143::-;13631:5;13662:6;13656:13;13647:22;;13678:33;13705:5;13678:33;:::i;:::-;13574:143;;;;:::o;13723:351::-;13793:6;13842:2;13830:9;13821:7;13817:23;13813:32;13810:119;;;13848:79;;:::i;:::-;13810:119;13968:1;13993:64;14049:7;14040:6;14029:9;14025:22;13993:64;:::i;:::-;13983:74;;13939:128;13723:351;;;;:::o;14080:181::-;14220:33;14216:1;14208:6;14204:14;14197:57;14080:181;:::o;14267:366::-;14409:3;14430:67;14494:2;14489:3;14430:67;:::i;:::-;14423:74;;14506:93;14595:3;14506:93;:::i;:::-;14624:2;14619:3;14615:12;14608:19;;14267:366;;;:::o;14639:419::-;14805:4;14843:2;14832:9;14828:18;14820:26;;14892:9;14886:4;14882:20;14878:1;14867:9;14863:17;14856:47;14920:131;15046:4;14920:131;:::i;:::-;14912:139;;14639:419;;;:::o;15064:442::-;15213:4;15251:2;15240:9;15236:18;15228:26;;15264:71;15332:1;15321:9;15317:17;15308:6;15264:71;:::i;:::-;15345:72;15413:2;15402:9;15398:18;15389:6;15345:72;:::i;:::-;15427;15495:2;15484:9;15480:18;15471:6;15427:72;:::i;:::-;15064:442;;;;;;:::o;15512:176::-;15652:28;15648:1;15640:6;15636:14;15629:52;15512:176;:::o;15694:366::-;15836:3;15857:67;15921:2;15916:3;15857:67;:::i;:::-;15850:74;;15933:93;16022:3;15933:93;:::i;:::-;16051:2;16046:3;16042:12;16035:19;;15694:366;;;:::o;16066:419::-;16232:4;16270:2;16259:9;16255:18;16247:26;;16319:9;16313:4;16309:20;16305:1;16294:9;16290:17;16283:47;16347:131;16473:4;16347:131;:::i;:::-;16339:139;;16066:419;;;:::o;16491:179::-;16631:31;16627:1;16619:6;16615:14;16608:55;16491:179;:::o;16676:366::-;16818:3;16839:67;16903:2;16898:3;16839:67;:::i;:::-;16832:74;;16915:93;17004:3;16915:93;:::i;:::-;17033:2;17028:3;17024:12;17017:19;;16676:366;;;:::o;17048:419::-;17214:4;17252:2;17241:9;17237:18;17229:26;;17301:9;17295:4;17291:20;17287:1;17276:9;17272:17;17265:47;17329:131;17455:4;17329:131;:::i;:::-;17321:139;;17048:419;;;:::o;17473:181::-;17613:33;17609:1;17601:6;17597:14;17590:57;17473:181;:::o;17660:366::-;17802:3;17823:67;17887:2;17882:3;17823:67;:::i;:::-;17816:74;;17899:93;17988:3;17899:93;:::i;:::-;18017:2;18012:3;18008:12;18001:19;;17660:366;;;:::o;18032:419::-;18198:4;18236:2;18225:9;18221:18;18213:26;;18285:9;18279:4;18275:20;18271:1;18260:9;18256:17;18249:47;18313:131;18439:4;18313:131;:::i;:::-;18305:139;;18032:419;;;:::o;18457:182::-;18597:34;18593:1;18585:6;18581:14;18574:58;18457:182;:::o;18645:366::-;18787:3;18808:67;18872:2;18867:3;18808:67;:::i;:::-;18801:74;;18884:93;18973:3;18884:93;:::i;:::-;19002:2;18997:3;18993:12;18986:19;;18645:366;;;:::o;19017:419::-;19183:4;19221:2;19210:9;19206:18;19198:26;;19270:9;19264:4;19260:20;19256:1;19245:9;19241:17;19234:47;19298:131;19424:4;19298:131;:::i;:::-;19290:139;;19017:419;;;:::o;19442:221::-;19582:34;19578:1;19570:6;19566:14;19559:58;19651:4;19646:2;19638:6;19634:15;19627:29;19442:221;:::o;19669:366::-;19811:3;19832:67;19896:2;19891:3;19832:67;:::i;:::-;19825:74;;19908:93;19997:3;19908:93;:::i;:::-;20026:2;20021:3;20017:12;20010:19;;19669:366;;;:::o;20041:419::-;20207:4;20245:2;20234:9;20230:18;20222:26;;20294:9;20288:4;20284:20;20280:1;20269:9;20265:17;20258:47;20322:131;20448:4;20322:131;:::i;:::-;20314:139;;20041:419;;;:::o;20466:173::-;20606:25;20602:1;20594:6;20590:14;20583:49;20466:173;:::o;20645:366::-;20787:3;20808:67;20872:2;20867:3;20808:67;:::i;:::-;20801:74;;20884:93;20973:3;20884:93;:::i;:::-;21002:2;20997:3;20993:12;20986:19;;20645:366;;;:::o;21017:419::-;21183:4;21221:2;21210:9;21206:18;21198:26;;21270:9;21264:4;21260:20;21256:1;21245:9;21241:17;21234:47;21298:131;21424:4;21298:131;:::i;:::-;21290:139;;21017:419;;;:::o;21442:233::-;21481:3;21504:24;21522:5;21504:24;:::i;:::-;21495:33;;21550:66;21543:5;21540:77;21537:103;;21620:18;;:::i;:::-;21537:103;21667:1;21660:5;21656:13;21649:20;;21442:233;;;:::o;21681:191::-;21721:3;21740:20;21758:1;21740:20;:::i;:::-;21735:25;;21774:20;21792:1;21774:20;:::i;:::-;21769:25;;21817:1;21814;21810:9;21803:16;;21838:3;21835:1;21832:10;21829:36;;;21845:18;;:::i;:::-;21829:36;21681:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1250800",
								"executionCost": "1300",
								"totalCost": "1252100"
							},
							"external": {
								"COMMISSION_PERCENTAGE()": "348",
								"COMMISSION_WALLET()": "374",
								"addListing(uint256,address,uint256,uint256)": "infinite",
								"buyTokens(uint256,uint256)": "infinite",
								"buyTokensWithERC20(uint256,uint256,address,uint256)": "infinite",
								"listingCounter()": "2470",
								"listings(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 3523,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066ece59cf0048f266d5dbd0339e6a0c701006a8c1afdc591624a26fd4dd875f464736f6c634300081c0033",
									".code": [
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "7975CE28"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "7975CE28"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "7A82A87F"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "9FFAE41B"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "DE74E57B"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "17C73FF0"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "1BF1DE9B"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "6C2C9C7D"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 3523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 408,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 500,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 500,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 373,
											"end": 402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 1364,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1364,
											"end": 2277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 2283,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2283,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 557,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 557,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 323,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 323,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 323,
											"end": 367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
										},
										{
											"begin": 408,
											"end": 494,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 408,
											"end": 494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 500,
											"end": 550,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 500,
											"end": 550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 373,
											"end": 402,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 373,
											"end": 402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1482,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1483,
											"end": 1492,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1448,
											"end": 1493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1518,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1525,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1511,
											"end": 1529,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1503,
											"end": 1556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 1503,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1611,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1589,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1574,
											"end": 1611,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 1566,
											"end": 1635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1566,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1667,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1682,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1682,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1645,
											"end": 1730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1645,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1767,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1786,
											"end": 1797,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1783,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1783,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1783,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1770,
											"end": 1797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1797,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1749,
											"end": 1797,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1838,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1824,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1838,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 1807,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1807,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1892,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1937,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 1896,
											"end": 1906,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1896,
											"end": 1930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1896,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1895,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 1895,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1937,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1874,
											"end": 1937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1980,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1970,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1970,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1993,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1947,
											"end": 1993,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2038,
											"end": 2049,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2028,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2035,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2021,
											"end": 2049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2021,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2018,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2004,
											"end": 2018,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2049,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2004,
											"end": 2049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2080,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2073,
											"end": 2096,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2106,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2067,
											"end": 2106,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2106,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 2107,
											"end": 2117,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 2119,
											"end": 2130,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2067,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2067,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2067,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 2059,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2059,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 452,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
										},
										{
											"begin": 2167,
											"end": 2202,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2202,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2203,
											"end": 2213,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2167,
											"end": 2214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2232,
											"end": 2246,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2256,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2224,
											"end": 2256,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2257,
											"end": 2269,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1438,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1364,
											"end": 2277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2447,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2457,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2439,
											"end": 2458,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2458,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2494,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2476,
											"end": 2483,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2490,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2476,
											"end": 2490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2490,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2468,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2576,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2539,
											"end": 2576,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2531,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2531,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2636,
											"end": 2647,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2625,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2647,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 2610,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2610,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2751,
											"end": 2762,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2742,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2748,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2735,
											"end": 2748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2748,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2735,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2735,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2762,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2714,
											"end": 2762,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2797,
											"end": 2807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2793,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2807,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2772,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2772,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2865,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2913,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 548,
											"end": 550,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2869,
											"end": 2882,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 2869,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2869,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2868,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2868,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2962,
											"end": 2972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2946,
											"end": 2972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2946,
											"end": 2972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3051,
											"end": 3064,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2997,
											"end": 3009,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3020,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 3021,
											"end": 3031,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3041,
											"end": 3045,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2991,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2991,
											"end": 3047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2991,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3064,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3064,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2983,
											"end": 3100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2983,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3124,
											"end": 3136,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3150,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3150,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3150,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3151,
											"end": 3161,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 452,
											"end": 494,
											"name": "PUSH",
											"source": 5,
											"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
										},
										{
											"begin": 3182,
											"end": 3192,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3118,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3118,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3118,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3110,
											"end": 3224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 3110,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3248,
											"end": 3260,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3242,
											"end": 3274,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3274,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 3275,
											"end": 3285,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3294,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3301,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3315,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3242,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3242,
											"end": 3316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3242,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3234,
											"end": 3350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3234,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3395,
											"end": 3406,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3385,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3392,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3378,
											"end": 3406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3378,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3368,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3375,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 3361,
											"end": 3375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3406,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3406,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3406,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3361,
											"end": 3406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3437,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3430,
											"end": 3453,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3463,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 3464,
											"end": 3474,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3476,
											"end": 3487,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3424,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3424,
											"end": 3488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 3424,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 3416,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3416,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2403,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 3521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 684,
											"end": 685,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 676,
											"end": 685,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 668,
											"end": 721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 668,
											"end": 721,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 668,
											"end": 721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 748,
											"end": 749,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 739,
											"end": 749,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 731,
											"end": 786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 731,
											"end": 786,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 731,
											"end": 786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 815,
											"end": 816,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 804,
											"end": 812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 804,
											"end": 816,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 796,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 796,
											"end": 855,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 796,
											"end": 855,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 936,
											"end": 942,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 879,
											"end": 894,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 873,
											"end": 905,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 873,
											"end": 905,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 906,
											"end": 916,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 926,
											"end": 930,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 873,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 873,
											"end": 932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 932,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 873,
											"end": 932,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 942,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 942,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 865,
											"end": 970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 865,
											"end": 970,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 865,
											"end": 970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 988,
											"end": 1023,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 1024,
											"end": 1034,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1048,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 988,
											"end": 1058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 988,
											"end": 1058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 988,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 980,
											"end": 1084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 980,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1109,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1095,
											"end": 1109,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 1095,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1202,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1228,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1256,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1278,
											"end": 1288,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1340,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1329,
											"name": "TIMESTAMP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1314,
											"end": 1340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 1314,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1148,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1144,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1130,
											"end": 1144,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1145,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1121,
											"end": 1351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 557,
											"end": 1358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 323,
											"end": 367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1724,
											"end": 1756,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1759,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 1904,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1967,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2032,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 2095,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1628,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2543,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2528,
											"end": 2537,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2526,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2515,
											"end": 2538,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2511,
											"end": 2544,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2547,
											"end": 2626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 2547,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 2508,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2737,
											"end": 2744,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2717,
											"end": 2726,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2713,
											"end": 2735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2692,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 2692,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2745,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2794,
											"end": 2796,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2865,
											"end": 2872,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2854,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2863,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2820,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 2820,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2765,
											"end": 2883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2924,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2993,
											"end": 3000,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 2990,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2973,
											"end": 2982,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 2991,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2948,
											"end": 3001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 2948,
											"end": 3001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2938,
											"end": 3001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 3011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3050,
											"end": 3052,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3121,
											"end": 3128,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3112,
											"end": 3118,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3101,
											"end": 3110,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3097,
											"end": 3119,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3076,
											"end": 3129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3076,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3021,
											"end": 3139,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2381,
											"end": 3146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3254,
											"end": 3260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3299,
											"end": 3308,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3297,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3286,
											"end": 3309,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3282,
											"end": 3315,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3399,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3279,
											"end": 3399,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3318,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 3318,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3279,
											"end": 3399,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 3279,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3439,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3508,
											"end": 3515,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3499,
											"end": 3505,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3506,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3463,
											"end": 3516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3516,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3463,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3453,
											"end": 3516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3526,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3567,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3633,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3616,
											"end": 3625,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3612,
											"end": 3634,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 3591,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3591,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3644,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3644,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3536,
											"end": 3654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3764,
											"end": 3771,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3761,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3744,
											"end": 3753,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3740,
											"end": 3762,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3719,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3772,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 3719,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3709,
											"end": 3772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3664,
											"end": 3782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3847,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3892,
											"end": 3899,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3868,
											"end": 3890,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 3847,
											"end": 3900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3847,
											"end": 3900,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 3847,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3910,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4028,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4017,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4029,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4002,
											"end": 4034,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4118,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3999,
											"end": 4118,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4037,
											"end": 4116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 4037,
											"end": 4116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4116,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4037,
											"end": 4116,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4118,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 3999,
											"end": 4118,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4227,
											"end": 4234,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4218,
											"end": 4224,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 4182,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4182,
											"end": 4235,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 4182,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4172,
											"end": 4235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4128,
											"end": 4245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 4252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4504,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4490,
											"end": 4499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4505,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4583,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4572,
											"end": 4581,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4568,
											"end": 4585,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4515,
											"end": 4586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4515,
											"end": 4586,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 4515,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4664,
											"end": 4666,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4653,
											"end": 4662,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4667,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4596,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4596,
											"end": 4668,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 4596,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4746,
											"end": 4748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4731,
											"end": 4749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4678,
											"end": 4750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4678,
											"end": 4750,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 4678,
											"end": 4750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4828,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4813,
											"end": 4831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 4760,
											"end": 4832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4832,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 4760,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4910,
											"end": 4913,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4899,
											"end": 4908,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4886,
											"end": 4892,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 4842,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4842,
											"end": 4915,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 4842,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4258,
											"end": 4922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5012,
											"end": 5023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5044,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5034,
											"end": 5053,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5086,
											"end": 5090,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5081,
											"end": 5084,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5077,
											"end": 5091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5062,
											"end": 5091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 5097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5275,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5103,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5243,
											"end": 5267,
											"name": "PUSH",
											"source": 6,
											"value": "4C697374696E6720646F6573206E6F7420657869737400000000000000000000"
										},
										{
											"begin": 5239,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5237,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5227,
											"end": 5241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5220,
											"end": 5268,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5103,
											"end": 5275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5423,
											"end": 5426,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5508,
											"end": 5510,
											"name": "PUSH",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 5503,
											"end": 5506,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 5444,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 5444,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5511,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5437,
											"end": 5511,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5609,
											"end": 5612,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 5520,
											"end": 5613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 5520,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5636,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5647,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5281,
											"end": 5647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5823,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5857,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5842,
											"end": 5860,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5834,
											"end": 5860,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5906,
											"end": 5915,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5900,
											"end": 5904,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5916,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5892,
											"end": 5893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5881,
											"end": 5890,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5877,
											"end": 5894,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5870,
											"end": 5917,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 6060,
											"end": 6064,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 5934,
											"end": 6065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 5934,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 6065,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5926,
											"end": 6065,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6072,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5653,
											"end": 6072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6247,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6078,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6239,
											"name": "PUSH",
											"source": 6,
											"value": "4C697374696E6720686173206578706972656400000000000000000000000000"
										},
										{
											"begin": 6214,
											"end": 6215,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6212,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6216,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6195,
											"end": 6240,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6247,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6078,
											"end": 6247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6619,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6253,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6480,
											"end": 6482,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6416,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 6416,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6483,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6483,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6581,
											"end": 6584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6585,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 6492,
											"end": 6585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6492,
											"end": 6585,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 6492,
											"end": 6585,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6612,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6605,
											"end": 6608,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6613,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6594,
											"end": 6613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6619,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6619,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6619,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6253,
											"end": 6619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 7044,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6625,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6791,
											"end": 6795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6818,
											"end": 6827,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6832,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6806,
											"end": 6832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6878,
											"end": 6887,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6872,
											"end": 6876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6888,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6849,
											"end": 6866,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6842,
											"end": 6889,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 7037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6906,
											"end": 7037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 7037,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 6906,
											"end": 7037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 7037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6898,
											"end": 7037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 7044,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 7044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 7044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7280,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7050,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7190,
											"end": 7224,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E20616D6F756E742069732067726561746572207468616E20746F6B"
										},
										{
											"begin": 7186,
											"end": 7187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7178,
											"end": 7184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7174,
											"end": 7188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7167,
											"end": 7225,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7259,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "656E73206F6E2073616C65000000000000000000000000000000000000000000"
										},
										{
											"begin": 7254,
											"end": 7256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7246,
											"end": 7252,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7242,
											"end": 7257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7280,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7431,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7513,
											"end": 7515,
											"name": "PUSH",
											"source": 6,
											"value": "2B"
										},
										{
											"begin": 7508,
											"end": 7511,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7449,
											"end": 7516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 7449,
											"end": 7516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7516,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7442,
											"end": 7516,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7614,
											"end": 7617,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7525,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 7525,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7643,
											"end": 7645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7638,
											"end": 7641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7646,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7627,
											"end": 7646,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7286,
											"end": 7652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7824,
											"end": 7828,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7860,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7847,
											"end": 7865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7839,
											"end": 7865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7905,
											"end": 7909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7901,
											"end": 7921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7886,
											"end": 7895,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7882,
											"end": 7899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7875,
											"end": 7922,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8065,
											"end": 8069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7939,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "tag",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 7939,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 8070,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7931,
											"end": 8070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7658,
											"end": 8077,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8083,
											"end": 8263,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8083,
											"end": 8263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8208,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8228,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8225,
											"end": 8226,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8218,
											"end": 8233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8252,
											"end": 8256,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 8249,
											"end": 8250,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8242,
											"end": 8257,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8316,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8350,
											"end": 8351,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8332,
											"end": 8352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8327,
											"end": 8352,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8384,
											"end": 8385,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8386,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8366,
											"end": 8386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8366,
											"end": 8386,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8366,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8386,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8361,
											"end": 8386,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8421,
											"end": 8422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8414,
											"end": 8423,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 8461,
											"end": 8472,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 8443,
											"end": 8473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8443,
											"end": 8473,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 8443,
											"end": 8473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8622,
											"end": 8623,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8613,
											"end": 8620,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8624,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8607,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8603,
											"end": 8625,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8585,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8556,
											"end": 8639,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8533,
											"end": 8672,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8652,
											"end": 8670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 8652,
											"end": 8670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8533,
											"end": 8672,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 8533,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8317,
											"end": 8679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8269,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8855,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8685,
											"end": 8855,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8825,
											"end": 8847,
											"name": "PUSH",
											"source": 6,
											"value": "496E636F72726563742076616C75652073656E74000000000000000000000000"
										},
										{
											"begin": 8821,
											"end": 8822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8819,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8809,
											"end": 8823,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8802,
											"end": 8848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8855,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8861,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9006,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9024,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9088,
											"end": 9090,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 9083,
											"end": 9086,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9024,
											"end": 9091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9024,
											"end": 9091,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 9024,
											"end": 9091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9017,
											"end": 9091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9189,
											"end": 9192,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 9100,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9100,
											"end": 9193,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 9100,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9218,
											"end": 9220,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9213,
											"end": 9216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9209,
											"end": 9221,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9221,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9202,
											"end": 9221,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 9227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 9227,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 9227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8861,
											"end": 9227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9652,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 9233,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9399,
											"end": 9403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9414,
											"end": 9440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9486,
											"end": 9495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9480,
											"end": 9484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9496,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9461,
											"end": 9470,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9457,
											"end": 9474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9450,
											"end": 9497,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9514,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9640,
											"end": 9644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9514,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 9514,
											"end": 9645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9514,
											"end": 9645,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 9514,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9652,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9652,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9233,
											"end": 9652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9838,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9658,
											"end": 9838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9706,
											"end": 9783,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9703,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9784,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9803,
											"end": 9807,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9800,
											"end": 9801,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9793,
											"end": 9808,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9827,
											"end": 9831,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9824,
											"end": 9825,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9817,
											"end": 9832,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 9901,
											"end": 9921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 9901,
											"end": 9921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9953,
											"end": 9954,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 9935,
											"end": 9955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9955,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 9935,
											"end": 9955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 9955,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9930,
											"end": 9955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9974,
											"end": 9975,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9964,
											"end": 9999,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9964,
											"end": 9999,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9979,
											"end": 9997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 9979,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9964,
											"end": 9999,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 9964,
											"end": 9999,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10018,
											"end": 10019,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10023,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9844,
											"end": 10029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10075,
											"end": 10079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10095,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 10113,
											"end": 10114,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10095,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10095,
											"end": 10115,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 10095,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10090,
											"end": 10115,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10090,
											"end": 10115,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10147,
											"end": 10148,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10149,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10129,
											"end": 10149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10149,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 10129,
											"end": 10149,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10124,
											"end": 10149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10173,
											"end": 10174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10166,
											"end": 10175,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10158,
											"end": 10175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10158,
											"end": 10175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10197,
											"end": 10198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10191,
											"end": 10195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10188,
											"end": 10199,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 10202,
											"end": 10220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 10202,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 10185,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10035,
											"end": 10229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10360,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10394,
											"end": 10396,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10383,
											"end": 10392,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10379,
											"end": 10397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10371,
											"end": 10397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10464,
											"end": 10473,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10460,
											"end": 10477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10451,
											"end": 10457,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10407,
											"end": 10478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10407,
											"end": 10478,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 10407,
											"end": 10478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10556,
											"end": 10558,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10545,
											"end": 10554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10541,
											"end": 10559,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10532,
											"end": 10538,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10488,
											"end": 10560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10488,
											"end": 10560,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 10488,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10235,
											"end": 10567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10663,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10573,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10607,
											"end": 10614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10650,
											"end": 10655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10643,
											"end": 10656,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10625,
											"end": 10657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10625,
											"end": 10657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10663,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10663,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10573,
											"end": 10663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10669,
											"end": 10785,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10669,
											"end": 10785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10754,
											"end": 10759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 10739,
											"end": 10760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "tag",
											"source": 6,
											"value": "299"
										},
										{
											"begin": 10739,
											"end": 10760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10732,
											"end": 10737,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10729,
											"end": 10761,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 10719,
											"end": 10779,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10775,
											"end": 10776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10765,
											"end": 10777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10719,
											"end": 10779,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 10719,
											"end": 10779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10669,
											"end": 10785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10669,
											"end": 10785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 10850,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10870,
											"end": 10883,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10861,
											"end": 10883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10861,
											"end": 10883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10916,
											"end": 10921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 10892,
											"end": 10922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 10892,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11001,
											"end": 11007,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11052,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11038,
											"end": 11047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11029,
											"end": 11036,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11025,
											"end": 11048,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11021,
											"end": 11053,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 11056,
											"end": 11135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11176,
											"end": 11177,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 11254,
											"end": 11261,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11245,
											"end": 11251,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11243,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11230,
											"end": 11252,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11201,
											"end": 11262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11201,
											"end": 11262,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 11201,
											"end": 11262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11262,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11191,
											"end": 11262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11147,
											"end": 11272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10934,
											"end": 11279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11285,
											"end": 11456,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11285,
											"end": 11456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11425,
											"end": 11448,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 11421,
											"end": 11422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11413,
											"end": 11419,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11409,
											"end": 11423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11402,
											"end": 11449,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11285,
											"end": 11456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11285,
											"end": 11456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11828,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11462,
											"end": 11828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11604,
											"end": 11607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11625,
											"end": 11692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11689,
											"end": 11691,
											"name": "PUSH",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 11684,
											"end": 11687,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11625,
											"end": 11692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 11625,
											"end": 11692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11625,
											"end": 11692,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 11625,
											"end": 11692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11618,
											"end": 11692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11618,
											"end": 11692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11790,
											"end": 11793,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11701,
											"end": 11794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11701,
											"end": 11794,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 11701,
											"end": 11794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11819,
											"end": 11821,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11814,
											"end": 11817,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11810,
											"end": 11822,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11803,
											"end": 11822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11462,
											"end": 11828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 12253,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 11834,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12000,
											"end": 12004,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12038,
											"end": 12040,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12027,
											"end": 12036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12023,
											"end": 12041,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12015,
											"end": 12041,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12015,
											"end": 12041,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12087,
											"end": 12096,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12081,
											"end": 12085,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12077,
											"end": 12097,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12073,
											"end": 12074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12062,
											"end": 12071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12058,
											"end": 12075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12051,
											"end": 12098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12115,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 12241,
											"end": 12245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12115,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 12115,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12115,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 12115,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12107,
											"end": 12246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12107,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 12253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 12253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 12253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11834,
											"end": 12253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12259,
											"end": 12433,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 12259,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12399,
											"end": 12425,
											"name": "PUSH",
											"source": 6,
											"value": "496E636F7272656374207061796D656E7420616D6F756E740000000000000000"
										},
										{
											"begin": 12395,
											"end": 12396,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12387,
											"end": 12393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12383,
											"end": 12397,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12376,
											"end": 12426,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12259,
											"end": 12433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12259,
											"end": 12433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12439,
											"end": 12805,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 12439,
											"end": 12805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12581,
											"end": 12584,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12602,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 12666,
											"end": 12668,
											"name": "PUSH",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 12661,
											"end": 12664,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12602,
											"end": 12669,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 12602,
											"end": 12669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12602,
											"end": 12669,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 12602,
											"end": 12669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12595,
											"end": 12669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12595,
											"end": 12669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12678,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 12767,
											"end": 12770,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12678,
											"end": 12771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 12678,
											"end": 12771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12678,
											"end": 12771,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 12678,
											"end": 12771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12796,
											"end": 12798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12791,
											"end": 12794,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 12799,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12780,
											"end": 12799,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12780,
											"end": 12799,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12439,
											"end": 12805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12439,
											"end": 12805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12439,
											"end": 12805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12439,
											"end": 12805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 13230,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 12811,
											"end": 13230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12977,
											"end": 12981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13015,
											"end": 13017,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13004,
											"end": 13013,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13000,
											"end": 13018,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12992,
											"end": 13018,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13064,
											"end": 13073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13058,
											"end": 13062,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13054,
											"end": 13074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13050,
											"end": 13051,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13039,
											"end": 13048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13035,
											"end": 13052,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13028,
											"end": 13075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13218,
											"end": 13222,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13223,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 13092,
											"end": 13223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13092,
											"end": 13223,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13092,
											"end": 13223,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13084,
											"end": 13223,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13084,
											"end": 13223,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 13230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 13230,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 13230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12811,
											"end": 13230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13357,
											"end": 13361,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13395,
											"end": 13397,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13384,
											"end": 13393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13380,
											"end": 13398,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13398,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13372,
											"end": 13398,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13476,
											"end": 13477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13465,
											"end": 13474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13461,
											"end": 13478,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13452,
											"end": 13458,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13408,
											"end": 13479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 13408,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13546,
											"end": 13555,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13542,
											"end": 13560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13533,
											"end": 13539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 13489,
											"end": 13561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 13489,
											"end": 13561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13236,
											"end": 13568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13631,
											"end": 13636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13662,
											"end": 13668,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13656,
											"end": 13669,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13647,
											"end": 13669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 13705,
											"end": 13710,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 13678,
											"end": 13711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 13711,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 13678,
											"end": 13711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13574,
											"end": 13717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13793,
											"end": 13799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13842,
											"end": 13844,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13830,
											"end": 13839,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13821,
											"end": 13828,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13817,
											"end": 13840,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 13845,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13929,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13810,
											"end": 13929,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13848,
											"end": 13927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 13848,
											"end": 13927,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 13848,
											"end": 13927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13848,
											"end": 13927,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 13848,
											"end": 13927,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13810,
											"end": 13929,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 13810,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13968,
											"end": 13969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13993,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 14049,
											"end": 14056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14040,
											"end": 14046,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14029,
											"end": 14038,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14025,
											"end": 14047,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14057,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 13993,
											"end": 14057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13993,
											"end": 14057,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 13993,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13983,
											"end": 14057,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13983,
											"end": 14057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13939,
											"end": 14067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13723,
											"end": 14074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14261,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 14080,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14220,
											"end": 14253,
											"name": "PUSH",
											"source": 6,
											"value": "5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700"
										},
										{
											"begin": 14216,
											"end": 14217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14208,
											"end": 14214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14204,
											"end": 14218,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14197,
											"end": 14254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14261,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14080,
											"end": 14261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14633,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 14267,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14409,
											"end": 14412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14430,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 14494,
											"end": 14496,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 14489,
											"end": 14492,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14430,
											"end": 14497,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 14430,
											"end": 14497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14430,
											"end": 14497,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 14430,
											"end": 14497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14423,
											"end": 14497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 14595,
											"end": 14598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 14506,
											"end": 14599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14506,
											"end": 14599,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 14506,
											"end": 14599,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14624,
											"end": 14626,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14619,
											"end": 14622,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14615,
											"end": 14627,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14608,
											"end": 14627,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14633,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14633,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14267,
											"end": 14633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 15058,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 14639,
											"end": 15058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14805,
											"end": 14809,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14843,
											"end": 14845,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14832,
											"end": 14841,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14828,
											"end": 14846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14820,
											"end": 14846,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14820,
											"end": 14846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14892,
											"end": 14901,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14886,
											"end": 14890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14882,
											"end": 14902,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14878,
											"end": 14879,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14867,
											"end": 14876,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14863,
											"end": 14880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14856,
											"end": 14903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 15046,
											"end": 15050,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 15051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 14920,
											"end": 15051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14920,
											"end": 15051,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 14920,
											"end": 15051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14912,
											"end": 15051,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14912,
											"end": 15051,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 15058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 15058,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 15058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14639,
											"end": 15058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15213,
											"end": 15217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15251,
											"end": 15253,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 15240,
											"end": 15249,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15236,
											"end": 15254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15228,
											"end": 15254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15228,
											"end": 15254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15264,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 15332,
											"end": 15333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15321,
											"end": 15330,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15317,
											"end": 15334,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15308,
											"end": 15314,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 15264,
											"end": 15335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 15264,
											"end": 15335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15264,
											"end": 15335,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 15264,
											"end": 15335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15345,
											"end": 15417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 15413,
											"end": 15415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 15402,
											"end": 15411,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15398,
											"end": 15416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15389,
											"end": 15395,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 15345,
											"end": 15417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 15345,
											"end": 15417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15345,
											"end": 15417,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 15345,
											"end": 15417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15427,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 15495,
											"end": 15497,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 15484,
											"end": 15493,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15480,
											"end": 15498,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15471,
											"end": 15477,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 15427,
											"end": 15499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 15427,
											"end": 15499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15427,
											"end": 15499,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 15427,
											"end": 15499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15064,
											"end": 15506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15688,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 15512,
											"end": 15688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15652,
											"end": 15680,
											"name": "PUSH",
											"source": 6,
											"value": "436F6D6D697373696F6E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 15648,
											"end": 15649,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15640,
											"end": 15646,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15636,
											"end": 15650,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 15629,
											"end": 15681,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15512,
											"end": 15688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 16060,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 15694,
											"end": 16060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15836,
											"end": 15839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 15857,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 15921,
											"end": 15923,
											"name": "PUSH",
											"source": 6,
											"value": "1A"
										},
										{
											"begin": 15916,
											"end": 15919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 15857,
											"end": 15924,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 15857,
											"end": 15924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15857,
											"end": 15924,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 15857,
											"end": 15924,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 15850,
											"end": 15924,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15850,
											"end": 15924,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15933,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 16022,
											"end": 16025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 15933,
											"end": 16026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 15933,
											"end": 16026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 15933,
											"end": 16026,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 15933,
											"end": 16026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16051,
											"end": 16053,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16046,
											"end": 16049,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16042,
											"end": 16054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16035,
											"end": 16054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16035,
											"end": 16054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 16060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 16060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 16060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 15694,
											"end": 16060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16066,
											"end": 16485,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 16066,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16232,
											"end": 16236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16270,
											"end": 16272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 16259,
											"end": 16268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16255,
											"end": 16273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16247,
											"end": 16273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16247,
											"end": 16273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16319,
											"end": 16328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16313,
											"end": 16317,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16309,
											"end": 16329,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 16305,
											"end": 16306,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16294,
											"end": 16303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16290,
											"end": 16307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16283,
											"end": 16330,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16347,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 16473,
											"end": 16477,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 16347,
											"end": 16478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 16347,
											"end": 16478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16347,
											"end": 16478,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 16347,
											"end": 16478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16339,
											"end": 16478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16339,
											"end": 16478,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16066,
											"end": 16485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16066,
											"end": 16485,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16066,
											"end": 16485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16066,
											"end": 16485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16491,
											"end": 16670,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 16491,
											"end": 16670,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16631,
											"end": 16662,
											"name": "PUSH",
											"source": 6,
											"value": "5061796D656E7420746F6B656E207472616E73666572206661696C6564000000"
										},
										{
											"begin": 16627,
											"end": 16628,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16619,
											"end": 16625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16615,
											"end": 16629,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16608,
											"end": 16663,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 16491,
											"end": 16670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16491,
											"end": 16670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16676,
											"end": 17042,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 16676,
											"end": 17042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16818,
											"end": 16821,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 16839,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 16903,
											"end": 16905,
											"name": "PUSH",
											"source": 6,
											"value": "1D"
										},
										{
											"begin": 16898,
											"end": 16901,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 16906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 16839,
											"end": 16906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16839,
											"end": 16906,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 16839,
											"end": 16906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 16832,
											"end": 16906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16832,
											"end": 16906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16915,
											"end": 17008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 17004,
											"end": 17007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 16915,
											"end": 17008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 16915,
											"end": 17008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 16915,
											"end": 17008,
											"name": "tag",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 16915,
											"end": 17008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17033,
											"end": 17035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17028,
											"end": 17031,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17024,
											"end": 17036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17017,
											"end": 17036,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17017,
											"end": 17036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16676,
											"end": 17042,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 16676,
											"end": 17042,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 16676,
											"end": 17042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 16676,
											"end": 17042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17467,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 17048,
											"end": 17467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17214,
											"end": 17218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 17241,
											"end": 17250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17237,
											"end": 17255,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17229,
											"end": 17255,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17229,
											"end": 17255,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17301,
											"end": 17310,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17295,
											"end": 17299,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17291,
											"end": 17311,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 17287,
											"end": 17288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17276,
											"end": 17285,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17272,
											"end": 17289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17265,
											"end": 17312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17329,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 17455,
											"end": 17459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 17329,
											"end": 17460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 17329,
											"end": 17460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17329,
											"end": 17460,
											"name": "tag",
											"source": 6,
											"value": "349"
										},
										{
											"begin": 17329,
											"end": 17460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17321,
											"end": 17460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17321,
											"end": 17460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17467,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17467,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17467,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17048,
											"end": 17467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17654,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 17473,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17613,
											"end": 17646,
											"name": "PUSH",
											"source": 6,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 17609,
											"end": 17610,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17601,
											"end": 17607,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17597,
											"end": 17611,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 17590,
											"end": 17647,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17654,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17473,
											"end": 17654,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17660,
											"end": 18026,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 17660,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17802,
											"end": 17805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 17823,
											"end": 17890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 17887,
											"end": 17889,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 17882,
											"end": 17885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 17823,
											"end": 17890,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 17823,
											"end": 17890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17823,
											"end": 17890,
											"name": "tag",
											"source": 6,
											"value": "352"
										},
										{
											"begin": 17823,
											"end": 17890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 17816,
											"end": 17890,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17816,
											"end": 17890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17899,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 17988,
											"end": 17991,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 17899,
											"end": 17992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 17899,
											"end": 17992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 17899,
											"end": 17992,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 17899,
											"end": 17992,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18017,
											"end": 18019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18012,
											"end": 18015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18008,
											"end": 18020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18001,
											"end": 18020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18001,
											"end": 18020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17660,
											"end": 18026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 17660,
											"end": 18026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 17660,
											"end": 18026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 17660,
											"end": 18026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18032,
											"end": 18451,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 18032,
											"end": 18451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18198,
											"end": 18202,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18236,
											"end": 18238,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18225,
											"end": 18234,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18221,
											"end": 18239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18213,
											"end": 18239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18213,
											"end": 18239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18285,
											"end": 18294,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18279,
											"end": 18283,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18275,
											"end": 18295,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 18271,
											"end": 18272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18260,
											"end": 18269,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18256,
											"end": 18273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18249,
											"end": 18296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18313,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 18439,
											"end": 18443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 18313,
											"end": 18444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 18313,
											"end": 18444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18313,
											"end": 18444,
											"name": "tag",
											"source": 6,
											"value": "355"
										},
										{
											"begin": 18313,
											"end": 18444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18305,
											"end": 18444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18305,
											"end": 18444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18032,
											"end": 18451,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18032,
											"end": 18451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18032,
											"end": 18451,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18032,
											"end": 18451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18457,
											"end": 18639,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 18457,
											"end": 18639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18597,
											"end": 18631,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E73206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 18593,
											"end": 18594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18581,
											"end": 18595,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18574,
											"end": 18632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 18457,
											"end": 18639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18457,
											"end": 18639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18645,
											"end": 19011,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 18645,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18787,
											"end": 18790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 18808,
											"end": 18875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 18872,
											"end": 18874,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18867,
											"end": 18870,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 18808,
											"end": 18875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 18808,
											"end": 18875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18808,
											"end": 18875,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 18808,
											"end": 18875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 18801,
											"end": 18875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18801,
											"end": 18875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18884,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 18973,
											"end": 18976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18884,
											"end": 18977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 18884,
											"end": 18977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 18884,
											"end": 18977,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 18884,
											"end": 18977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19002,
											"end": 19004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 18997,
											"end": 19000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 18993,
											"end": 19005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 18986,
											"end": 19005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18986,
											"end": 19005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18645,
											"end": 19011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 18645,
											"end": 19011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 18645,
											"end": 19011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 18645,
											"end": 19011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19436,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 19017,
											"end": 19436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19183,
											"end": 19187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19221,
											"end": 19223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19210,
											"end": 19219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19206,
											"end": 19224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19198,
											"end": 19224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19270,
											"end": 19279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19264,
											"end": 19268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19260,
											"end": 19280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 19256,
											"end": 19257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19245,
											"end": 19254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19241,
											"end": 19258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19234,
											"end": 19281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19298,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 19424,
											"end": 19428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 19298,
											"end": 19429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 19298,
											"end": 19429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19298,
											"end": 19429,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 19298,
											"end": 19429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19290,
											"end": 19429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19290,
											"end": 19429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19017,
											"end": 19436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19442,
											"end": 19663,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 19442,
											"end": 19663,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19582,
											"end": 19616,
											"name": "PUSH",
											"source": 6,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E207A65"
										},
										{
											"begin": 19578,
											"end": 19579,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19570,
											"end": 19576,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19566,
											"end": 19580,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19559,
											"end": 19617,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19651,
											"end": 19655,
											"name": "PUSH",
											"source": 6,
											"value": "726F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19646,
											"end": 19648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 19638,
											"end": 19644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19634,
											"end": 19649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 19627,
											"end": 19656,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 19442,
											"end": 19663,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19442,
											"end": 19663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19669,
											"end": 20035,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 19669,
											"end": 20035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19811,
											"end": 19814,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 19832,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 19896,
											"end": 19898,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 19891,
											"end": 19894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 19832,
											"end": 19899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 19832,
											"end": 19899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19832,
											"end": 19899,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 19832,
											"end": 19899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 19825,
											"end": 19899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19825,
											"end": 19899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19908,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 19997,
											"end": 20000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 19908,
											"end": 20001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 19908,
											"end": 20001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 19908,
											"end": 20001,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 19908,
											"end": 20001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20026,
											"end": 20028,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 20021,
											"end": 20024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20017,
											"end": 20029,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20010,
											"end": 20029,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20010,
											"end": 20029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19669,
											"end": 20035,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 19669,
											"end": 20035,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 19669,
											"end": 20035,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 19669,
											"end": 20035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20041,
											"end": 20460,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 20041,
											"end": 20460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20207,
											"end": 20211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20245,
											"end": 20247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20234,
											"end": 20243,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20230,
											"end": 20248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20222,
											"end": 20248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20222,
											"end": 20248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20294,
											"end": 20303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20288,
											"end": 20292,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20284,
											"end": 20304,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 20280,
											"end": 20281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20269,
											"end": 20278,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20265,
											"end": 20282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20258,
											"end": 20305,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20322,
											"end": 20453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 20448,
											"end": 20452,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 20322,
											"end": 20453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 20322,
											"end": 20453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20322,
											"end": 20453,
											"name": "tag",
											"source": 6,
											"value": "367"
										},
										{
											"begin": 20322,
											"end": 20453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20314,
											"end": 20453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20314,
											"end": 20453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20041,
											"end": 20460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20041,
											"end": 20460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20041,
											"end": 20460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20041,
											"end": 20460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20466,
											"end": 20639,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 20466,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20606,
											"end": 20631,
											"name": "PUSH",
											"source": 6,
											"value": "546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000"
										},
										{
											"begin": 20602,
											"end": 20603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20594,
											"end": 20600,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20590,
											"end": 20604,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20583,
											"end": 20632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 20466,
											"end": 20639,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20466,
											"end": 20639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20645,
											"end": 21011,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 20645,
											"end": 21011,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20787,
											"end": 20790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 20808,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 20872,
											"end": 20874,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 20867,
											"end": 20870,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 20808,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 20808,
											"end": 20875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20808,
											"end": 20875,
											"name": "tag",
											"source": 6,
											"value": "370"
										},
										{
											"begin": 20808,
											"end": 20875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 20801,
											"end": 20875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20801,
											"end": 20875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20884,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 20973,
											"end": 20976,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20884,
											"end": 20977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 20884,
											"end": 20977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 20884,
											"end": 20977,
											"name": "tag",
											"source": 6,
											"value": "371"
										},
										{
											"begin": 20884,
											"end": 20977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21002,
											"end": 21004,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 20997,
											"end": 21000,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 20993,
											"end": 21005,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 20986,
											"end": 21005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20986,
											"end": 21005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20645,
											"end": 21011,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 20645,
											"end": 21011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 20645,
											"end": 21011,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 20645,
											"end": 21011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21436,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 21017,
											"end": 21436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21183,
											"end": 21187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21221,
											"end": 21223,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 21210,
											"end": 21219,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21206,
											"end": 21224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21198,
											"end": 21224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21198,
											"end": 21224,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21270,
											"end": 21279,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21264,
											"end": 21268,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21260,
											"end": 21280,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21256,
											"end": 21257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21245,
											"end": 21254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21241,
											"end": 21258,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21234,
											"end": 21281,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 21298,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 21424,
											"end": 21428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 21298,
											"end": 21429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 21298,
											"end": 21429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21298,
											"end": 21429,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 21298,
											"end": 21429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21290,
											"end": 21429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21290,
											"end": 21429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21017,
											"end": 21436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21442,
											"end": 21675,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 21442,
											"end": 21675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21481,
											"end": 21484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21504,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 21522,
											"end": 21527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21504,
											"end": 21528,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 21504,
											"end": 21528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21504,
											"end": 21528,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 21504,
											"end": 21528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21495,
											"end": 21528,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21495,
											"end": 21528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21550,
											"end": 21616,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21543,
											"end": 21548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21540,
											"end": 21617,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 21537,
											"end": 21640,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 21537,
											"end": 21640,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21620,
											"end": 21638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 21620,
											"end": 21638,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 21620,
											"end": 21638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21620,
											"end": 21638,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 21620,
											"end": 21638,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21537,
											"end": 21640,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 21537,
											"end": 21640,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21667,
											"end": 21668,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 21660,
											"end": 21665,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21656,
											"end": 21669,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21649,
											"end": 21669,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21649,
											"end": 21669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21442,
											"end": 21675,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21442,
											"end": 21675,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21442,
											"end": 21675,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21442,
											"end": 21675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21721,
											"end": 21724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 21740,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 21758,
											"end": 21759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21740,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 21740,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21740,
											"end": 21760,
											"name": "tag",
											"source": 6,
											"value": "379"
										},
										{
											"begin": 21740,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21735,
											"end": 21760,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21735,
											"end": 21760,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21774,
											"end": 21794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 21792,
											"end": 21793,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 21774,
											"end": 21794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 21774,
											"end": 21794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21774,
											"end": 21794,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 21774,
											"end": 21794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21769,
											"end": 21794,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 21769,
											"end": 21794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21817,
											"end": 21818,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21814,
											"end": 21815,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21810,
											"end": 21819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 21803,
											"end": 21819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 21803,
											"end": 21819,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21838,
											"end": 21841,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 21835,
											"end": 21836,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 21832,
											"end": 21842,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 21829,
											"end": 21865,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 21829,
											"end": 21865,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 21829,
											"end": 21865,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 21845,
											"end": 21863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 21845,
											"end": 21863,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 21845,
											"end": 21863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 21845,
											"end": 21863,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 21845,
											"end": 21863,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21829,
											"end": 21865,
											"name": "tag",
											"source": 6,
											"value": "381"
										},
										{
											"begin": 21829,
											"end": 21865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 21681,
											"end": 21872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/SaleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMISSION_PERCENTAGE()": "1bf1de9b",
							"COMMISSION_WALLET()": "17c73ff0",
							"addListing(uint256,address,uint256,uint256)": "9ffae41b",
							"buyTokens(uint256,uint256)": "7975ce28",
							"buyTokensWithERC20(uint256,uint256,address,uint256)": "7a82a87f",
							"listingCounter()": "6c2c9c7d",
							"listings(uint256)": "de74e57b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"COMMISSION_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMISSION_WALLET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensWithERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaleContract.sol\":\"SaleContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/SaleContract.sol\":{\"keccak256\":\"0x4eaf082dd7858a1943f9eee817511bdee300f524f07f34c6a685aa6273dc91db\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3540454c5c3e25d5a93b33b617e9cd817fdf3c7ac703c70afe76252b739a2ed8\",\"dweb:/ipfs/QmetCHoSGTiidkUwCqKzFCrPKL5a8SzdhsrvwUmfwEDrH7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 805,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listings",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_struct(Listing)800_storage)"
							},
							{
								"astId": 807,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listingCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Listing)800_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SaleContract.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)800_storage"
							},
							"t_struct(Listing)800_storage": {
								"encoding": "inplace",
								"label": "struct SaleContract.Listing",
								"members": [
									{
										"astId": 791,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 793,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 795,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "tokens",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 797,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "seller",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 799,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "expiration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1657:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1667:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1675:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1690:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1700:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1613:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1634:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:1"
									},
									"scope": 651,
									"src": "1601:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1839:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1856:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1849:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1824:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:1"
									},
									"scope": 651,
									"src": "1779:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2043:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2053:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2028:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:1"
									},
									"scope": 651,
									"src": "1981:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2763:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2773:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2756:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:1"
									},
									"scope": 651,
									"src": "2707:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2910:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2927:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2920:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2901:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:1"
									},
									"scope": 651,
									"src": "2849:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3078:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3095:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3105:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3088:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:1"
									},
									"scope": 651,
									"src": "3004:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3390:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3400:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3416:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3448:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3455:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3459:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3438:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3475:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3333:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3345:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3384:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:1"
									},
									"scope": 651,
									"src": "3315:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3640:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3657:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3669:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3676:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3650:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3570:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3631:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:1"
									},
									"scope": 651,
									"src": "3551:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4077:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4103:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4134:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4150:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4125:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4166:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4015:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4071:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:1"
									},
									"scope": 651,
									"src": "3998:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4869:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4879:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4897:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4935:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4941:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4950:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4919:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4976:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4982:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4966:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5002:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4798:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4812:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4824:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4863:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:1"
									},
									"scope": 651,
									"src": "4776:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5462:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5476:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5472:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5496:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5517:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5510:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5571:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5567:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5589:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5610:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5603:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5670:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5676:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5680:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5662:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5412:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5426:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5438:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:1"
									},
									"scope": 651,
									"src": "5393:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6083:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6097:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6271:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6285:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6307:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6317:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6340:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6354:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6336:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6361:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6411:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6417:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6430:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6386:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6571:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6581:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6589:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6603:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6093:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6117:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6233:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6249:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6647:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6862:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7021:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7031:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7038:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6643:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6665:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6810:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6826:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7092:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7098:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7102:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7083:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7078:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6025:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6039:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6051:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:1"
									},
									"scope": 651,
									"src": "6008:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7514:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7524:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7551:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7572:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7565:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7653:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7624:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7473:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7490:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:1"
									},
									"scope": 651,
									"src": "7458:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8040:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8054:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8050:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8077:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8098:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8091:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8156:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8177:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8148:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7999:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8016:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:1"
									},
									"scope": 651,
									"src": "7984:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8800:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8826:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8835:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8810:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8744:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8759:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8776:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:1"
									},
									"scope": 651,
									"src": "8726:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9799:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9813:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9809:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9834:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9855:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9848:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9911:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9907:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9934:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9955:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9948:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10006:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10018:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10025:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10036:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10055:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10051:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10066:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10094:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10101:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10110:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10085:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10080:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9719:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9734:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9751:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9766:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:1"
									},
									"scope": 651,
									"src": "9701:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10504:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10514:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10551:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10541:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10580:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10576:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10618:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10636:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10655:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10632:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10662:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10714:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10723:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10741:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10687:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10812:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10819:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10828:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10847:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10803:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10440:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10455:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10472:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:1"
									},
									"scope": 651,
									"src": "10415:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9787:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10789:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/SaleContract.sol": {
				"ast": {
					"absolutePath": "contracts/SaleContract.sol",
					"exportedSymbols": {
						"ERC20": [
							651
						],
						"SaleContract": [
							1147
						]
					},
					"id": 1148,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 789,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1148,
							"sourceUnit": 652,
							"src": "65:68:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 788,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 651,
										"src": "73:5:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SaleContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1147,
							"linearizedBaseContracts": [
								1147
							],
							"name": "SaleContract",
							"nameLocation": "144:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "SaleContract.Listing",
									"id": 800,
									"members": [
										{
											"constant": false,
											"id": 791,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "196:15:5",
											"nodeType": "VariableDeclaration",
											"scope": 800,
											"src": "188:23:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 790,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "188:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 793,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "229:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 800,
											"src": "221:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 792,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "221:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 795,
											"mutability": "mutable",
											"name": "tokens",
											"nameLocation": "252:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 800,
											"src": "244:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 794,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "244:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 797,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "276:6:5",
											"nodeType": "VariableDeclaration",
											"scope": 800,
											"src": "268:14:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 796,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "268:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 799,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "300:10:5",
											"nodeType": "VariableDeclaration",
											"scope": 800,
											"src": "292:18:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 798,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "292:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "170:7:5",
									"nodeType": "StructDefinition",
									"scope": 1147,
									"src": "163:154:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 805,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "359:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "323:44:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$800_storage_$",
										"typeString": "mapping(uint256 => struct SaleContract.Listing)"
									},
									"typeName": {
										"id": 804,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 801,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "332:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "323:28:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$800_storage_$",
											"typeString": "mapping(uint256 => struct SaleContract.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 803,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 802,
												"name": "Listing",
												"nameLocations": [
													"343:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 800,
												"src": "343:7:5"
											},
											"referencedDeclaration": 800,
											"src": "343:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
												"typeString": "struct SaleContract.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c2c9c7d",
									"id": 807,
									"mutability": "mutable",
									"name": "listingCounter",
									"nameLocation": "388:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "373:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 806,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "373:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "17c73ff0",
									"id": 810,
									"mutability": "constant",
									"name": "COMMISSION_WALLET",
									"nameLocation": "432:17:5",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "408:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 808,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "408:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846434638643262303938423331363036353462626144613161383736393438336337314332383862",
										"id": 809,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "452:42:5",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xFCF8d2b098B3160654bbaDa1a8769483c71C288b"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1bf1de9b",
									"id": 813,
									"mutability": "constant",
									"name": "COMMISSION_PERCENTAGE",
									"nameLocation": "524:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 1147,
									"src": "500:50:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 811,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "500:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 812,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "548:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "658:700:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 825,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "676:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "684:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "676:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "687:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 824,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "668:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "668:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "668:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 832,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "739:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "748:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "739:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "751:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															},
															"value": "Tokens must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															}
														],
														"id": 831,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "731:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "731:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "731:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 839,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "804:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "815:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "804:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "818:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															},
															"value": "Duration must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															}
														],
														"id": 838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "796:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "796:59:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "796:59:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 850,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "906:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "910:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "906:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 854,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "926:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1147",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1147",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "918:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "918:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "918:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 847,
																				"name": "contractAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 817,
																				"src": "879:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 846,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "873:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 848,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "873:22:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$651",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "896:9:5",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "873:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "873:59:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 857,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "936:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "873:69:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "944:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															},
															"value": "Token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "865:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "865:105:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "865:105:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 867,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1024:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1028:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1024:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 871,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1044:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SaleContract_$1147",
																				"typeString": "contract SaleContract"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SaleContract_$1147",
																				"typeString": "contract SaleContract"
																			}
																		],
																		"id": 870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1036:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 869,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1036:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1036:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 873,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 819,
																	"src": "1051:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 864,
																			"name": "contractAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 817,
																			"src": "994:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 863,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "988:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "988:22:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1011:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 334,
																"src": "988:35:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 874,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "988:70:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1060:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "980:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:104:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "980:104:5"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1095:16:5",
													"subExpression": {
														"id": 878,
														"name": "listingCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "1095:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "1095:16:5"
											},
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 881,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "1121:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$800_storage_$",
																"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
															}
														},
														"id": 883,
														"indexExpression": {
															"id": 882,
															"name": "listingCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "1130:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1121:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$800_storage",
															"typeString": "struct SaleContract.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 885,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 817,
																"src": "1187:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 886,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 815,
																"src": "1223:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 887,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "1250:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 888,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1278:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1282:6:5",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1278:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 890,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1314:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1320:9:5",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1314:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 892,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 821,
																	"src": "1332:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1314:26:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 884,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "1148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$800_storage_ptr_$",
																"typeString": "type(struct SaleContract.Listing storage pointer)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1170:15:5",
															"1216:5:5",
															"1242:6:5",
															"1270:6:5",
															"1302:10:5"
														],
														"names": [
															"contractAddress",
															"price",
															"tokens",
															"seller",
															"expiration"
														],
														"nodeType": "FunctionCall",
														"src": "1148:203:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$800_memory_ptr",
															"typeString": "struct SaleContract.Listing memory"
														}
													},
													"src": "1121:230:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$800_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "1121:230:5"
											}
										]
									},
									"functionSelector": "9ffae41b",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "566:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "585:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "577:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "600:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "592:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "625:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "617:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "641:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "633:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "576:74:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "658:0:5"
									},
									"scope": 1147,
									"src": "557:801:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "1438:839:5",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "1464:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "1448:23:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 906,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 905,
																"name": "Listing",
																"nameLocations": [
																	"1448:7:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 800,
																"src": "1448:7:5"
															},
															"referencedDeclaration": 800,
															"src": "1448:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 911,
												"initialValue": {
													"baseExpression": {
														"id": 908,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "1474:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$800_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 910,
													"indexExpression": {
														"id": 909,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "1483:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1474:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$800_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1448:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 913,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1511:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1519:6:5",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "1511:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1528:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1511:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1531:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															},
															"value": "Listing does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															}
														],
														"id": 912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1503:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "1503:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 921,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1574:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1580:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1574:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 923,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1593:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1601:10:5",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 799,
																"src": "1593:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1574:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206861732065787069726564",
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1613:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															},
															"value": "Listing has expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															}
														],
														"id": 920,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1566:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1566:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "1566:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 930,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "1653:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1661:6:5",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "1653:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 932,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "1671:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1653:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b656e73206f6e2073616c65",
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1684:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
																"typeString": "literal_string \"Token amount is greater than tokens on sale\""
															},
															"value": "Token amount is greater than tokens on sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
																"typeString": "literal_string \"Token amount is greater than tokens on sale\""
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1645:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1645:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "1645:85:5"
											},
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "1757:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "1749:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 937,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1749:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 939,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "1770:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 940,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1778:5:5",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "1770:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 941,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "1786:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1770:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1749:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 945,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1815:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1819:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1815:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 947,
																"name": "totalPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "1828:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1815:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f72726563742076616c75652073656e74",
															"id": 949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1840:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
																"typeString": "literal_string \"Incorrect value sent\""
															},
															"value": "Incorrect value sent"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d2b91d944cb3aac6e1e5056f29456bae194f85837995a793bfeba7843ce28f1",
																"typeString": "literal_string \"Incorrect value sent\""
															}
														],
														"id": 944,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1807:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1807:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "1807:56:5"
											},
											{
												"assignments": [
													953
												],
												"declarations": [
													{
														"constant": false,
														"id": 953,
														"mutability": "mutable",
														"name": "commission",
														"nameLocation": "1882:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "1874:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 952,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1874:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 954,
																	"name": "totalPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 938,
																	"src": "1896:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 955,
																	"name": "COMMISSION_PERCENTAGE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "1909:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1896:34:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1895:36:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1934:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "1895:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1874:63:5"
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "1955:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1006,
														"src": "1947:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1947:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "totalPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "1970:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 964,
														"name": "commission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 953,
														"src": "1983:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1970:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1947:46:5"
											},
											{
												"expression": {
													"id": 974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 967,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "2004:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 969,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2012:6:5",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "2004:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 970,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "2021:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2029:6:5",
															"memberName": "tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "2021:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 972,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "2038:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2021:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2004:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 975,
												"nodeType": "ExpressionStatement",
												"src": "2004:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 982,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2107:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2111:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2107:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 984,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "2119:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 978,
																				"name": "listing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "2073:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																					"typeString": "struct SaleContract.Listing storage pointer"
																				}
																			},
																			"id": 979,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2081:15:5",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 791,
																			"src": "2073:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 977,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "2067:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2067:30:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2098:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "2067:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2067:64:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2133:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2059:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:98:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "2059:98:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "commission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2203:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 991,
																	"name": "COMMISSION_WALLET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "2175:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2167:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 989,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2167:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2167:26:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2194:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2167:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2167:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "2167:47:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1003,
															"name": "sellerAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "2257:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 999,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 907,
																		"src": "2232:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																			"typeString": "struct SaleContract.Listing storage pointer"
																		}
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2240:6:5",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 797,
																	"src": "2232:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2224:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 997,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2224:8:5",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2224:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1002,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2248:8:5",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2224:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2224:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "2224:46:5"
											}
										]
									},
									"functionSelector": "7975ce28",
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokens",
									"nameLocation": "1373:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "1391:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1383:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1410:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1402:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:40:5"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:5"
									},
									"scope": 1147,
									"src": "1364:913:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "2403:1118:5",
										"statements": [
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2429:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2413:23:5",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 1019,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1018,
																"name": "Listing",
																"nameLocations": [
																	"2413:7:5"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 800,
																"src": "2413:7:5"
															},
															"referencedDeclaration": 800,
															"src": "2413:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"baseExpression": {
														"id": 1021,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "2439:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$800_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 1023,
													"indexExpression": {
														"id": 1022,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1009,
														"src": "2448:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2439:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$800_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2413:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1026,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2476:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2484:6:5",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "2476:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2493:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2476:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2496:24:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															},
															"value": "Listing does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															}
														],
														"id": 1025,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2468:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2468:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "2468:53:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1034,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2539:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2545:9:5",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2539:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1036,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2558:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2566:10:5",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 799,
																"src": "2558:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2539:37:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206861732065787069726564",
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2578:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															},
															"value": "Listing has expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2531:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2531:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "2531:69:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1043,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "2618:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2626:6:5",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 795,
																"src": "2618:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1045,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "2636:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2618:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e742069732067726561746572207468616e20746f6b656e73206f6e2073616c65",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
																"typeString": "literal_string \"Token amount is greater than tokens on sale\""
															},
															"value": "Token amount is greater than tokens on sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_85c164687a0bde2416c2cf20c1dca54bc1dbfd94d477eb11bb746ca1ade965f5",
																"typeString": "literal_string \"Token amount is greater than tokens on sale\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2610:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2610:85:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "2610:85:5"
											},
											{
												"assignments": [
													1051
												],
												"declarations": [
													{
														"constant": false,
														"id": 1051,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "2722:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2714:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1050,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1056,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1052,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2735:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2743:5:5",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 793,
														"src": "2735:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1054,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "2751:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2735:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:48:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1058,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "2780:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1059,
																"name": "totalPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "2797:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2780:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2809:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															},
															"value": "Incorrect payment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															}
														],
														"id": 1057,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2772:64:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "2772:64:5"
											},
											{
												"assignments": [
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1065,
														"mutability": "mutable",
														"name": "commission",
														"nameLocation": "2855:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2847:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1064,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2847:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1066,
																	"name": "paymentAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "2869:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1067,
																	"name": "COMMISSION_PERCENTAGE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 813,
																	"src": "2885:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2869:37:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1069,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2868:39:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2910:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2868:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2847:66:5"
											},
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "sellerAmount",
														"nameLocation": "2931:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1145,
														"src": "2923:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1073,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2923:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1075,
														"name": "paymentAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1015,
														"src": "2946:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1076,
														"name": "commission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "2962:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2946:26:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2923:49:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1084,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3021:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3025:6:5",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3021:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1088,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3041:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1147",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1147",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 1087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3033:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1086,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3033:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3033:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1081,
																				"name": "paymentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1013,
																				"src": "2997:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1080,
																			"name": "ERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 651,
																			"src": "2991:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																				"typeString": "type(contract ERC20)"
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2991:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$651",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3011:9:5",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 278,
																	"src": "2991:29:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2991:56:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1091,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1015,
																"src": "3051:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2991:73:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3066:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															},
															"value": "Payment token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2983:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2983:117:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "2983:117:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1101,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3151:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3155:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3151:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1103,
																	"name": "COMMISSION_WALLET",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "3163:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1104,
																	"name": "commission",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "3182:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1098,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "3124:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1097,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "3118:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3118:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3138:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 334,
																"src": "3118:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3118:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6d6d697373696f6e207472616e73666572206661696c6564",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3195:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																"typeString": "literal_string \"Commission transfer failed\""
															},
															"value": "Commission transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67416b8a3d0b1935af75cd94d67d642035c1ccf7d9f1ac4befbc51c748792dff",
																"typeString": "literal_string \"Commission transfer failed\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3110:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3110:114:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "3110:114:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1114,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3275:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3279:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3275:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 1116,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1020,
																		"src": "3287:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																			"typeString": "struct SaleContract.Listing storage pointer"
																		}
																	},
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3295:6:5",
																	"memberName": "seller",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 797,
																	"src": "3287:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1118,
																	"name": "sellerAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1074,
																	"src": "3303:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1111,
																			"name": "paymentToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1013,
																			"src": "3248:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1110,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "3242:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3242:19:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3262:12:5",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 334,
																"src": "3242:32:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3242:74:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e207472616e73666572206661696c6564",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3318:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355",
																"typeString": "literal_string \"Payment token transfer failed\""
															},
															"value": "Payment token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_19168a978eeef7cf8103935291481d6024f7a65325452dac95611fe374bea355",
																"typeString": "literal_string \"Payment token transfer failed\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3234:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3234:116:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1122,
												"nodeType": "ExpressionStatement",
												"src": "3234:116:5"
											},
											{
												"expression": {
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1123,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "3361:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3369:6:5",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "3361:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1126,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3378:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 1127,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3386:6:5",
															"memberName": "tokens",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 795,
															"src": "3378:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 1128,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "3395:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3378:28:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3361:45:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "3361:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1138,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3464:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3468:6:5",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3464:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1140,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1011,
																	"src": "3476:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1134,
																				"name": "listing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1020,
																				"src": "3430:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Listing_$800_storage_ptr",
																					"typeString": "struct SaleContract.Listing storage pointer"
																				}
																			},
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3438:15:5",
																			"memberName": "contractAddress",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 791,
																			"src": "3430:23:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1133,
																		"name": "ERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "3424:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC20_$651_$",
																			"typeString": "type(contract ERC20)"
																		}
																	},
																	"id": 1136,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3424:30:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC20_$651",
																		"typeString": "contract ERC20"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3455:8:5",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 261,
																"src": "3424:39:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3424:64:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3490:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3416:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:98:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "3416:98:5"
											}
										]
									},
									"functionSelector": "7a82a87f",
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokensWithERC20",
									"nameLocation": "2292:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "2319:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2311:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2311:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2338:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2330:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "paymentToken",
												"nameLocation": "2359:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2351:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2351:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "2381:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "2373:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2373:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2310:85:5"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:0:5"
									},
									"scope": 1147,
									"src": "2283:1238:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1148,
							"src": "135:3388:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "39:3485:5"
				},
				"id": 5
			}
		}
	}
}