{
	"id": "0b7758d4c53acd64673c0c0bfdbace01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SaleContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\n\ncontract SaleContract is ReentrancyGuard {\n    using SafeERC20 for ERC20;\n\n    struct Listing {\n        address contractAddress;\n        uint256 price;\n        uint256 tokens;\n        address seller;\n        uint256 expiration;\n    }\n\n    mapping(uint256 => Listing) public listings;\n    uint256 public listingCounter;\n    address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b;\n    uint256 public constant COMMISSION_PERCENTAGE = 10;\n\n    event ListingAdded(uint256 listingId, address indexed seller, address indexed contractAddress, uint256 price, uint256 tokens, uint256 expiration);\n    event TokensPurchased(uint256 listingId, address indexed buyer, uint256 tokenAmount, uint256 price, bool withERC20);\n\n    function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {\n        require(price > 0, \"Price must be greater than zero\");\n        require(tokens > 0, \"Tokens must be greater than zero\");\n        require(duration > 0, \"Duration must be greater than zero\");\n        require(contractAddress != address(0), \"Invalid contract address\");\n\n        ERC20 token = ERC20(contractAddress);\n        require(token.allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\");\n\n        token.safeTransferFrom(msg.sender, address(this), tokens);\n\n        listingCounter++;\n        listings[listingCounter] = Listing({\n            contractAddress: contractAddress,\n            price: price,\n            tokens: tokens,\n            seller: msg.sender,\n            expiration: block.timestamp + duration\n        });\n\n        emit ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration);\n    }\n\n    function buyTokensWithERC20(\n        uint256 listingId,\n        uint256 tokenAmount,\n        address paymentToken,\n        uint256 paymentAmount\n    ) external nonReentrant {\n        Listing storage listing = listings[listingId];\n        require(listing.tokens > 0, \"Listing does not exist\");\n        require(block.timestamp <= listing.expiration, \"Listing has expired\");\n        require(listing.tokens >= tokenAmount, \"Not enough tokens in listing\");\n\n        uint256 totalPrice = listing.price * tokenAmount;\n        uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100;\n        uint256 totalPaymentAmount = totalPrice + commission;\n        require(paymentAmount == totalPaymentAmount, \"Incorrect payment amount\");\n\n        ERC20 paymentERC20 = ERC20(paymentToken);\n        require(paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\");\n\n        paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission);\n        paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice);\n\n        listing.tokens -= tokenAmount;\n        ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount);\n\n        emit TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true);\n    }\n\n    function withdrawTokensFromListing(uint256 listingId) external nonReentrant {\n        Listing storage listing = listings[listingId];\n        require(msg.sender == listing.seller, \"Only listing seller can withdraw\");\n        require(block.timestamp > listing.expiration, \"Listing has not ended\");\n        require(listing.tokens > 0, \"No tokens to withdraw\");\n\n        uint256 tokenAmountToWithdraw = listing.tokens;\n        listing.tokens = 0;\n\n        ERC20 token = ERC20(listing.contractAddress);\n        token.safeTransfer(msg.sender, tokenAmountToWithdraw);\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 249,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 255,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 257,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 259,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 261,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SaleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1295,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SaleContract.sol": {
				"SaleContract": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"name": "ListingAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "withERC20",
									"type": "bool"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COMMISSION_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMISSION_WALLET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "paymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensWithERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "withdrawTokensFromListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SaleContract.sol\":241:3815  contract SaleContract is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/SaleContract.sol\":241:3815  contract SaleContract is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SaleContract.sol\":241:3815  contract SaleContract is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7a82a87f\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x7a82a87f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9ffae41b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf25713bf\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x17c73ff0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1bf1de9b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6c2c9c7d\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/SaleContract.sol\":564:650  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":656:706  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":529:558  uint256 public listingCounter */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":1971:3240  function buyTokensWithERC20(... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/SaleContract.sol\":986:1965  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n    tag_7:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/SaleContract.sol\":480:523  mapping(uint256 => Listing) public listings */\n    tag_8:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":3246:3812  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/SaleContract.sol\":564:650  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_12:\n        /* \"contracts/SaleContract.sol\":608:650  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      0xfcf8d2b098b3160654bbada1a8769483c71c288b\n        /* \"contracts/SaleContract.sol\":564:650  address public constant COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":656:706  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_16:\n        /* \"contracts/SaleContract.sol\":704:706  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":656:706  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":529:558  uint256 public listingCounter */\n    tag_20:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":1971:3240  function buyTokensWithERC20(... */\n    tag_25:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_40\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_41\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_40:\n        /* \"contracts/SaleContract.sol\":2154:2177  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":2180:2188  listings */\n      0x01\n        /* \"contracts/SaleContract.sol\":2180:2199  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":2189:2198  listingId */\n      dup7\n        /* \"contracts/SaleContract.sol\":2180:2199  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":2154:2199  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2234:2235  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":2217:2224  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2217:2231  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2217:2235  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":2209:2262  require(listing.tokens > 0, \"Listing does not exist\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_43:\n        /* \"contracts/SaleContract.sol\":2299:2306  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":2299:2317  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2280:2295  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":2280:2317  block.timestamp <= listing.expiration */\n      gt\n      iszero\n        /* \"contracts/SaleContract.sol\":2272:2341  require(block.timestamp <= listing.expiration, \"Listing has expired\") */\n      tag_46\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_47\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_46:\n        /* \"contracts/SaleContract.sol\":2377:2388  tokenAmount */\n      dup4\n        /* \"contracts/SaleContract.sol\":2359:2366  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2359:2373  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2359:2388  listing.tokens >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2351:2421  require(listing.tokens >= tokenAmount, \"Not enough tokens in listing\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/SaleContract.sol\":2432:2450  uint256 totalPrice */\n      0x00\n        /* \"contracts/SaleContract.sol\":2469:2480  tokenAmount */\n      dup5\n        /* \"contracts/SaleContract.sol\":2453:2460  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":2453:2466  listing.price */\n      0x01\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2453:2480  listing.price * tokenAmount */\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/SaleContract.sol\":2432:2480  uint256 totalPrice = listing.price * tokenAmount */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2490:2508  uint256 commission */\n      0x00\n        /* \"contracts/SaleContract.sol\":2550:2553  100 */\n      0x64\n        /* \"contracts/SaleContract.sol\":704:706  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":2512:2522  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":2512:2546  totalPrice * COMMISSION_PERCENTAGE */\n      tag_54\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_54:\n        /* \"contracts/SaleContract.sol\":2511:2553  (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n        /* \"contracts/SaleContract.sol\":2490:2553  uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2563:2589  uint256 totalPaymentAmount */\n      0x00\n        /* \"contracts/SaleContract.sol\":2605:2615  commission */\n      dup2\n        /* \"contracts/SaleContract.sol\":2592:2602  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":2592:2615  totalPrice + commission */\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"contracts/SaleContract.sol\":2563:2615  uint256 totalPaymentAmount = totalPrice + commission */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2650:2668  totalPaymentAmount */\n      dup1\n        /* \"contracts/SaleContract.sol\":2633:2646  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2633:2668  paymentAmount == totalPaymentAmount */\n      eq\n        /* \"contracts/SaleContract.sol\":2625:2697  require(paymentAmount == totalPaymentAmount, \"Incorrect payment amount\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/SaleContract.sol\":2708:2726  ERC20 paymentERC20 */\n      0x00\n        /* \"contracts/SaleContract.sol\":2735:2747  paymentToken */\n      dup7\n        /* \"contracts/SaleContract.sol\":2708:2748  ERC20 paymentERC20 = ERC20(paymentToken) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2819:2832  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2766:2778  paymentERC20 */\n      dup2\n        /* \"contracts/SaleContract.sol\":2766:2788  paymentERC20.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":2789:2799  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":2809:2813  this */\n      address\n        /* \"contracts/SaleContract.sol\":2766:2815  paymentERC20.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"contracts/SaleContract.sol\":2766:2832  paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2758:2868  require(paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \"contracts/SaleContract.sol\":2879:2951  paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission) */\n      tag_71\n        /* \"contracts/SaleContract.sol\":2909:2919  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":608:650  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n      0xfcf8d2b098b3160654bbada1a8769483c71c288b\n        /* \"contracts/SaleContract.sol\":2940:2950  commission */\n      dup6\n        /* \"contracts/SaleContract.sol\":2879:2891  paymentERC20 */\n      dup5\n        /* \"contracts/SaleContract.sol\":2879:2908  paymentERC20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"contracts/SaleContract.sol\":2879:2951  paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_71:\n        /* \"contracts/SaleContract.sol\":2961:3030  paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice) */\n      tag_73\n        /* \"contracts/SaleContract.sol\":2991:3001  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3003:3010  listing */\n      dup7\n        /* \"contracts/SaleContract.sol\":3003:3017  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3019:3029  totalPrice */\n      dup7\n        /* \"contracts/SaleContract.sol\":2961:2973  paymentERC20 */\n      dup5\n        /* \"contracts/SaleContract.sol\":2961:2990  paymentERC20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"contracts/SaleContract.sol\":2961:3030  paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"contracts/SaleContract.sol\":3059:3070  tokenAmount */\n      dup8\n        /* \"contracts/SaleContract.sol\":3041:3048  listing */\n      dup6\n        /* \"contracts/SaleContract.sol\":3041:3055  listing.tokens */\n      0x02\n      add\n      0x00\n        /* \"contracts/SaleContract.sol\":3041:3070  listing.tokens -= tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3080:3148  ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount) */\n      tag_76\n        /* \"contracts/SaleContract.sol\":3124:3134  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3136:3147  tokenAmount */\n      dup10\n        /* \"contracts/SaleContract.sol\":3086:3093  listing */\n      dup8\n        /* \"contracts/SaleContract.sol\":3086:3109  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3080:3123  ERC20(listing.contractAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_77\n      swap1\n        /* \"contracts/SaleContract.sol\":3080:3148  ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/SaleContract.sol\":3191:3201  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3164:3233  TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf5\n        /* \"contracts/SaleContract.sol\":3180:3189  listingId */\n      dup11\n        /* \"contracts/SaleContract.sol\":3203:3214  tokenAmount */\n      dup11\n        /* \"contracts/SaleContract.sol\":3216:3226  totalPrice */\n      dup8\n        /* \"contracts/SaleContract.sol\":3228:3232  true */\n      0x01\n        /* \"contracts/SaleContract.sol\":3164:3233  TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true) */\n      mload(0x40)\n      tag_78\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SaleContract.sol\":2144:3240  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_80\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/SaleContract.sol\":1971:3240  function buyTokensWithERC20(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":986:1965  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n    tag_29:\n        /* \"contracts/SaleContract.sol\":1115:1116  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1107:1112  price */\n      dup5\n        /* \"contracts/SaleContract.sol\":1107:1116  price > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1099:1152  require(price > 0, \"Price must be greater than zero\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/SaleContract.sol\":1179:1180  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1170:1176  tokens */\n      dup3\n        /* \"contracts/SaleContract.sol\":1170:1180  tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1162:1217  require(tokens > 0, \"Tokens must be greater than zero\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"contracts/SaleContract.sol\":1246:1247  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1235:1243  duration */\n      dup2\n        /* \"contracts/SaleContract.sol\":1235:1247  duration > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1227:1286  require(duration > 0, \"Duration must be greater than zero\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"contracts/SaleContract.sol\":1331:1332  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1304:1333  contractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":1304:1319  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":1304:1333  contractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SaleContract.sol\":1296:1362  require(contractAddress != address(0), \"Invalid contract address\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \"contracts/SaleContract.sol\":1373:1384  ERC20 token */\n      0x00\n        /* \"contracts/SaleContract.sol\":1393:1408  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":1373:1409  ERC20 token = ERC20(contractAddress) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":1473:1479  tokens */\n      dup3\n        /* \"contracts/SaleContract.sol\":1427:1432  token */\n      dup2\n        /* \"contracts/SaleContract.sol\":1427:1442  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":1443:1453  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1463:1467  this */\n      address\n        /* \"contracts/SaleContract.sol\":1427:1469  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap3\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_98:\n        /* \"contracts/SaleContract.sol\":1427:1479  token.allowance(msg.sender, address(this)) >= tokens */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":1419:1507  require(token.allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/SaleContract.sol\":1518:1575  token.safeTransferFrom(msg.sender, address(this), tokens) */\n      tag_102\n        /* \"contracts/SaleContract.sol\":1541:1551  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1561:1565  this */\n      address\n        /* \"contracts/SaleContract.sol\":1568:1574  tokens */\n      dup6\n        /* \"contracts/SaleContract.sol\":1518:1523  token */\n      dup5\n        /* \"contracts/SaleContract.sol\":1518:1540  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_72\n      swap1\n        /* \"contracts/SaleContract.sol\":1518:1575  token.safeTransferFrom(msg.sender, address(this), tokens) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/SaleContract.sol\":1586:1600  listingCounter */\n      0x02\n      0x00\n        /* \"contracts/SaleContract.sol\":1586:1602  listingCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SaleContract.sol\":1678:1693  contractAddress */\n      dup6\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1714:1719  price */\n      dup7\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1741:1747  tokens */\n      dup5\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1769:1779  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1823:1831  duration */\n      dup4\n        /* \"contracts/SaleContract.sol\":1805:1820  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":1805:1831  block.timestamp + duration */\n      tag_105\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_105:\n        /* \"contracts/SaleContract.sol\":1639:1842  Listing({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SaleContract.sol\":1612:1620  listings */\n      0x01\n        /* \"contracts/SaleContract.sol\":1612:1636  listings[listingCounter] */\n      0x00\n        /* \"contracts/SaleContract.sol\":1621:1635  listingCounter */\n      sload(0x02)\n        /* \"contracts/SaleContract.sol\":1612:1636  listings[listingCounter] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":1612:1842  listings[listingCounter] = Listing({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SaleContract.sol\":1899:1914  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":1858:1958  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":1887:1897  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1858:1958  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b\n        /* \"contracts/SaleContract.sol\":1871:1885  listingCounter */\n      sload(0x02)\n        /* \"contracts/SaleContract.sol\":1916:1921  price */\n      dup9\n        /* \"contracts/SaleContract.sol\":1923:1929  tokens */\n      dup8\n        /* \"contracts/SaleContract.sol\":1949:1957  duration */\n      dup8\n        /* \"contracts/SaleContract.sol\":1931:1946  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":1931:1957  block.timestamp + duration */\n      tag_106\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_106:\n        /* \"contracts/SaleContract.sol\":1858:1958  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      mload(0x40)\n      tag_107\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SaleContract.sol\":1089:1965  {... */\n      pop\n        /* \"contracts/SaleContract.sol\":986:1965  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":480:523  mapping(uint256 => Listing) public listings */\n    tag_33:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":3246:3812  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_41\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/SaleContract.sol\":3332:3355  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":3358:3366  listings */\n      0x01\n        /* \"contracts/SaleContract.sol\":3358:3377  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":3367:3376  listingId */\n      dup4\n        /* \"contracts/SaleContract.sol\":3358:3377  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":3332:3377  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3409:3416  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":3409:3423  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3395:3423  msg.sender == listing.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3395:3405  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3395:3423  msg.sender == listing.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SaleContract.sol\":3387:3460  require(msg.sender == listing.seller, \"Only listing seller can withdraw\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/SaleContract.sol\":3496:3503  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":3496:3514  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3478:3493  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":3478:3514  block.timestamp > listing.expiration */\n      gt\n        /* \"contracts/SaleContract.sol\":3470:3540  require(block.timestamp > listing.expiration, \"Listing has not ended\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/SaleContract.sol\":3575:3576  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":3558:3565  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":3558:3572  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3558:3576  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":3550:3602  require(listing.tokens > 0, \"No tokens to withdraw\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/SaleContract.sol\":3613:3642  uint256 tokenAmountToWithdraw */\n      0x00\n        /* \"contracts/SaleContract.sol\":3645:3652  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":3645:3659  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3613:3659  uint256 tokenAmountToWithdraw = listing.tokens */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3686:3687  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":3669:3676  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":3669:3683  listing.tokens */\n      0x02\n      add\n        /* \"contracts/SaleContract.sol\":3669:3687  listing.tokens = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3698:3709  ERC20 token */\n      0x00\n        /* \"contracts/SaleContract.sol\":3718:3725  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":3718:3741  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3698:3742  ERC20 token = ERC20(listing.contractAddress) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3752:3805  token.safeTransfer(msg.sender, tokenAmountToWithdraw) */\n      tag_121\n        /* \"contracts/SaleContract.sol\":3771:3781  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3783:3804  tokenAmountToWithdraw */\n      dup4\n        /* \"contracts/SaleContract.sol\":3752:3757  token */\n      dup4\n        /* \"contracts/SaleContract.sol\":3752:3770  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_77\n      swap1\n        /* \"contracts/SaleContract.sol\":3752:3805  token.safeTransfer(msg.sender, tokenAmountToWithdraw) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_121:\n        /* \"contracts/SaleContract.sol\":3322:3812  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_81\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_122:\n        /* \"contracts/SaleContract.sol\":3246:3812  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_124\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_127\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_132\n      swap3\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_136\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_138)\n    tag_137:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_141:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_142:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_188\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_141\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_143:\n        /* \"#utility.yul\":328:352   */\n      tag_190\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_142\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_14:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_192\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_143\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_144:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_145:\n        /* \"#utility.yul\":763:787   */\n      tag_195\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_144\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_18:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_197\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_145\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_147:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_149:\n        /* \"#utility.yul\":1428:1452   */\n      tag_202\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_144\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_203:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_150:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_205\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_149\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:1750   */\n    tag_151:\n        /* \"#utility.yul\":1701:1725   */\n      tag_207\n        /* \"#utility.yul\":1719:1724   */\n      dup2\n        /* \"#utility.yul\":1701:1725   */\n      tag_142\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1691:1726   */\n      eq\n        /* \"#utility.yul\":1681:1744   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1740:1741   */\n      0x00\n        /* \"#utility.yul\":1737:1738   */\n      0x00\n        /* \"#utility.yul\":1730:1742   */\n      revert\n        /* \"#utility.yul\":1681:1744   */\n    tag_208:\n        /* \"#utility.yul\":1628:1750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1895   */\n    tag_152:\n        /* \"#utility.yul\":1802:1807   */\n      0x00\n        /* \"#utility.yul\":1840:1846   */\n      dup2\n        /* \"#utility.yul\":1827:1847   */\n      calldataload\n        /* \"#utility.yul\":1818:1847   */\n      swap1\n      pop\n        /* \"#utility.yul\":1856:1889   */\n      tag_210\n        /* \"#utility.yul\":1883:1888   */\n      dup2\n        /* \"#utility.yul\":1856:1889   */\n      tag_151\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":1756:1895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1901:2666   */\n    tag_24:\n        /* \"#utility.yul\":1987:1993   */\n      0x00\n        /* \"#utility.yul\":1995:2001   */\n      0x00\n        /* \"#utility.yul\":2003:2009   */\n      0x00\n        /* \"#utility.yul\":2011:2017   */\n      0x00\n        /* \"#utility.yul\":2060:2063   */\n      0x80\n        /* \"#utility.yul\":2048:2057   */\n      dup6\n        /* \"#utility.yul\":2039:2046   */\n      dup8\n        /* \"#utility.yul\":2035:2058   */\n      sub\n        /* \"#utility.yul\":2031:2064   */\n      slt\n        /* \"#utility.yul\":2028:2148   */\n      iszero\n      tag_212\n      jumpi\n        /* \"#utility.yul\":2067:2146   */\n      tag_213\n      tag_147\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2028:2148   */\n    tag_212:\n        /* \"#utility.yul\":2187:2188   */\n      0x00\n        /* \"#utility.yul\":2212:2265   */\n      tag_214\n        /* \"#utility.yul\":2257:2264   */\n      dup8\n        /* \"#utility.yul\":2248:2254   */\n      dup3\n        /* \"#utility.yul\":2237:2246   */\n      dup9\n        /* \"#utility.yul\":2233:2255   */\n      add\n        /* \"#utility.yul\":2212:2265   */\n      tag_150\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":2202:2265   */\n      swap5\n      pop\n        /* \"#utility.yul\":2158:2275   */\n      pop\n        /* \"#utility.yul\":2314:2316   */\n      0x20\n        /* \"#utility.yul\":2340:2393   */\n      tag_215\n        /* \"#utility.yul\":2385:2392   */\n      dup8\n        /* \"#utility.yul\":2376:2382   */\n      dup3\n        /* \"#utility.yul\":2365:2374   */\n      dup9\n        /* \"#utility.yul\":2361:2383   */\n      add\n        /* \"#utility.yul\":2340:2393   */\n      tag_150\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2330:2393   */\n      swap4\n      pop\n        /* \"#utility.yul\":2285:2403   */\n      pop\n        /* \"#utility.yul\":2442:2444   */\n      0x40\n        /* \"#utility.yul\":2468:2521   */\n      tag_216\n        /* \"#utility.yul\":2513:2520   */\n      dup8\n        /* \"#utility.yul\":2504:2510   */\n      dup3\n        /* \"#utility.yul\":2493:2502   */\n      dup9\n        /* \"#utility.yul\":2489:2511   */\n      add\n        /* \"#utility.yul\":2468:2521   */\n      tag_152\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":2458:2521   */\n      swap3\n      pop\n        /* \"#utility.yul\":2413:2531   */\n      pop\n        /* \"#utility.yul\":2570:2572   */\n      0x60\n        /* \"#utility.yul\":2596:2649   */\n      tag_217\n        /* \"#utility.yul\":2641:2648   */\n      dup8\n        /* \"#utility.yul\":2632:2638   */\n      dup3\n        /* \"#utility.yul\":2621:2630   */\n      dup9\n        /* \"#utility.yul\":2617:2639   */\n      add\n        /* \"#utility.yul\":2596:2649   */\n      tag_150\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2586:2649   */\n      swap2\n      pop\n        /* \"#utility.yul\":2541:2659   */\n      pop\n        /* \"#utility.yul\":1901:2666   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2672:3437   */\n    tag_28:\n        /* \"#utility.yul\":2758:2764   */\n      0x00\n        /* \"#utility.yul\":2766:2772   */\n      0x00\n        /* \"#utility.yul\":2774:2780   */\n      0x00\n        /* \"#utility.yul\":2782:2788   */\n      0x00\n        /* \"#utility.yul\":2831:2834   */\n      0x80\n        /* \"#utility.yul\":2819:2828   */\n      dup6\n        /* \"#utility.yul\":2810:2817   */\n      dup8\n        /* \"#utility.yul\":2806:2829   */\n      sub\n        /* \"#utility.yul\":2802:2835   */\n      slt\n        /* \"#utility.yul\":2799:2919   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2838:2917   */\n      tag_220\n      tag_147\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":2799:2919   */\n    tag_219:\n        /* \"#utility.yul\":2958:2959   */\n      0x00\n        /* \"#utility.yul\":2983:3036   */\n      tag_221\n        /* \"#utility.yul\":3028:3035   */\n      dup8\n        /* \"#utility.yul\":3019:3025   */\n      dup3\n        /* \"#utility.yul\":3008:3017   */\n      dup9\n        /* \"#utility.yul\":3004:3026   */\n      add\n        /* \"#utility.yul\":2983:3036   */\n      tag_150\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2973:3036   */\n      swap5\n      pop\n        /* \"#utility.yul\":2929:3046   */\n      pop\n        /* \"#utility.yul\":3085:3087   */\n      0x20\n        /* \"#utility.yul\":3111:3164   */\n      tag_222\n        /* \"#utility.yul\":3156:3163   */\n      dup8\n        /* \"#utility.yul\":3147:3153   */\n      dup3\n        /* \"#utility.yul\":3136:3145   */\n      dup9\n        /* \"#utility.yul\":3132:3154   */\n      add\n        /* \"#utility.yul\":3111:3164   */\n      tag_152\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":3101:3164   */\n      swap4\n      pop\n        /* \"#utility.yul\":3056:3174   */\n      pop\n        /* \"#utility.yul\":3213:3215   */\n      0x40\n        /* \"#utility.yul\":3239:3292   */\n      tag_223\n        /* \"#utility.yul\":3284:3291   */\n      dup8\n        /* \"#utility.yul\":3275:3281   */\n      dup3\n        /* \"#utility.yul\":3264:3273   */\n      dup9\n        /* \"#utility.yul\":3260:3282   */\n      add\n        /* \"#utility.yul\":3239:3292   */\n      tag_150\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3229:3292   */\n      swap3\n      pop\n        /* \"#utility.yul\":3184:3302   */\n      pop\n        /* \"#utility.yul\":3341:3343   */\n      0x60\n        /* \"#utility.yul\":3367:3420   */\n      tag_224\n        /* \"#utility.yul\":3412:3419   */\n      dup8\n        /* \"#utility.yul\":3403:3409   */\n      dup3\n        /* \"#utility.yul\":3392:3401   */\n      dup9\n        /* \"#utility.yul\":3388:3410   */\n      add\n        /* \"#utility.yul\":3367:3420   */\n      tag_150\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3357:3420   */\n      swap2\n      pop\n        /* \"#utility.yul\":3312:3430   */\n      pop\n        /* \"#utility.yul\":2672:3437   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3443:3772   */\n    tag_32:\n        /* \"#utility.yul\":3502:3508   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x20\n        /* \"#utility.yul\":3539:3548   */\n      dup3\n        /* \"#utility.yul\":3530:3537   */\n      dup5\n        /* \"#utility.yul\":3526:3549   */\n      sub\n        /* \"#utility.yul\":3522:3554   */\n      slt\n        /* \"#utility.yul\":3519:3638   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3557:3636   */\n      tag_227\n      tag_147\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":3519:3638   */\n    tag_226:\n        /* \"#utility.yul\":3677:3678   */\n      0x00\n        /* \"#utility.yul\":3702:3755   */\n      tag_228\n        /* \"#utility.yul\":3747:3754   */\n      dup5\n        /* \"#utility.yul\":3738:3744   */\n      dup3\n        /* \"#utility.yul\":3727:3736   */\n      dup6\n        /* \"#utility.yul\":3723:3745   */\n      add\n        /* \"#utility.yul\":3702:3755   */\n      tag_150\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3692:3755   */\n      swap2\n      pop\n        /* \"#utility.yul\":3648:3765   */\n      pop\n        /* \"#utility.yul\":3443:3772   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3778:4442   */\n    tag_35:\n        /* \"#utility.yul\":3983:3987   */\n      0x00\n        /* \"#utility.yul\":4021:4024   */\n      0xa0\n        /* \"#utility.yul\":4010:4019   */\n      dup3\n        /* \"#utility.yul\":4006:4025   */\n      add\n        /* \"#utility.yul\":3998:4025   */\n      swap1\n      pop\n        /* \"#utility.yul\":4035:4106   */\n      tag_230\n        /* \"#utility.yul\":4103:4104   */\n      0x00\n        /* \"#utility.yul\":4092:4101   */\n      dup4\n        /* \"#utility.yul\":4088:4105   */\n      add\n        /* \"#utility.yul\":4079:4085   */\n      dup9\n        /* \"#utility.yul\":4035:4106   */\n      tag_143\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":4116:4188   */\n      tag_231\n        /* \"#utility.yul\":4184:4186   */\n      0x20\n        /* \"#utility.yul\":4173:4182   */\n      dup4\n        /* \"#utility.yul\":4169:4187   */\n      add\n        /* \"#utility.yul\":4160:4166   */\n      dup8\n        /* \"#utility.yul\":4116:4188   */\n      tag_145\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4198:4270   */\n      tag_232\n        /* \"#utility.yul\":4266:4268   */\n      0x40\n        /* \"#utility.yul\":4255:4264   */\n      dup4\n        /* \"#utility.yul\":4251:4269   */\n      add\n        /* \"#utility.yul\":4242:4248   */\n      dup7\n        /* \"#utility.yul\":4198:4270   */\n      tag_145\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":4280:4352   */\n      tag_233\n        /* \"#utility.yul\":4348:4350   */\n      0x60\n        /* \"#utility.yul\":4337:4346   */\n      dup4\n        /* \"#utility.yul\":4333:4351   */\n      add\n        /* \"#utility.yul\":4324:4330   */\n      dup6\n        /* \"#utility.yul\":4280:4352   */\n      tag_143\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":4362:4435   */\n      tag_234\n        /* \"#utility.yul\":4430:4433   */\n      0x80\n        /* \"#utility.yul\":4419:4428   */\n      dup4\n        /* \"#utility.yul\":4415:4434   */\n      add\n        /* \"#utility.yul\":4406:4412   */\n      dup5\n        /* \"#utility.yul\":4362:4435   */\n      tag_145\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":3778:4442   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4617   */\n    tag_153:\n        /* \"#utility.yul\":4532:4543   */\n      0x00\n        /* \"#utility.yul\":4566:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4564   */\n      dup3\n        /* \"#utility.yul\":4554:4573   */\n      mstore\n        /* \"#utility.yul\":4606:4610   */\n      0x20\n        /* \"#utility.yul\":4601:4604   */\n      dup3\n        /* \"#utility.yul\":4597:4611   */\n      add\n        /* \"#utility.yul\":4582:4611   */\n      swap1\n      pop\n        /* \"#utility.yul\":4448:4617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4623:4795   */\n    tag_154:\n        /* \"#utility.yul\":4763:4787   */\n      0x4c697374696e6720646f6573206e6f7420657869737400000000000000000000\n        /* \"#utility.yul\":4759:4760   */\n      0x00\n        /* \"#utility.yul\":4751:4757   */\n      dup3\n        /* \"#utility.yul\":4747:4761   */\n      add\n        /* \"#utility.yul\":4740:4788   */\n      mstore\n        /* \"#utility.yul\":4623:4795   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4801:5167   */\n    tag_155:\n        /* \"#utility.yul\":4943:4946   */\n      0x00\n        /* \"#utility.yul\":4964:5031   */\n      tag_238\n        /* \"#utility.yul\":5028:5030   */\n      0x16\n        /* \"#utility.yul\":5023:5026   */\n      dup4\n        /* \"#utility.yul\":4964:5031   */\n      tag_153\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":4957:5031   */\n      swap2\n      pop\n        /* \"#utility.yul\":5040:5133   */\n      tag_239\n        /* \"#utility.yul\":5129:5132   */\n      dup3\n        /* \"#utility.yul\":5040:5133   */\n      tag_154\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5158:5160   */\n      0x20\n        /* \"#utility.yul\":5153:5156   */\n      dup3\n        /* \"#utility.yul\":5149:5161   */\n      add\n        /* \"#utility.yul\":5142:5161   */\n      swap1\n      pop\n        /* \"#utility.yul\":4801:5167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5173:5592   */\n    tag_45:\n        /* \"#utility.yul\":5339:5343   */\n      0x00\n        /* \"#utility.yul\":5377:5379   */\n      0x20\n        /* \"#utility.yul\":5366:5375   */\n      dup3\n        /* \"#utility.yul\":5362:5380   */\n      add\n        /* \"#utility.yul\":5354:5380   */\n      swap1\n      pop\n        /* \"#utility.yul\":5426:5435   */\n      dup2\n        /* \"#utility.yul\":5420:5424   */\n      dup2\n        /* \"#utility.yul\":5416:5436   */\n      sub\n        /* \"#utility.yul\":5412:5413   */\n      0x00\n        /* \"#utility.yul\":5401:5410   */\n      dup4\n        /* \"#utility.yul\":5397:5414   */\n      add\n        /* \"#utility.yul\":5390:5437   */\n      mstore\n        /* \"#utility.yul\":5454:5585   */\n      tag_241\n        /* \"#utility.yul\":5580:5584   */\n      dup2\n        /* \"#utility.yul\":5454:5585   */\n      tag_155\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5446:5585   */\n      swap1\n      pop\n        /* \"#utility.yul\":5173:5592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5598:5767   */\n    tag_156:\n        /* \"#utility.yul\":5738:5759   */\n      0x4c697374696e6720686173206578706972656400000000000000000000000000\n        /* \"#utility.yul\":5734:5735   */\n      0x00\n        /* \"#utility.yul\":5726:5732   */\n      dup3\n        /* \"#utility.yul\":5722:5736   */\n      add\n        /* \"#utility.yul\":5715:5760   */\n      mstore\n        /* \"#utility.yul\":5598:5767   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5773:6139   */\n    tag_157:\n        /* \"#utility.yul\":5915:5918   */\n      0x00\n        /* \"#utility.yul\":5936:6003   */\n      tag_244\n        /* \"#utility.yul\":6000:6002   */\n      0x13\n        /* \"#utility.yul\":5995:5998   */\n      dup4\n        /* \"#utility.yul\":5936:6003   */\n      tag_153\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":5929:6003   */\n      swap2\n      pop\n        /* \"#utility.yul\":6012:6105   */\n      tag_245\n        /* \"#utility.yul\":6101:6104   */\n      dup3\n        /* \"#utility.yul\":6012:6105   */\n      tag_156\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6130:6132   */\n      0x20\n        /* \"#utility.yul\":6125:6128   */\n      dup3\n        /* \"#utility.yul\":6121:6133   */\n      add\n        /* \"#utility.yul\":6114:6133   */\n      swap1\n      pop\n        /* \"#utility.yul\":5773:6139   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6145:6564   */\n    tag_48:\n        /* \"#utility.yul\":6311:6315   */\n      0x00\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6338:6347   */\n      dup3\n        /* \"#utility.yul\":6334:6352   */\n      add\n        /* \"#utility.yul\":6326:6352   */\n      swap1\n      pop\n        /* \"#utility.yul\":6398:6407   */\n      dup2\n        /* \"#utility.yul\":6392:6396   */\n      dup2\n        /* \"#utility.yul\":6388:6408   */\n      sub\n        /* \"#utility.yul\":6384:6385   */\n      0x00\n        /* \"#utility.yul\":6373:6382   */\n      dup4\n        /* \"#utility.yul\":6369:6386   */\n      add\n        /* \"#utility.yul\":6362:6409   */\n      mstore\n        /* \"#utility.yul\":6426:6557   */\n      tag_247\n        /* \"#utility.yul\":6552:6556   */\n      dup2\n        /* \"#utility.yul\":6426:6557   */\n      tag_157\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6418:6557   */\n      swap1\n      pop\n        /* \"#utility.yul\":6145:6564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6570:6748   */\n    tag_158:\n        /* \"#utility.yul\":6710:6740   */\n      0x4e6f7420656e6f75676820746f6b656e7320696e206c697374696e6700000000\n        /* \"#utility.yul\":6706:6707   */\n      0x00\n        /* \"#utility.yul\":6698:6704   */\n      dup3\n        /* \"#utility.yul\":6694:6708   */\n      add\n        /* \"#utility.yul\":6687:6741   */\n      mstore\n        /* \"#utility.yul\":6570:6748   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6754:7120   */\n    tag_159:\n        /* \"#utility.yul\":6896:6899   */\n      0x00\n        /* \"#utility.yul\":6917:6984   */\n      tag_250\n        /* \"#utility.yul\":6981:6983   */\n      0x1c\n        /* \"#utility.yul\":6976:6979   */\n      dup4\n        /* \"#utility.yul\":6917:6984   */\n      tag_153\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":6910:6984   */\n      swap2\n      pop\n        /* \"#utility.yul\":6993:7086   */\n      tag_251\n        /* \"#utility.yul\":7082:7085   */\n      dup3\n        /* \"#utility.yul\":6993:7086   */\n      tag_158\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":7111:7113   */\n      0x20\n        /* \"#utility.yul\":7106:7109   */\n      dup3\n        /* \"#utility.yul\":7102:7114   */\n      add\n        /* \"#utility.yul\":7095:7114   */\n      swap1\n      pop\n        /* \"#utility.yul\":6754:7120   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7126:7545   */\n    tag_51:\n        /* \"#utility.yul\":7292:7296   */\n      0x00\n        /* \"#utility.yul\":7330:7332   */\n      0x20\n        /* \"#utility.yul\":7319:7328   */\n      dup3\n        /* \"#utility.yul\":7315:7333   */\n      add\n        /* \"#utility.yul\":7307:7333   */\n      swap1\n      pop\n        /* \"#utility.yul\":7379:7388   */\n      dup2\n        /* \"#utility.yul\":7373:7377   */\n      dup2\n        /* \"#utility.yul\":7369:7389   */\n      sub\n        /* \"#utility.yul\":7365:7366   */\n      0x00\n        /* \"#utility.yul\":7354:7363   */\n      dup4\n        /* \"#utility.yul\":7350:7367   */\n      add\n        /* \"#utility.yul\":7343:7390   */\n      mstore\n        /* \"#utility.yul\":7407:7538   */\n      tag_253\n        /* \"#utility.yul\":7533:7537   */\n      dup2\n        /* \"#utility.yul\":7407:7538   */\n      tag_159\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7399:7538   */\n      swap1\n      pop\n        /* \"#utility.yul\":7126:7545   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7551:7731   */\n    tag_160:\n        /* \"#utility.yul\":7599:7676   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7596:7597   */\n      0x00\n        /* \"#utility.yul\":7589:7677   */\n      mstore\n        /* \"#utility.yul\":7696:7700   */\n      0x11\n        /* \"#utility.yul\":7693:7694   */\n      0x04\n        /* \"#utility.yul\":7686:7701   */\n      mstore\n        /* \"#utility.yul\":7720:7724   */\n      0x24\n        /* \"#utility.yul\":7717:7718   */\n      0x00\n        /* \"#utility.yul\":7710:7725   */\n      revert\n        /* \"#utility.yul\":7737:8147   */\n    tag_53:\n        /* \"#utility.yul\":7777:7784   */\n      0x00\n        /* \"#utility.yul\":7800:7820   */\n      tag_256\n        /* \"#utility.yul\":7818:7819   */\n      dup3\n        /* \"#utility.yul\":7800:7820   */\n      tag_144\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":7795:7820   */\n      swap2\n      pop\n        /* \"#utility.yul\":7834:7854   */\n      tag_257\n        /* \"#utility.yul\":7852:7853   */\n      dup4\n        /* \"#utility.yul\":7834:7854   */\n      tag_144\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7829:7854   */\n      swap3\n      pop\n        /* \"#utility.yul\":7889:7890   */\n      dup3\n        /* \"#utility.yul\":7886:7887   */\n      dup3\n        /* \"#utility.yul\":7882:7891   */\n      mul\n        /* \"#utility.yul\":7911:7941   */\n      tag_258\n        /* \"#utility.yul\":7929:7940   */\n      dup2\n        /* \"#utility.yul\":7911:7941   */\n      tag_144\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":7900:7941   */\n      swap2\n      pop\n        /* \"#utility.yul\":8090:8091   */\n      dup3\n        /* \"#utility.yul\":8081:8088   */\n      dup3\n        /* \"#utility.yul\":8077:8092   */\n      div\n        /* \"#utility.yul\":8074:8075   */\n      dup5\n        /* \"#utility.yul\":8071:8093   */\n      eq\n        /* \"#utility.yul\":8051:8052   */\n      dup4\n        /* \"#utility.yul\":8044:8053   */\n      iszero\n        /* \"#utility.yul\":8024:8107   */\n      or\n        /* \"#utility.yul\":8001:8140   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":8120:8138   */\n      tag_260\n      tag_160\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":8001:8140   */\n    tag_259:\n        /* \"#utility.yul\":7785:8147   */\n      pop\n        /* \"#utility.yul\":7737:8147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8153:8333   */\n    tag_161:\n        /* \"#utility.yul\":8201:8278   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8198:8199   */\n      0x00\n        /* \"#utility.yul\":8191:8279   */\n      mstore\n        /* \"#utility.yul\":8298:8302   */\n      0x12\n        /* \"#utility.yul\":8295:8296   */\n      0x04\n        /* \"#utility.yul\":8288:8303   */\n      mstore\n        /* \"#utility.yul\":8322:8326   */\n      0x24\n        /* \"#utility.yul\":8319:8320   */\n      0x00\n        /* \"#utility.yul\":8312:8327   */\n      revert\n        /* \"#utility.yul\":8339:8524   */\n    tag_56:\n        /* \"#utility.yul\":8379:8380   */\n      0x00\n        /* \"#utility.yul\":8396:8416   */\n      tag_263\n        /* \"#utility.yul\":8414:8415   */\n      dup3\n        /* \"#utility.yul\":8396:8416   */\n      tag_144\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":8391:8416   */\n      swap2\n      pop\n        /* \"#utility.yul\":8430:8450   */\n      tag_264\n        /* \"#utility.yul\":8448:8449   */\n      dup4\n        /* \"#utility.yul\":8430:8450   */\n      tag_144\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":8425:8450   */\n      swap3\n      pop\n        /* \"#utility.yul\":8469:8470   */\n      dup3\n        /* \"#utility.yul\":8459:8494   */\n      tag_265\n      jumpi\n        /* \"#utility.yul\":8474:8492   */\n      tag_266\n      tag_161\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8459:8494   */\n    tag_265:\n        /* \"#utility.yul\":8516:8517   */\n      dup3\n        /* \"#utility.yul\":8513:8514   */\n      dup3\n        /* \"#utility.yul\":8509:8518   */\n      div\n        /* \"#utility.yul\":8504:8518   */\n      swap1\n      pop\n        /* \"#utility.yul\":8339:8524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8530:8721   */\n    tag_58:\n        /* \"#utility.yul\":8570:8573   */\n      0x00\n        /* \"#utility.yul\":8589:8609   */\n      tag_268\n        /* \"#utility.yul\":8607:8608   */\n      dup3\n        /* \"#utility.yul\":8589:8609   */\n      tag_144\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":8584:8609   */\n      swap2\n      pop\n        /* \"#utility.yul\":8623:8643   */\n      tag_269\n        /* \"#utility.yul\":8641:8642   */\n      dup4\n        /* \"#utility.yul\":8623:8643   */\n      tag_144\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8618:8643   */\n      swap3\n      pop\n        /* \"#utility.yul\":8666:8667   */\n      dup3\n        /* \"#utility.yul\":8663:8664   */\n      dup3\n        /* \"#utility.yul\":8659:8668   */\n      add\n        /* \"#utility.yul\":8652:8668   */\n      swap1\n      pop\n        /* \"#utility.yul\":8687:8690   */\n      dup1\n        /* \"#utility.yul\":8684:8685   */\n      dup3\n        /* \"#utility.yul\":8681:8691   */\n      gt\n        /* \"#utility.yul\":8678:8714   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":8694:8712   */\n      tag_271\n      tag_160\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":8678:8714   */\n    tag_270:\n        /* \"#utility.yul\":8530:8721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8727:8901   */\n    tag_162:\n        /* \"#utility.yul\":8867:8893   */\n      0x496e636f7272656374207061796d656e7420616d6f756e740000000000000000\n        /* \"#utility.yul\":8863:8864   */\n      0x00\n        /* \"#utility.yul\":8855:8861   */\n      dup3\n        /* \"#utility.yul\":8851:8865   */\n      add\n        /* \"#utility.yul\":8844:8894   */\n      mstore\n        /* \"#utility.yul\":8727:8901   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8907:9273   */\n    tag_163:\n        /* \"#utility.yul\":9049:9052   */\n      0x00\n        /* \"#utility.yul\":9070:9137   */\n      tag_274\n        /* \"#utility.yul\":9134:9136   */\n      0x18\n        /* \"#utility.yul\":9129:9132   */\n      dup4\n        /* \"#utility.yul\":9070:9137   */\n      tag_153\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9063:9137   */\n      swap2\n      pop\n        /* \"#utility.yul\":9146:9239   */\n      tag_275\n        /* \"#utility.yul\":9235:9238   */\n      dup3\n        /* \"#utility.yul\":9146:9239   */\n      tag_162\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":9264:9266   */\n      0x20\n        /* \"#utility.yul\":9259:9262   */\n      dup3\n        /* \"#utility.yul\":9255:9267   */\n      add\n        /* \"#utility.yul\":9248:9267   */\n      swap1\n      pop\n        /* \"#utility.yul\":8907:9273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9698   */\n    tag_61:\n        /* \"#utility.yul\":9445:9449   */\n      0x00\n        /* \"#utility.yul\":9483:9485   */\n      0x20\n        /* \"#utility.yul\":9472:9481   */\n      dup3\n        /* \"#utility.yul\":9468:9486   */\n      add\n        /* \"#utility.yul\":9460:9486   */\n      swap1\n      pop\n        /* \"#utility.yul\":9532:9541   */\n      dup2\n        /* \"#utility.yul\":9526:9530   */\n      dup2\n        /* \"#utility.yul\":9522:9542   */\n      sub\n        /* \"#utility.yul\":9518:9519   */\n      0x00\n        /* \"#utility.yul\":9507:9516   */\n      dup4\n        /* \"#utility.yul\":9503:9520   */\n      add\n        /* \"#utility.yul\":9496:9543   */\n      mstore\n        /* \"#utility.yul\":9560:9691   */\n      tag_277\n        /* \"#utility.yul\":9686:9690   */\n      dup2\n        /* \"#utility.yul\":9560:9691   */\n      tag_163\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":9552:9691   */\n      swap1\n      pop\n        /* \"#utility.yul\":9279:9698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:10036   */\n    tag_63:\n        /* \"#utility.yul\":9825:9829   */\n      0x00\n        /* \"#utility.yul\":9863:9865   */\n      0x40\n        /* \"#utility.yul\":9852:9861   */\n      dup3\n        /* \"#utility.yul\":9848:9866   */\n      add\n        /* \"#utility.yul\":9840:9866   */\n      swap1\n      pop\n        /* \"#utility.yul\":9876:9947   */\n      tag_279\n        /* \"#utility.yul\":9944:9945   */\n      0x00\n        /* \"#utility.yul\":9933:9942   */\n      dup4\n        /* \"#utility.yul\":9929:9946   */\n      add\n        /* \"#utility.yul\":9920:9926   */\n      dup6\n        /* \"#utility.yul\":9876:9947   */\n      tag_143\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9957:10029   */\n      tag_280\n        /* \"#utility.yul\":10025:10027   */\n      0x20\n        /* \"#utility.yul\":10014:10023   */\n      dup4\n        /* \"#utility.yul\":10010:10028   */\n      add\n        /* \"#utility.yul\":10001:10007   */\n      dup5\n        /* \"#utility.yul\":9957:10029   */\n      tag_143\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":9704:10036   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10042:10185   */\n    tag_164:\n        /* \"#utility.yul\":10099:10104   */\n      0x00\n        /* \"#utility.yul\":10130:10136   */\n      dup2\n        /* \"#utility.yul\":10124:10137   */\n      mload\n        /* \"#utility.yul\":10115:10137   */\n      swap1\n      pop\n        /* \"#utility.yul\":10146:10179   */\n      tag_282\n        /* \"#utility.yul\":10173:10178   */\n      dup2\n        /* \"#utility.yul\":10146:10179   */\n      tag_149\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10042:10185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10191:10542   */\n    tag_67:\n        /* \"#utility.yul\":10261:10267   */\n      0x00\n        /* \"#utility.yul\":10310:10312   */\n      0x20\n        /* \"#utility.yul\":10298:10307   */\n      dup3\n        /* \"#utility.yul\":10289:10296   */\n      dup5\n        /* \"#utility.yul\":10285:10308   */\n      sub\n        /* \"#utility.yul\":10281:10313   */\n      slt\n        /* \"#utility.yul\":10278:10397   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":10316:10395   */\n      tag_285\n      tag_147\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10278:10397   */\n    tag_284:\n        /* \"#utility.yul\":10436:10437   */\n      0x00\n        /* \"#utility.yul\":10461:10525   */\n      tag_286\n        /* \"#utility.yul\":10517:10524   */\n      dup5\n        /* \"#utility.yul\":10508:10514   */\n      dup3\n        /* \"#utility.yul\":10497:10506   */\n      dup6\n        /* \"#utility.yul\":10493:10515   */\n      add\n        /* \"#utility.yul\":10461:10525   */\n      tag_164\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":10451:10525   */\n      swap2\n      pop\n        /* \"#utility.yul\":10407:10535   */\n      pop\n        /* \"#utility.yul\":10191:10542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10548:10729   */\n    tag_165:\n        /* \"#utility.yul\":10688:10721   */\n      0x5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f7700\n        /* \"#utility.yul\":10684:10685   */\n      0x00\n        /* \"#utility.yul\":10676:10682   */\n      dup3\n        /* \"#utility.yul\":10672:10686   */\n      add\n        /* \"#utility.yul\":10665:10722   */\n      mstore\n        /* \"#utility.yul\":10548:10729   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10735:11101   */\n    tag_166:\n        /* \"#utility.yul\":10877:10880   */\n      0x00\n        /* \"#utility.yul\":10898:10965   */\n      tag_289\n        /* \"#utility.yul\":10962:10964   */\n      0x1f\n        /* \"#utility.yul\":10957:10960   */\n      dup4\n        /* \"#utility.yul\":10898:10965   */\n      tag_153\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":10891:10965   */\n      swap2\n      pop\n        /* \"#utility.yul\":10974:11067   */\n      tag_290\n        /* \"#utility.yul\":11063:11066   */\n      dup3\n        /* \"#utility.yul\":10974:11067   */\n      tag_165\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11092:11094   */\n      0x20\n        /* \"#utility.yul\":11087:11090   */\n      dup3\n        /* \"#utility.yul\":11083:11095   */\n      add\n        /* \"#utility.yul\":11076:11095   */\n      swap1\n      pop\n        /* \"#utility.yul\":10735:11101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11107:11526   */\n    tag_70:\n        /* \"#utility.yul\":11273:11277   */\n      0x00\n        /* \"#utility.yul\":11311:11313   */\n      0x20\n        /* \"#utility.yul\":11300:11309   */\n      dup3\n        /* \"#utility.yul\":11296:11314   */\n      add\n        /* \"#utility.yul\":11288:11314   */\n      swap1\n      pop\n        /* \"#utility.yul\":11360:11369   */\n      dup2\n        /* \"#utility.yul\":11354:11358   */\n      dup2\n        /* \"#utility.yul\":11350:11370   */\n      sub\n        /* \"#utility.yul\":11346:11347   */\n      0x00\n        /* \"#utility.yul\":11335:11344   */\n      dup4\n        /* \"#utility.yul\":11331:11348   */\n      add\n        /* \"#utility.yul\":11324:11371   */\n      mstore\n        /* \"#utility.yul\":11388:11519   */\n      tag_292\n        /* \"#utility.yul\":11514:11518   */\n      dup2\n        /* \"#utility.yul\":11388:11519   */\n      tag_166\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11380:11519   */\n      swap1\n      pop\n        /* \"#utility.yul\":11107:11526   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11532:11726   */\n    tag_75:\n        /* \"#utility.yul\":11572:11576   */\n      0x00\n        /* \"#utility.yul\":11592:11612   */\n      tag_294\n        /* \"#utility.yul\":11610:11611   */\n      dup3\n        /* \"#utility.yul\":11592:11612   */\n      tag_144\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11587:11612   */\n      swap2\n      pop\n        /* \"#utility.yul\":11626:11646   */\n      tag_295\n        /* \"#utility.yul\":11644:11645   */\n      dup4\n        /* \"#utility.yul\":11626:11646   */\n      tag_144\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":11621:11646   */\n      swap3\n      pop\n        /* \"#utility.yul\":11670:11671   */\n      dup3\n        /* \"#utility.yul\":11667:11668   */\n      dup3\n        /* \"#utility.yul\":11663:11672   */\n      sub\n        /* \"#utility.yul\":11655:11672   */\n      swap1\n      pop\n        /* \"#utility.yul\":11694:11695   */\n      dup2\n        /* \"#utility.yul\":11688:11692   */\n      dup2\n        /* \"#utility.yul\":11685:11696   */\n      gt\n        /* \"#utility.yul\":11682:11719   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":11699:11717   */\n      tag_297\n      tag_160\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":11682:11719   */\n    tag_296:\n        /* \"#utility.yul\":11532:11726   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11732:11822   */\n    tag_167:\n        /* \"#utility.yul\":11766:11773   */\n      0x00\n        /* \"#utility.yul\":11809:11814   */\n      dup2\n        /* \"#utility.yul\":11802:11815   */\n      iszero\n        /* \"#utility.yul\":11795:11816   */\n      iszero\n        /* \"#utility.yul\":11784:11816   */\n      swap1\n      pop\n        /* \"#utility.yul\":11732:11822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11828:11937   */\n    tag_168:\n        /* \"#utility.yul\":11909:11930   */\n      tag_300\n        /* \"#utility.yul\":11924:11929   */\n      dup2\n        /* \"#utility.yul\":11909:11930   */\n      tag_167\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":11904:11907   */\n      dup3\n        /* \"#utility.yul\":11897:11931   */\n      mstore\n        /* \"#utility.yul\":11828:11937   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11943:12484   */\n    tag_79:\n        /* \"#utility.yul\":12114:12118   */\n      0x00\n        /* \"#utility.yul\":12152:12155   */\n      0x80\n        /* \"#utility.yul\":12141:12150   */\n      dup3\n        /* \"#utility.yul\":12137:12156   */\n      add\n        /* \"#utility.yul\":12129:12156   */\n      swap1\n      pop\n        /* \"#utility.yul\":12166:12237   */\n      tag_302\n        /* \"#utility.yul\":12234:12235   */\n      0x00\n        /* \"#utility.yul\":12223:12232   */\n      dup4\n        /* \"#utility.yul\":12219:12236   */\n      add\n        /* \"#utility.yul\":12210:12216   */\n      dup8\n        /* \"#utility.yul\":12166:12237   */\n      tag_145\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":12247:12319   */\n      tag_303\n        /* \"#utility.yul\":12315:12317   */\n      0x20\n        /* \"#utility.yul\":12304:12313   */\n      dup4\n        /* \"#utility.yul\":12300:12318   */\n      add\n        /* \"#utility.yul\":12291:12297   */\n      dup7\n        /* \"#utility.yul\":12247:12319   */\n      tag_145\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":12329:12401   */\n      tag_304\n        /* \"#utility.yul\":12397:12399   */\n      0x40\n        /* \"#utility.yul\":12386:12395   */\n      dup4\n        /* \"#utility.yul\":12382:12400   */\n      add\n        /* \"#utility.yul\":12373:12379   */\n      dup6\n        /* \"#utility.yul\":12329:12401   */\n      tag_145\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":12411:12477   */\n      tag_305\n        /* \"#utility.yul\":12473:12475   */\n      0x60\n        /* \"#utility.yul\":12462:12471   */\n      dup4\n        /* \"#utility.yul\":12458:12476   */\n      add\n        /* \"#utility.yul\":12449:12455   */\n      dup5\n        /* \"#utility.yul\":12411:12477   */\n      tag_168\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":11943:12484   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12490:12671   */\n    tag_169:\n        /* \"#utility.yul\":12630:12663   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":12626:12627   */\n      0x00\n        /* \"#utility.yul\":12618:12624   */\n      dup3\n        /* \"#utility.yul\":12614:12628   */\n      add\n        /* \"#utility.yul\":12607:12664   */\n      mstore\n        /* \"#utility.yul\":12490:12671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12677:13043   */\n    tag_170:\n        /* \"#utility.yul\":12819:12822   */\n      0x00\n        /* \"#utility.yul\":12840:12907   */\n      tag_308\n        /* \"#utility.yul\":12904:12906   */\n      0x1f\n        /* \"#utility.yul\":12899:12902   */\n      dup4\n        /* \"#utility.yul\":12840:12907   */\n      tag_153\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":12833:12907   */\n      swap2\n      pop\n        /* \"#utility.yul\":12916:13009   */\n      tag_309\n        /* \"#utility.yul\":13005:13008   */\n      dup3\n        /* \"#utility.yul\":12916:13009   */\n      tag_169\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13034:13036   */\n      0x20\n        /* \"#utility.yul\":13029:13032   */\n      dup3\n        /* \"#utility.yul\":13025:13037   */\n      add\n        /* \"#utility.yul\":13018:13037   */\n      swap1\n      pop\n        /* \"#utility.yul\":12677:13043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13049:13468   */\n    tag_85:\n        /* \"#utility.yul\":13215:13219   */\n      0x00\n        /* \"#utility.yul\":13253:13255   */\n      0x20\n        /* \"#utility.yul\":13242:13251   */\n      dup3\n        /* \"#utility.yul\":13238:13256   */\n      add\n        /* \"#utility.yul\":13230:13256   */\n      swap1\n      pop\n        /* \"#utility.yul\":13302:13311   */\n      dup2\n        /* \"#utility.yul\":13296:13300   */\n      dup2\n        /* \"#utility.yul\":13292:13312   */\n      sub\n        /* \"#utility.yul\":13288:13289   */\n      0x00\n        /* \"#utility.yul\":13277:13286   */\n      dup4\n        /* \"#utility.yul\":13273:13290   */\n      add\n        /* \"#utility.yul\":13266:13313   */\n      mstore\n        /* \"#utility.yul\":13330:13461   */\n      tag_311\n        /* \"#utility.yul\":13456:13460   */\n      dup2\n        /* \"#utility.yul\":13330:13461   */\n      tag_170\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":13322:13461   */\n      swap1\n      pop\n        /* \"#utility.yul\":13049:13468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13474:13656   */\n    tag_171:\n        /* \"#utility.yul\":13614:13648   */\n      0x546f6b656e73206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":13610:13611   */\n      0x00\n        /* \"#utility.yul\":13602:13608   */\n      dup3\n        /* \"#utility.yul\":13598:13612   */\n      add\n        /* \"#utility.yul\":13591:13649   */\n      mstore\n        /* \"#utility.yul\":13474:13656   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13662:14028   */\n    tag_172:\n        /* \"#utility.yul\":13804:13807   */\n      0x00\n        /* \"#utility.yul\":13825:13892   */\n      tag_314\n        /* \"#utility.yul\":13889:13891   */\n      0x20\n        /* \"#utility.yul\":13884:13887   */\n      dup4\n        /* \"#utility.yul\":13825:13892   */\n      tag_153\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":13818:13892   */\n      swap2\n      pop\n        /* \"#utility.yul\":13901:13994   */\n      tag_315\n        /* \"#utility.yul\":13990:13993   */\n      dup3\n        /* \"#utility.yul\":13901:13994   */\n      tag_171\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":14019:14021   */\n      0x20\n        /* \"#utility.yul\":14014:14017   */\n      dup3\n        /* \"#utility.yul\":14010:14022   */\n      add\n        /* \"#utility.yul\":14003:14022   */\n      swap1\n      pop\n        /* \"#utility.yul\":13662:14028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14034:14453   */\n    tag_88:\n        /* \"#utility.yul\":14200:14204   */\n      0x00\n        /* \"#utility.yul\":14238:14240   */\n      0x20\n        /* \"#utility.yul\":14227:14236   */\n      dup3\n        /* \"#utility.yul\":14223:14241   */\n      add\n        /* \"#utility.yul\":14215:14241   */\n      swap1\n      pop\n        /* \"#utility.yul\":14287:14296   */\n      dup2\n        /* \"#utility.yul\":14281:14285   */\n      dup2\n        /* \"#utility.yul\":14277:14297   */\n      sub\n        /* \"#utility.yul\":14273:14274   */\n      0x00\n        /* \"#utility.yul\":14262:14271   */\n      dup4\n        /* \"#utility.yul\":14258:14275   */\n      add\n        /* \"#utility.yul\":14251:14298   */\n      mstore\n        /* \"#utility.yul\":14315:14446   */\n      tag_317\n        /* \"#utility.yul\":14441:14445   */\n      dup2\n        /* \"#utility.yul\":14315:14446   */\n      tag_172\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":14307:14446   */\n      swap1\n      pop\n        /* \"#utility.yul\":14034:14453   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14459:14680   */\n    tag_173:\n        /* \"#utility.yul\":14599:14633   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e207a65\n        /* \"#utility.yul\":14595:14596   */\n      0x00\n        /* \"#utility.yul\":14587:14593   */\n      dup3\n        /* \"#utility.yul\":14583:14597   */\n      add\n        /* \"#utility.yul\":14576:14634   */\n      mstore\n        /* \"#utility.yul\":14668:14672   */\n      0x726f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14663:14665   */\n      0x20\n        /* \"#utility.yul\":14655:14661   */\n      dup3\n        /* \"#utility.yul\":14651:14666   */\n      add\n        /* \"#utility.yul\":14644:14673   */\n      mstore\n        /* \"#utility.yul\":14459:14680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14686:15052   */\n    tag_174:\n        /* \"#utility.yul\":14828:14831   */\n      0x00\n        /* \"#utility.yul\":14849:14916   */\n      tag_320\n        /* \"#utility.yul\":14913:14915   */\n      0x22\n        /* \"#utility.yul\":14908:14911   */\n      dup4\n        /* \"#utility.yul\":14849:14916   */\n      tag_153\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":14842:14916   */\n      swap2\n      pop\n        /* \"#utility.yul\":14925:15018   */\n      tag_321\n        /* \"#utility.yul\":15014:15017   */\n      dup3\n        /* \"#utility.yul\":14925:15018   */\n      tag_173\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":15043:15045   */\n      0x40\n        /* \"#utility.yul\":15038:15041   */\n      dup3\n        /* \"#utility.yul\":15034:15046   */\n      add\n        /* \"#utility.yul\":15027:15046   */\n      swap1\n      pop\n        /* \"#utility.yul\":14686:15052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15058:15477   */\n    tag_91:\n        /* \"#utility.yul\":15224:15228   */\n      0x00\n        /* \"#utility.yul\":15262:15264   */\n      0x20\n        /* \"#utility.yul\":15251:15260   */\n      dup3\n        /* \"#utility.yul\":15247:15265   */\n      add\n        /* \"#utility.yul\":15239:15265   */\n      swap1\n      pop\n        /* \"#utility.yul\":15311:15320   */\n      dup2\n        /* \"#utility.yul\":15305:15309   */\n      dup2\n        /* \"#utility.yul\":15301:15321   */\n      sub\n        /* \"#utility.yul\":15297:15298   */\n      0x00\n        /* \"#utility.yul\":15286:15295   */\n      dup4\n        /* \"#utility.yul\":15282:15299   */\n      add\n        /* \"#utility.yul\":15275:15322   */\n      mstore\n        /* \"#utility.yul\":15339:15470   */\n      tag_323\n        /* \"#utility.yul\":15465:15469   */\n      dup2\n        /* \"#utility.yul\":15339:15470   */\n      tag_174\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":15331:15470   */\n      swap1\n      pop\n        /* \"#utility.yul\":15058:15477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15483:15657   */\n    tag_175:\n        /* \"#utility.yul\":15623:15649   */\n      0x496e76616c696420636f6e747261637420616464726573730000000000000000\n        /* \"#utility.yul\":15619:15620   */\n      0x00\n        /* \"#utility.yul\":15611:15617   */\n      dup3\n        /* \"#utility.yul\":15607:15621   */\n      add\n        /* \"#utility.yul\":15600:15650   */\n      mstore\n        /* \"#utility.yul\":15483:15657   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15663:16029   */\n    tag_176:\n        /* \"#utility.yul\":15805:15808   */\n      0x00\n        /* \"#utility.yul\":15826:15893   */\n      tag_326\n        /* \"#utility.yul\":15890:15892   */\n      0x18\n        /* \"#utility.yul\":15885:15888   */\n      dup4\n        /* \"#utility.yul\":15826:15893   */\n      tag_153\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":15819:15893   */\n      swap2\n      pop\n        /* \"#utility.yul\":15902:15995   */\n      tag_327\n        /* \"#utility.yul\":15991:15994   */\n      dup3\n        /* \"#utility.yul\":15902:15995   */\n      tag_175\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":16020:16022   */\n      0x20\n        /* \"#utility.yul\":16015:16018   */\n      dup3\n        /* \"#utility.yul\":16011:16023   */\n      add\n        /* \"#utility.yul\":16004:16023   */\n      swap1\n      pop\n        /* \"#utility.yul\":15663:16029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16035:16454   */\n    tag_94:\n        /* \"#utility.yul\":16201:16205   */\n      0x00\n        /* \"#utility.yul\":16239:16241   */\n      0x20\n        /* \"#utility.yul\":16228:16237   */\n      dup3\n        /* \"#utility.yul\":16224:16242   */\n      add\n        /* \"#utility.yul\":16216:16242   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16297   */\n      dup2\n        /* \"#utility.yul\":16282:16286   */\n      dup2\n        /* \"#utility.yul\":16278:16298   */\n      sub\n        /* \"#utility.yul\":16274:16275   */\n      0x00\n        /* \"#utility.yul\":16263:16272   */\n      dup4\n        /* \"#utility.yul\":16259:16276   */\n      add\n        /* \"#utility.yul\":16252:16299   */\n      mstore\n        /* \"#utility.yul\":16316:16447   */\n      tag_329\n        /* \"#utility.yul\":16442:16446   */\n      dup2\n        /* \"#utility.yul\":16316:16447   */\n      tag_176\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":16308:16447   */\n      swap1\n      pop\n        /* \"#utility.yul\":16035:16454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16460:16633   */\n    tag_177:\n        /* \"#utility.yul\":16600:16625   */\n      0x546f6b656e20616c6c6f77616e636520746f6f206c6f77000000000000000000\n        /* \"#utility.yul\":16596:16597   */\n      0x00\n        /* \"#utility.yul\":16588:16594   */\n      dup3\n        /* \"#utility.yul\":16584:16598   */\n      add\n        /* \"#utility.yul\":16577:16626   */\n      mstore\n        /* \"#utility.yul\":16460:16633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16639:17005   */\n    tag_178:\n        /* \"#utility.yul\":16781:16784   */\n      0x00\n        /* \"#utility.yul\":16802:16869   */\n      tag_332\n        /* \"#utility.yul\":16866:16868   */\n      0x17\n        /* \"#utility.yul\":16861:16864   */\n      dup4\n        /* \"#utility.yul\":16802:16869   */\n      tag_153\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":16795:16869   */\n      swap2\n      pop\n        /* \"#utility.yul\":16878:16971   */\n      tag_333\n        /* \"#utility.yul\":16967:16970   */\n      dup3\n        /* \"#utility.yul\":16878:16971   */\n      tag_177\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":16996:16998   */\n      0x20\n        /* \"#utility.yul\":16991:16994   */\n      dup3\n        /* \"#utility.yul\":16987:16999   */\n      add\n        /* \"#utility.yul\":16980:16999   */\n      swap1\n      pop\n        /* \"#utility.yul\":16639:17005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17011:17430   */\n    tag_101:\n        /* \"#utility.yul\":17177:17181   */\n      0x00\n        /* \"#utility.yul\":17215:17217   */\n      0x20\n        /* \"#utility.yul\":17204:17213   */\n      dup3\n        /* \"#utility.yul\":17200:17218   */\n      add\n        /* \"#utility.yul\":17192:17218   */\n      swap1\n      pop\n        /* \"#utility.yul\":17264:17273   */\n      dup2\n        /* \"#utility.yul\":17258:17262   */\n      dup2\n        /* \"#utility.yul\":17254:17274   */\n      sub\n        /* \"#utility.yul\":17250:17251   */\n      0x00\n        /* \"#utility.yul\":17239:17248   */\n      dup4\n        /* \"#utility.yul\":17235:17252   */\n      add\n        /* \"#utility.yul\":17228:17275   */\n      mstore\n        /* \"#utility.yul\":17292:17423   */\n      tag_335\n        /* \"#utility.yul\":17418:17422   */\n      dup2\n        /* \"#utility.yul\":17292:17423   */\n      tag_178\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":17284:17423   */\n      swap1\n      pop\n        /* \"#utility.yul\":17011:17430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17436:17669   */\n    tag_104:\n        /* \"#utility.yul\":17475:17478   */\n      0x00\n        /* \"#utility.yul\":17498:17522   */\n      tag_337\n        /* \"#utility.yul\":17516:17521   */\n      dup3\n        /* \"#utility.yul\":17498:17522   */\n      tag_144\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":17489:17522   */\n      swap2\n      pop\n        /* \"#utility.yul\":17544:17610   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":17537:17542   */\n      dup3\n        /* \"#utility.yul\":17534:17611   */\n      sub\n        /* \"#utility.yul\":17531:17634   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":17614:17632   */\n      tag_339\n      tag_160\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":17531:17634   */\n    tag_338:\n        /* \"#utility.yul\":17661:17662   */\n      0x01\n        /* \"#utility.yul\":17654:17659   */\n      dup3\n        /* \"#utility.yul\":17650:17663   */\n      add\n        /* \"#utility.yul\":17643:17663   */\n      swap1\n      pop\n        /* \"#utility.yul\":17436:17669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17675:18228   */\n    tag_108:\n        /* \"#utility.yul\":17852:17856   */\n      0x00\n        /* \"#utility.yul\":17890:17893   */\n      0x80\n        /* \"#utility.yul\":17879:17888   */\n      dup3\n        /* \"#utility.yul\":17875:17894   */\n      add\n        /* \"#utility.yul\":17867:17894   */\n      swap1\n      pop\n        /* \"#utility.yul\":17904:17975   */\n      tag_341\n        /* \"#utility.yul\":17972:17973   */\n      0x00\n        /* \"#utility.yul\":17961:17970   */\n      dup4\n        /* \"#utility.yul\":17957:17974   */\n      add\n        /* \"#utility.yul\":17948:17954   */\n      dup8\n        /* \"#utility.yul\":17904:17975   */\n      tag_145\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":17985:18057   */\n      tag_342\n        /* \"#utility.yul\":18053:18055   */\n      0x20\n        /* \"#utility.yul\":18042:18051   */\n      dup4\n        /* \"#utility.yul\":18038:18056   */\n      add\n        /* \"#utility.yul\":18029:18035   */\n      dup7\n        /* \"#utility.yul\":17985:18057   */\n      tag_145\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":18067:18139   */\n      tag_343\n        /* \"#utility.yul\":18135:18137   */\n      0x40\n        /* \"#utility.yul\":18124:18133   */\n      dup4\n        /* \"#utility.yul\":18120:18138   */\n      add\n        /* \"#utility.yul\":18111:18117   */\n      dup6\n        /* \"#utility.yul\":18067:18139   */\n      tag_145\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":18149:18221   */\n      tag_344\n        /* \"#utility.yul\":18217:18219   */\n      0x60\n        /* \"#utility.yul\":18206:18215   */\n      dup4\n        /* \"#utility.yul\":18202:18220   */\n      add\n        /* \"#utility.yul\":18193:18199   */\n      dup5\n        /* \"#utility.yul\":18149:18221   */\n      tag_145\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":17675:18228   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18234:18416   */\n    tag_179:\n        /* \"#utility.yul\":18374:18408   */\n      0x4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177\n        /* \"#utility.yul\":18370:18371   */\n      0x00\n        /* \"#utility.yul\":18362:18368   */\n      dup3\n        /* \"#utility.yul\":18358:18372   */\n      add\n        /* \"#utility.yul\":18351:18409   */\n      mstore\n        /* \"#utility.yul\":18234:18416   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18422:18788   */\n    tag_180:\n        /* \"#utility.yul\":18564:18567   */\n      0x00\n        /* \"#utility.yul\":18585:18652   */\n      tag_347\n        /* \"#utility.yul\":18649:18651   */\n      0x20\n        /* \"#utility.yul\":18644:18647   */\n      dup4\n        /* \"#utility.yul\":18585:18652   */\n      tag_153\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":18578:18652   */\n      swap2\n      pop\n        /* \"#utility.yul\":18661:18754   */\n      tag_348\n        /* \"#utility.yul\":18750:18753   */\n      dup3\n        /* \"#utility.yul\":18661:18754   */\n      tag_179\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":18779:18781   */\n      0x20\n        /* \"#utility.yul\":18774:18777   */\n      dup3\n        /* \"#utility.yul\":18770:18782   */\n      add\n        /* \"#utility.yul\":18763:18782   */\n      swap1\n      pop\n        /* \"#utility.yul\":18422:18788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18794:19213   */\n    tag_114:\n        /* \"#utility.yul\":18960:18964   */\n      0x00\n        /* \"#utility.yul\":18998:19000   */\n      0x20\n        /* \"#utility.yul\":18987:18996   */\n      dup3\n        /* \"#utility.yul\":18983:19001   */\n      add\n        /* \"#utility.yul\":18975:19001   */\n      swap1\n      pop\n        /* \"#utility.yul\":19047:19056   */\n      dup2\n        /* \"#utility.yul\":19041:19045   */\n      dup2\n        /* \"#utility.yul\":19037:19057   */\n      sub\n        /* \"#utility.yul\":19033:19034   */\n      0x00\n        /* \"#utility.yul\":19022:19031   */\n      dup4\n        /* \"#utility.yul\":19018:19035   */\n      add\n        /* \"#utility.yul\":19011:19058   */\n      mstore\n        /* \"#utility.yul\":19075:19206   */\n      tag_350\n        /* \"#utility.yul\":19201:19205   */\n      dup2\n        /* \"#utility.yul\":19075:19206   */\n      tag_180\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":19067:19206   */\n      swap1\n      pop\n        /* \"#utility.yul\":18794:19213   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19219:19390   */\n    tag_181:\n        /* \"#utility.yul\":19359:19382   */\n      0x4c697374696e6720686173206e6f7420656e6465640000000000000000000000\n        /* \"#utility.yul\":19355:19356   */\n      0x00\n        /* \"#utility.yul\":19347:19353   */\n      dup3\n        /* \"#utility.yul\":19343:19357   */\n      add\n        /* \"#utility.yul\":19336:19383   */\n      mstore\n        /* \"#utility.yul\":19219:19390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19396:19762   */\n    tag_182:\n        /* \"#utility.yul\":19538:19541   */\n      0x00\n        /* \"#utility.yul\":19559:19626   */\n      tag_353\n        /* \"#utility.yul\":19623:19625   */\n      0x15\n        /* \"#utility.yul\":19618:19621   */\n      dup4\n        /* \"#utility.yul\":19559:19626   */\n      tag_153\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":19552:19626   */\n      swap2\n      pop\n        /* \"#utility.yul\":19635:19728   */\n      tag_354\n        /* \"#utility.yul\":19724:19727   */\n      dup3\n        /* \"#utility.yul\":19635:19728   */\n      tag_181\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":19753:19755   */\n      0x20\n        /* \"#utility.yul\":19748:19751   */\n      dup3\n        /* \"#utility.yul\":19744:19756   */\n      add\n        /* \"#utility.yul\":19737:19756   */\n      swap1\n      pop\n        /* \"#utility.yul\":19396:19762   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19768:20187   */\n    tag_117:\n        /* \"#utility.yul\":19934:19938   */\n      0x00\n        /* \"#utility.yul\":19972:19974   */\n      0x20\n        /* \"#utility.yul\":19961:19970   */\n      dup3\n        /* \"#utility.yul\":19957:19975   */\n      add\n        /* \"#utility.yul\":19949:19975   */\n      swap1\n      pop\n        /* \"#utility.yul\":20021:20030   */\n      dup2\n        /* \"#utility.yul\":20015:20019   */\n      dup2\n        /* \"#utility.yul\":20011:20031   */\n      sub\n        /* \"#utility.yul\":20007:20008   */\n      0x00\n        /* \"#utility.yul\":19996:20005   */\n      dup4\n        /* \"#utility.yul\":19992:20009   */\n      add\n        /* \"#utility.yul\":19985:20032   */\n      mstore\n        /* \"#utility.yul\":20049:20180   */\n      tag_356\n        /* \"#utility.yul\":20175:20179   */\n      dup2\n        /* \"#utility.yul\":20049:20180   */\n      tag_182\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":20041:20180   */\n      swap1\n      pop\n        /* \"#utility.yul\":19768:20187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20193:20364   */\n    tag_183:\n        /* \"#utility.yul\":20333:20356   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":20329:20330   */\n      0x00\n        /* \"#utility.yul\":20321:20327   */\n      dup3\n        /* \"#utility.yul\":20317:20331   */\n      add\n        /* \"#utility.yul\":20310:20357   */\n      mstore\n        /* \"#utility.yul\":20193:20364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20370:20736   */\n    tag_184:\n        /* \"#utility.yul\":20512:20515   */\n      0x00\n        /* \"#utility.yul\":20533:20600   */\n      tag_359\n        /* \"#utility.yul\":20597:20599   */\n      0x15\n        /* \"#utility.yul\":20592:20595   */\n      dup4\n        /* \"#utility.yul\":20533:20600   */\n      tag_153\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":20526:20600   */\n      swap2\n      pop\n        /* \"#utility.yul\":20609:20702   */\n      tag_360\n        /* \"#utility.yul\":20698:20701   */\n      dup3\n        /* \"#utility.yul\":20609:20702   */\n      tag_183\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":20727:20729   */\n      0x20\n        /* \"#utility.yul\":20722:20725   */\n      dup3\n        /* \"#utility.yul\":20718:20730   */\n      add\n        /* \"#utility.yul\":20711:20730   */\n      swap1\n      pop\n        /* \"#utility.yul\":20370:20736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20742:21161   */\n    tag_120:\n        /* \"#utility.yul\":20908:20912   */\n      0x00\n        /* \"#utility.yul\":20946:20948   */\n      0x20\n        /* \"#utility.yul\":20935:20944   */\n      dup3\n        /* \"#utility.yul\":20931:20949   */\n      add\n        /* \"#utility.yul\":20923:20949   */\n      swap1\n      pop\n        /* \"#utility.yul\":20995:21004   */\n      dup2\n        /* \"#utility.yul\":20989:20993   */\n      dup2\n        /* \"#utility.yul\":20985:21005   */\n      sub\n        /* \"#utility.yul\":20981:20982   */\n      0x00\n        /* \"#utility.yul\":20970:20979   */\n      dup4\n        /* \"#utility.yul\":20966:20983   */\n      add\n        /* \"#utility.yul\":20959:21006   */\n      mstore\n        /* \"#utility.yul\":21023:21154   */\n      tag_362\n        /* \"#utility.yul\":21149:21153   */\n      dup2\n        /* \"#utility.yul\":21023:21154   */\n      tag_184\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":21015:21154   */\n      swap1\n      pop\n        /* \"#utility.yul\":20742:21161   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21167:21609   */\n    tag_128:\n        /* \"#utility.yul\":21316:21320   */\n      0x00\n        /* \"#utility.yul\":21354:21356   */\n      0x60\n        /* \"#utility.yul\":21343:21352   */\n      dup3\n        /* \"#utility.yul\":21339:21357   */\n      add\n        /* \"#utility.yul\":21331:21357   */\n      swap1\n      pop\n        /* \"#utility.yul\":21367:21438   */\n      tag_364\n        /* \"#utility.yul\":21435:21436   */\n      0x00\n        /* \"#utility.yul\":21424:21433   */\n      dup4\n        /* \"#utility.yul\":21420:21437   */\n      add\n        /* \"#utility.yul\":21411:21417   */\n      dup7\n        /* \"#utility.yul\":21367:21438   */\n      tag_143\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":21448:21520   */\n      tag_365\n        /* \"#utility.yul\":21516:21518   */\n      0x20\n        /* \"#utility.yul\":21505:21514   */\n      dup4\n        /* \"#utility.yul\":21501:21519   */\n      add\n        /* \"#utility.yul\":21492:21498   */\n      dup6\n        /* \"#utility.yul\":21448:21520   */\n      tag_143\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":21530:21602   */\n      tag_366\n        /* \"#utility.yul\":21598:21600   */\n      0x40\n        /* \"#utility.yul\":21587:21596   */\n      dup4\n        /* \"#utility.yul\":21583:21601   */\n      add\n        /* \"#utility.yul\":21574:21580   */\n      dup5\n        /* \"#utility.yul\":21530:21602   */\n      tag_145\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":21167:21609   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21615:21947   */\n    tag_133:\n        /* \"#utility.yul\":21736:21740   */\n      0x00\n        /* \"#utility.yul\":21774:21776   */\n      0x40\n        /* \"#utility.yul\":21763:21772   */\n      dup3\n        /* \"#utility.yul\":21759:21777   */\n      add\n        /* \"#utility.yul\":21751:21777   */\n      swap1\n      pop\n        /* \"#utility.yul\":21787:21858   */\n      tag_368\n        /* \"#utility.yul\":21855:21856   */\n      0x00\n        /* \"#utility.yul\":21844:21853   */\n      dup4\n        /* \"#utility.yul\":21840:21857   */\n      add\n        /* \"#utility.yul\":21831:21837   */\n      dup6\n        /* \"#utility.yul\":21787:21858   */\n      tag_143\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":21868:21940   */\n      tag_369\n        /* \"#utility.yul\":21936:21938   */\n      0x20\n        /* \"#utility.yul\":21925:21934   */\n      dup4\n        /* \"#utility.yul\":21921:21939   */\n      add\n        /* \"#utility.yul\":21912:21918   */\n      dup5\n        /* \"#utility.yul\":21868:21940   */\n      tag_145\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":21615:21947   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207ade803c48215fba5856bee89e2abd1b054679d1faad224200c4f91e5a00fe7864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1306": {
									"entryPoint": null,
									"id": 1306,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH2 0x179C DUP1 PUSH2 0x23 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A82A87F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A82A87F EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xF25713BF EQ PUSH2 0x145 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0xB00 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 SWAP1 POP DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP3 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST LT ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F5 CALLER PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x445 CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4AC CALLER DUP10 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5 DUP11 DUP11 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x50E PUSH2 0xC45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP3 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x735 CALLER ADDRESS DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x747 SWAP1 PUSH2 0x1548 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B PUSH1 0x2 SLOAD DUP9 DUP8 DUP8 TIMESTAMP PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x95F PUSH2 0xB00 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FB SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA41 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xAF2 CALLER DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0xAFD PUSH2 0xC45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBC0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB79 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBF9 SWAP3 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xC86 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCA1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xCE3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD12 DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD22 DUP2 PUSH2 0xD08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3B PUSH0 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD53 DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH0 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA9 DUP2 PUSH2 0xD08 JUMP JUMPDEST DUP2 EQ PUSH2 0xDB3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC4 DUP2 PUSH2 0xDA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDEF DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE00 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE11 DUP8 DUP3 DUP9 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE22 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE53 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE64 DUP8 DUP3 DUP9 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE75 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE86 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH2 0xEA6 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB4 DUP5 DUP3 DUP6 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xED0 PUSH0 DUP4 ADD DUP9 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xEEA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xEF7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xF04 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF52 PUSH1 0x16 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF5D DUP3 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA PUSH1 0x13 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xFC5 DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE7 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1022 PUSH1 0x1C DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104F DUP2 PUSH2 0x1016 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x108D DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1098 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10A6 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10BD JUMPI PUSH2 0x10BC PUSH2 0x1056 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10FB DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1106 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x10C4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x112B DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1136 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0x1056 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1188 PUSH1 0x18 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1193 DUP3 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B5 DUP2 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11CF PUSH0 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x11DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F1 DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH2 0x120B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1219 DUP5 DUP3 DUP6 ADD PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1256 PUSH1 0x1F DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1261 DUP3 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1283 DUP2 PUSH2 0x124A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1294 DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x129F DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x12BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12EA PUSH0 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x12F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x1304 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x1311 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x1F DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13B6 PUSH1 0x20 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x13C1 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E3 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH1 0x22 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x144F DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1471 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14AC PUSH1 0x18 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x14B7 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D9 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1514 PUSH1 0x17 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x151F DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1552 DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15A2 PUSH0 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15AF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1606 PUSH1 0x20 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1611 DUP3 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1633 DUP2 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166E PUSH1 0x15 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP3 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169B DUP2 PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D6 PUSH1 0x15 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x16E1 DUP3 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1703 DUP2 PUSH2 0x16CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH0 DUP4 ADD DUP7 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x172A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH0 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x175F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xDE803C48215FBA5856BEE89E2ABD1B054679D1FAAD224200C4F91E GAS STOP INVALID PUSH25 0x64736F6C634300081C00330000000000000000000000000000 ",
							"sourceMap": "241:3574:11:-:0;;;;;;;;;;;;;1857:1:9;2061:7;:21;;;;241:3574:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMISSION_PERCENTAGE_1400": {
									"entryPoint": 377,
									"id": 1400,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMISSION_WALLET_1397": {
									"entryPoint": 353,
									"id": 1397,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1212": {
									"entryPoint": 3150,
									"id": 1212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_1341": {
									"entryPoint": 3141,
									"id": 1341,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1333": {
									"entryPoint": 2816,
									"id": 1333,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@addListing_1535": {
									"entryPoint": 1300,
									"id": 1535,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyTokensWithERC20_1676": {
									"entryPoint": 388,
									"id": 1676,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@listingCounter_1394": {
									"entryPoint": 382,
									"id": 1394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listings_1392": {
									"entryPoint": 2279,
									"id": 1392,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_917": {
									"entryPoint": 2884,
									"id": 917,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_890": {
									"entryPoint": 3014,
									"id": 890,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@withdrawTokensFromListing_1744": {
									"entryPoint": 2391,
									"id": 1744,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 4579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256": {
									"entryPoint": 3630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_addresst_uint256": {
									"entryPoint": 3530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4014,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5898,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3773,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 4823,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4746,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3442,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc": {
									"entryPoint": 5690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d": {
									"entryPoint": 4436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6": {
									"entryPoint": 5344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538": {
									"entryPoint": 3974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55": {
									"entryPoint": 3870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b": {
									"entryPoint": 4994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21950:12",
										"nodeType": "YulBlock",
										"src": "0:21950:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:12",
													"nodeType": "YulBlock",
													"src": "52:81:12",
													"statements": [
														{
															"nativeSrc": "62:65:12",
															"nodeType": "YulAssignment",
															"src": "62:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:12",
																		"nodeType": "YulLiteral",
																		"src": "84:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:12"
																},
																"nativeSrc": "73:54:12",
																"nodeType": "YulFunctionCall",
																"src": "73:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:12",
														"nodeType": "YulTypedName",
														"src": "34:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:12",
														"nodeType": "YulTypedName",
														"src": "44:7:12",
														"type": ""
													}
												],
												"src": "7:126:12"
											},
											{
												"body": {
													"nativeSrc": "184:51:12",
													"nodeType": "YulBlock",
													"src": "184:51:12",
													"statements": [
														{
															"nativeSrc": "194:35:12",
															"nodeType": "YulAssignment",
															"src": "194:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:12"
																},
																"nativeSrc": "205:24:12",
																"nodeType": "YulFunctionCall",
																"src": "205:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:12",
														"nodeType": "YulTypedName",
														"src": "166:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:12",
														"nodeType": "YulTypedName",
														"src": "176:7:12",
														"type": ""
													}
												],
												"src": "139:96:12"
											},
											{
												"body": {
													"nativeSrc": "306:53:12",
													"nodeType": "YulBlock",
													"src": "306:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:12"
																		},
																		"nativeSrc": "328:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:12"
																},
																"nativeSrc": "316:37:12",
																"nodeType": "YulFunctionCall",
																"src": "316:37:12"
															},
															"nativeSrc": "316:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:12",
														"nodeType": "YulTypedName",
														"src": "294:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:12",
														"nodeType": "YulTypedName",
														"src": "301:3:12",
														"type": ""
													}
												],
												"src": "241:118:12"
											},
											{
												"body": {
													"nativeSrc": "463:124:12",
													"nodeType": "YulBlock",
													"src": "463:124:12",
													"statements": [
														{
															"nativeSrc": "473:26:12",
															"nodeType": "YulAssignment",
															"src": "473:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:12",
																		"nodeType": "YulLiteral",
																		"src": "496:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:12"
																},
																"nativeSrc": "481:18:12",
																"nodeType": "YulFunctionCall",
																"src": "481:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:12",
																				"nodeType": "YulLiteral",
																				"src": "577:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:12"
																		},
																		"nativeSrc": "562:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:12"
																},
																"nativeSrc": "509:71:12",
																"nodeType": "YulFunctionCall",
																"src": "509:71:12"
															},
															"nativeSrc": "509:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:12",
														"nodeType": "YulTypedName",
														"src": "435:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:12",
														"nodeType": "YulTypedName",
														"src": "447:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:12",
														"nodeType": "YulTypedName",
														"src": "458:4:12",
														"type": ""
													}
												],
												"src": "365:222:12"
											},
											{
												"body": {
													"nativeSrc": "638:32:12",
													"nodeType": "YulBlock",
													"src": "638:32:12",
													"statements": [
														{
															"nativeSrc": "648:16:12",
															"nodeType": "YulAssignment",
															"src": "648:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:12",
																"nodeType": "YulIdentifier",
																"src": "659:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:12",
														"nodeType": "YulTypedName",
														"src": "620:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:12",
														"nodeType": "YulTypedName",
														"src": "630:7:12",
														"type": ""
													}
												],
												"src": "593:77:12"
											},
											{
												"body": {
													"nativeSrc": "741:53:12",
													"nodeType": "YulBlock",
													"src": "741:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:12"
																		},
																		"nativeSrc": "763:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:12"
																},
																"nativeSrc": "751:37:12",
																"nodeType": "YulFunctionCall",
																"src": "751:37:12"
															},
															"nativeSrc": "751:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:12",
														"nodeType": "YulTypedName",
														"src": "729:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:12",
														"nodeType": "YulTypedName",
														"src": "736:3:12",
														"type": ""
													}
												],
												"src": "676:118:12"
											},
											{
												"body": {
													"nativeSrc": "898:124:12",
													"nodeType": "YulBlock",
													"src": "898:124:12",
													"statements": [
														{
															"nativeSrc": "908:26:12",
															"nodeType": "YulAssignment",
															"src": "908:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:12",
																		"nodeType": "YulLiteral",
																		"src": "931:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:12"
																},
																"nativeSrc": "916:18:12",
																"nodeType": "YulFunctionCall",
																"src": "916:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:12"
																		},
																		"nativeSrc": "997:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:12"
																},
																"nativeSrc": "944:71:12",
																"nodeType": "YulFunctionCall",
																"src": "944:71:12"
															},
															"nativeSrc": "944:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:12",
														"nodeType": "YulTypedName",
														"src": "870:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:12",
														"nodeType": "YulTypedName",
														"src": "882:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:12",
														"nodeType": "YulTypedName",
														"src": "893:4:12",
														"type": ""
													}
												],
												"src": "800:222:12"
											},
											{
												"body": {
													"nativeSrc": "1068:35:12",
													"nodeType": "YulBlock",
													"src": "1068:35:12",
													"statements": [
														{
															"nativeSrc": "1078:19:12",
															"nodeType": "YulAssignment",
															"src": "1078:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:12"
																},
																"nativeSrc": "1088:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:12",
														"nodeType": "YulTypedName",
														"src": "1061:6:12",
														"type": ""
													}
												],
												"src": "1028:75:12"
											},
											{
												"body": {
													"nativeSrc": "1198:28:12",
													"nodeType": "YulBlock",
													"src": "1198:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:12"
																},
																"nativeSrc": "1208:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:12"
															},
															"nativeSrc": "1208:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:12"
											},
											{
												"body": {
													"nativeSrc": "1321:28:12",
													"nodeType": "YulBlock",
													"src": "1321:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:12"
																},
																"nativeSrc": "1331:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:12"
															},
															"nativeSrc": "1331:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:12"
											},
											{
												"body": {
													"nativeSrc": "1398:79:12",
													"nodeType": "YulBlock",
													"src": "1398:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:12",
																"nodeType": "YulBlock",
																"src": "1455:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:12"
																			},
																			"nativeSrc": "1457:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:12"
																		},
																		"nativeSrc": "1457:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:12"
																				},
																				"nativeSrc": "1428:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:12"
																		},
																		"nativeSrc": "1418:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:12"
																},
																"nativeSrc": "1411:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:12"
															},
															"nativeSrc": "1408:63:12",
															"nodeType": "YulIf",
															"src": "1408:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:12",
														"nodeType": "YulTypedName",
														"src": "1391:5:12",
														"type": ""
													}
												],
												"src": "1355:122:12"
											},
											{
												"body": {
													"nativeSrc": "1535:87:12",
													"nodeType": "YulBlock",
													"src": "1535:87:12",
													"statements": [
														{
															"nativeSrc": "1545:29:12",
															"nodeType": "YulAssignment",
															"src": "1545:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:12"
																},
																"nativeSrc": "1554:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1583:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:12"
																},
																"nativeSrc": "1583:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:12"
															},
															"nativeSrc": "1583:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1483:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:12",
														"nodeType": "YulTypedName",
														"src": "1513:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:12",
														"nodeType": "YulTypedName",
														"src": "1521:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:12",
														"nodeType": "YulTypedName",
														"src": "1529:5:12",
														"type": ""
													}
												],
												"src": "1483:139:12"
											},
											{
												"body": {
													"nativeSrc": "1671:79:12",
													"nodeType": "YulBlock",
													"src": "1671:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1728:16:12",
																"nodeType": "YulBlock",
																"src": "1728:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1737:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1737:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1740:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1740:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1730:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1730:6:12"
																			},
																			"nativeSrc": "1730:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:12:12"
																		},
																		"nativeSrc": "1730:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1730:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1694:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1719:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1719:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1701:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1701:17:12"
																				},
																				"nativeSrc": "1701:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1701:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1691:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1691:2:12"
																		},
																		"nativeSrc": "1691:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1691:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1684:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1684:6:12"
																},
																"nativeSrc": "1684:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1684:43:12"
															},
															"nativeSrc": "1681:63:12",
															"nodeType": "YulIf",
															"src": "1681:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1628:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:12",
														"nodeType": "YulTypedName",
														"src": "1664:5:12",
														"type": ""
													}
												],
												"src": "1628:122:12"
											},
											{
												"body": {
													"nativeSrc": "1808:87:12",
													"nodeType": "YulBlock",
													"src": "1808:87:12",
													"statements": [
														{
															"nativeSrc": "1818:29:12",
															"nodeType": "YulAssignment",
															"src": "1818:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1840:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1840:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1827:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1827:12:12"
																},
																"nativeSrc": "1827:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1827:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1818:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1818:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1883:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1883:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1856:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1856:26:12"
																},
																"nativeSrc": "1856:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1856:33:12"
															},
															"nativeSrc": "1856:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1856:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1756:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1786:6:12",
														"nodeType": "YulTypedName",
														"src": "1786:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1794:3:12",
														"nodeType": "YulTypedName",
														"src": "1794:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1802:5:12",
														"nodeType": "YulTypedName",
														"src": "1802:5:12",
														"type": ""
													}
												],
												"src": "1756:139:12"
											},
											{
												"body": {
													"nativeSrc": "2018:648:12",
													"nodeType": "YulBlock",
													"src": "2018:648:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2065:83:12",
																"nodeType": "YulBlock",
																"src": "2065:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2067:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2067:77:12"
																			},
																			"nativeSrc": "2067:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2067:79:12"
																		},
																		"nativeSrc": "2067:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2067:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2039:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2039:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2048:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2048:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2035:3:12"
																		},
																		"nativeSrc": "2035:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2035:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2060:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2060:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2031:3:12"
																},
																"nativeSrc": "2031:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:12"
															},
															"nativeSrc": "2028:120:12",
															"nodeType": "YulIf",
															"src": "2028:120:12"
														},
														{
															"nativeSrc": "2158:117:12",
															"nodeType": "YulBlock",
															"src": "2158:117:12",
															"statements": [
																{
																	"nativeSrc": "2173:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2173:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2187:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2187:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2177:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2177:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2202:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2202:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2237:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2237:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2248:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2248:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2233:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2233:3:12"
																				},
																				"nativeSrc": "2233:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2233:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2257:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2257:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2212:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2212:20:12"
																		},
																		"nativeSrc": "2212:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2212:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2202:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2202:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2285:118:12",
															"nodeType": "YulBlock",
															"src": "2285:118:12",
															"statements": [
																{
																	"nativeSrc": "2300:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2300:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2314:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2314:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2304:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2304:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2330:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2330:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2365:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2365:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2376:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2376:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2361:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:12"
																				},
																				"nativeSrc": "2361:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2385:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2385:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2340:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2340:20:12"
																		},
																		"nativeSrc": "2340:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2340:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2330:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2330:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2413:118:12",
															"nodeType": "YulBlock",
															"src": "2413:118:12",
															"statements": [
																{
																	"nativeSrc": "2428:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2428:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2442:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2442:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2432:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2432:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2458:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2458:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2493:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2493:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2504:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2504:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2489:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2489:3:12"
																				},
																				"nativeSrc": "2489:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2489:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2513:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2513:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2468:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2468:20:12"
																		},
																		"nativeSrc": "2468:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2458:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2458:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2541:118:12",
															"nodeType": "YulBlock",
															"src": "2541:118:12",
															"statements": [
																{
																	"nativeSrc": "2556:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2556:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2570:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2570:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2560:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2560:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2586:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2586:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2621:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2621:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2632:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2632:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2617:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2617:3:12"
																				},
																				"nativeSrc": "2617:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2617:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2641:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2641:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2596:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2596:20:12"
																		},
																		"nativeSrc": "2596:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2586:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2586:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_addresst_uint256",
												"nativeSrc": "1901:765:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1964:9:12",
														"nodeType": "YulTypedName",
														"src": "1964:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1975:7:12",
														"nodeType": "YulTypedName",
														"src": "1975:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1987:6:12",
														"nodeType": "YulTypedName",
														"src": "1987:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1995:6:12",
														"nodeType": "YulTypedName",
														"src": "1995:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2003:6:12",
														"nodeType": "YulTypedName",
														"src": "2003:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2011:6:12",
														"nodeType": "YulTypedName",
														"src": "2011:6:12",
														"type": ""
													}
												],
												"src": "1901:765:12"
											},
											{
												"body": {
													"nativeSrc": "2789:648:12",
													"nodeType": "YulBlock",
													"src": "2789:648:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2836:83:12",
																"nodeType": "YulBlock",
																"src": "2836:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2838:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2838:77:12"
																			},
																			"nativeSrc": "2838:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2838:79:12"
																		},
																		"nativeSrc": "2838:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2838:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2810:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2810:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2819:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2819:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2806:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2806:3:12"
																		},
																		"nativeSrc": "2806:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2806:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2831:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2831:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2802:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2802:3:12"
																},
																"nativeSrc": "2802:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2802:33:12"
															},
															"nativeSrc": "2799:120:12",
															"nodeType": "YulIf",
															"src": "2799:120:12"
														},
														{
															"nativeSrc": "2929:117:12",
															"nodeType": "YulBlock",
															"src": "2929:117:12",
															"statements": [
																{
																	"nativeSrc": "2944:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2944:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2958:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2958:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2948:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2948:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2973:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2973:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3008:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3008:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3019:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3019:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3004:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3004:3:12"
																				},
																				"nativeSrc": "3004:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3004:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3028:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3028:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2983:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2983:20:12"
																		},
																		"nativeSrc": "2983:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2973:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2973:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3056:118:12",
															"nodeType": "YulBlock",
															"src": "3056:118:12",
															"statements": [
																{
																	"nativeSrc": "3071:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3071:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3085:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3085:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3075:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3075:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3101:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3101:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3136:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3136:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3147:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3147:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3132:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3132:3:12"
																				},
																				"nativeSrc": "3132:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3132:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3156:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3156:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3111:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3111:20:12"
																		},
																		"nativeSrc": "3111:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3111:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3101:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3101:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3184:118:12",
															"nodeType": "YulBlock",
															"src": "3184:118:12",
															"statements": [
																{
																	"nativeSrc": "3199:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3199:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3213:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3213:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3203:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3203:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3229:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3229:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3264:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3264:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3275:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3275:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3260:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3260:3:12"
																				},
																				"nativeSrc": "3260:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3260:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3284:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3284:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3239:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3239:20:12"
																		},
																		"nativeSrc": "3239:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3229:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3229:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3312:118:12",
															"nodeType": "YulBlock",
															"src": "3312:118:12",
															"statements": [
																{
																	"nativeSrc": "3327:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3327:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3341:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3341:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3331:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3331:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3357:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3357:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3392:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3392:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3403:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3403:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3388:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3388:3:12"
																				},
																				"nativeSrc": "3388:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3388:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3412:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3412:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3367:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3367:20:12"
																		},
																		"nativeSrc": "3367:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3357:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3357:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256",
												"nativeSrc": "2672:765:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2735:9:12",
														"nodeType": "YulTypedName",
														"src": "2735:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2746:7:12",
														"nodeType": "YulTypedName",
														"src": "2746:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2758:6:12",
														"nodeType": "YulTypedName",
														"src": "2758:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2766:6:12",
														"nodeType": "YulTypedName",
														"src": "2766:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2774:6:12",
														"nodeType": "YulTypedName",
														"src": "2774:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2782:6:12",
														"nodeType": "YulTypedName",
														"src": "2782:6:12",
														"type": ""
													}
												],
												"src": "2672:765:12"
											},
											{
												"body": {
													"nativeSrc": "3509:263:12",
													"nodeType": "YulBlock",
													"src": "3509:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3555:83:12",
																"nodeType": "YulBlock",
																"src": "3555:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3557:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3557:77:12"
																			},
																			"nativeSrc": "3557:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3557:79:12"
																		},
																		"nativeSrc": "3557:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3557:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3530:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3530:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3539:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3539:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3526:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3526:3:12"
																		},
																		"nativeSrc": "3526:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3526:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3551:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3551:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3522:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3522:3:12"
																},
																"nativeSrc": "3522:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3522:32:12"
															},
															"nativeSrc": "3519:119:12",
															"nodeType": "YulIf",
															"src": "3519:119:12"
														},
														{
															"nativeSrc": "3648:117:12",
															"nodeType": "YulBlock",
															"src": "3648:117:12",
															"statements": [
																{
																	"nativeSrc": "3663:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3663:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3677:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3677:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3667:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3667:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3692:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3692:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3727:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3727:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3738:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3738:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3723:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:12"
																				},
																				"nativeSrc": "3723:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3723:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3747:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3747:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3702:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3702:20:12"
																		},
																		"nativeSrc": "3702:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3702:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3692:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3692:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3443:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3479:9:12",
														"nodeType": "YulTypedName",
														"src": "3479:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3490:7:12",
														"nodeType": "YulTypedName",
														"src": "3490:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3502:6:12",
														"nodeType": "YulTypedName",
														"src": "3502:6:12",
														"type": ""
													}
												],
												"src": "3443:329:12"
											},
											{
												"body": {
													"nativeSrc": "3988:454:12",
													"nodeType": "YulBlock",
													"src": "3988:454:12",
													"statements": [
														{
															"nativeSrc": "3998:27:12",
															"nodeType": "YulAssignment",
															"src": "3998:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4010:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4010:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4021:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4021:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4006:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4006:3:12"
																},
																"nativeSrc": "4006:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4006:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3998:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3998:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4079:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4079:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4092:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4092:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4103:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4103:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4088:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4088:3:12"
																		},
																		"nativeSrc": "4088:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4088:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4035:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4035:43:12"
																},
																"nativeSrc": "4035:71:12",
																"nodeType": "YulFunctionCall",
																"src": "4035:71:12"
															},
															"nativeSrc": "4035:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "4035:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4160:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4160:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4173:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4173:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4184:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4184:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4169:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4169:3:12"
																		},
																		"nativeSrc": "4169:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4169:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4116:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4116:43:12"
																},
																"nativeSrc": "4116:72:12",
																"nodeType": "YulFunctionCall",
																"src": "4116:72:12"
															},
															"nativeSrc": "4116:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "4116:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4242:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4255:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4255:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4266:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4266:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4251:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4251:3:12"
																		},
																		"nativeSrc": "4251:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4251:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4198:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4198:43:12"
																},
																"nativeSrc": "4198:72:12",
																"nodeType": "YulFunctionCall",
																"src": "4198:72:12"
															},
															"nativeSrc": "4198:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "4198:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4324:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4324:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4337:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4337:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4348:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4348:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4333:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4333:3:12"
																		},
																		"nativeSrc": "4333:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4333:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4280:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4280:43:12"
																},
																"nativeSrc": "4280:72:12",
																"nodeType": "YulFunctionCall",
																"src": "4280:72:12"
															},
															"nativeSrc": "4280:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "4280:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4406:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4406:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4419:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4419:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4430:3:12",
																				"nodeType": "YulLiteral",
																				"src": "4430:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4415:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4415:3:12"
																		},
																		"nativeSrc": "4415:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4415:19:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4362:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "4362:43:12"
																},
																"nativeSrc": "4362:73:12",
																"nodeType": "YulFunctionCall",
																"src": "4362:73:12"
															},
															"nativeSrc": "4362:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "4362:73:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3778:664:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3928:9:12",
														"nodeType": "YulTypedName",
														"src": "3928:9:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3940:6:12",
														"nodeType": "YulTypedName",
														"src": "3940:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3948:6:12",
														"nodeType": "YulTypedName",
														"src": "3948:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3956:6:12",
														"nodeType": "YulTypedName",
														"src": "3956:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3964:6:12",
														"nodeType": "YulTypedName",
														"src": "3964:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3972:6:12",
														"nodeType": "YulTypedName",
														"src": "3972:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3983:4:12",
														"nodeType": "YulTypedName",
														"src": "3983:4:12",
														"type": ""
													}
												],
												"src": "3778:664:12"
											},
											{
												"body": {
													"nativeSrc": "4544:73:12",
													"nodeType": "YulBlock",
													"src": "4544:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4561:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4561:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4566:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4566:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4554:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4554:6:12"
																},
																"nativeSrc": "4554:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4554:19:12"
															},
															"nativeSrc": "4554:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "4554:19:12"
														},
														{
															"nativeSrc": "4582:29:12",
															"nodeType": "YulAssignment",
															"src": "4582:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4601:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4601:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4606:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4606:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4597:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4597:3:12"
																},
																"nativeSrc": "4597:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4597:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4582:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "4582:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4448:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4516:3:12",
														"nodeType": "YulTypedName",
														"src": "4516:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4521:6:12",
														"nodeType": "YulTypedName",
														"src": "4521:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4532:11:12",
														"nodeType": "YulTypedName",
														"src": "4532:11:12",
														"type": ""
													}
												],
												"src": "4448:169:12"
											},
											{
												"body": {
													"nativeSrc": "4729:66:12",
													"nodeType": "YulBlock",
													"src": "4729:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4751:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4751:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4759:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4759:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4747:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:12"
																		},
																		"nativeSrc": "4747:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4747:14:12"
																	},
																	{
																		"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "4763:24:12",
																		"nodeType": "YulLiteral",
																		"src": "4763:24:12",
																		"type": "",
																		"value": "Listing does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4740:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4740:6:12"
																},
																"nativeSrc": "4740:48:12",
																"nodeType": "YulFunctionCall",
																"src": "4740:48:12"
															},
															"nativeSrc": "4740:48:12",
															"nodeType": "YulExpressionStatement",
															"src": "4740:48:12"
														}
													]
												},
												"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
												"nativeSrc": "4623:172:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4721:6:12",
														"nodeType": "YulTypedName",
														"src": "4721:6:12",
														"type": ""
													}
												],
												"src": "4623:172:12"
											},
											{
												"body": {
													"nativeSrc": "4947:220:12",
													"nodeType": "YulBlock",
													"src": "4947:220:12",
													"statements": [
														{
															"nativeSrc": "4957:74:12",
															"nodeType": "YulAssignment",
															"src": "4957:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5023:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5023:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5028:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5028:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4964:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "4964:58:12"
																},
																"nativeSrc": "4964:67:12",
																"nodeType": "YulFunctionCall",
																"src": "4964:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4957:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4957:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5129:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5129:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																	"nativeSrc": "5040:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "5040:88:12"
																},
																"nativeSrc": "5040:93:12",
																"nodeType": "YulFunctionCall",
																"src": "5040:93:12"
															},
															"nativeSrc": "5040:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "5040:93:12"
														},
														{
															"nativeSrc": "5142:19:12",
															"nodeType": "YulAssignment",
															"src": "5142:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5153:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5153:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5158:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5158:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5149:3:12"
																},
																"nativeSrc": "5149:12:12",
																"nodeType": "YulFunctionCall",
																"src": "5149:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5142:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5142:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4801:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4935:3:12",
														"nodeType": "YulTypedName",
														"src": "4935:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4943:3:12",
														"nodeType": "YulTypedName",
														"src": "4943:3:12",
														"type": ""
													}
												],
												"src": "4801:366:12"
											},
											{
												"body": {
													"nativeSrc": "5344:248:12",
													"nodeType": "YulBlock",
													"src": "5344:248:12",
													"statements": [
														{
															"nativeSrc": "5354:26:12",
															"nodeType": "YulAssignment",
															"src": "5354:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5366:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5366:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5377:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5377:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5362:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:12"
																},
																"nativeSrc": "5362:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5362:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5354:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5354:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5401:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5401:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5412:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5412:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5397:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5397:3:12"
																		},
																		"nativeSrc": "5397:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5397:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5420:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "5420:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5426:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5426:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5416:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5416:3:12"
																		},
																		"nativeSrc": "5416:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5416:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5390:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:12"
																},
																"nativeSrc": "5390:47:12",
																"nodeType": "YulFunctionCall",
																"src": "5390:47:12"
															},
															"nativeSrc": "5390:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "5390:47:12"
														},
														{
															"nativeSrc": "5446:139:12",
															"nodeType": "YulAssignment",
															"src": "5446:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5580:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "5580:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5454:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "5454:124:12"
																},
																"nativeSrc": "5454:131:12",
																"nodeType": "YulFunctionCall",
																"src": "5454:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5446:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5446:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5173:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5324:9:12",
														"nodeType": "YulTypedName",
														"src": "5324:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5339:4:12",
														"nodeType": "YulTypedName",
														"src": "5339:4:12",
														"type": ""
													}
												],
												"src": "5173:419:12"
											},
											{
												"body": {
													"nativeSrc": "5704:63:12",
													"nodeType": "YulBlock",
													"src": "5704:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5726:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5726:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5734:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5734:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5722:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5722:3:12"
																		},
																		"nativeSrc": "5722:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5722:14:12"
																	},
																	{
																		"hexValue": "4c697374696e67206861732065787069726564",
																		"kind": "string",
																		"nativeSrc": "5738:21:12",
																		"nodeType": "YulLiteral",
																		"src": "5738:21:12",
																		"type": "",
																		"value": "Listing has expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5715:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5715:6:12"
																},
																"nativeSrc": "5715:45:12",
																"nodeType": "YulFunctionCall",
																"src": "5715:45:12"
															},
															"nativeSrc": "5715:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "5715:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
												"nativeSrc": "5598:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5696:6:12",
														"nodeType": "YulTypedName",
														"src": "5696:6:12",
														"type": ""
													}
												],
												"src": "5598:169:12"
											},
											{
												"body": {
													"nativeSrc": "5919:220:12",
													"nodeType": "YulBlock",
													"src": "5919:220:12",
													"statements": [
														{
															"nativeSrc": "5929:74:12",
															"nodeType": "YulAssignment",
															"src": "5929:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5995:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6000:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5936:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "5936:58:12"
																},
																"nativeSrc": "5936:67:12",
																"nodeType": "YulFunctionCall",
																"src": "5936:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5929:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5929:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6101:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6101:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																	"nativeSrc": "6012:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "6012:88:12"
																},
																"nativeSrc": "6012:93:12",
																"nodeType": "YulFunctionCall",
																"src": "6012:93:12"
															},
															"nativeSrc": "6012:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "6012:93:12"
														},
														{
															"nativeSrc": "6114:19:12",
															"nodeType": "YulAssignment",
															"src": "6114:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6125:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6125:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6130:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6130:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6121:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6121:3:12"
																},
																"nativeSrc": "6121:12:12",
																"nodeType": "YulFunctionCall",
																"src": "6121:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6114:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6114:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5773:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5907:3:12",
														"nodeType": "YulTypedName",
														"src": "5907:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5915:3:12",
														"nodeType": "YulTypedName",
														"src": "5915:3:12",
														"type": ""
													}
												],
												"src": "5773:366:12"
											},
											{
												"body": {
													"nativeSrc": "6316:248:12",
													"nodeType": "YulBlock",
													"src": "6316:248:12",
													"statements": [
														{
															"nativeSrc": "6326:26:12",
															"nodeType": "YulAssignment",
															"src": "6326:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6338:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6338:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6349:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6349:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6334:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6334:3:12"
																},
																"nativeSrc": "6334:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6334:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6326:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6326:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6373:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6373:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6384:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6384:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6369:3:12"
																		},
																		"nativeSrc": "6369:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6369:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6392:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "6392:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6398:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6398:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6388:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:12"
																		},
																		"nativeSrc": "6388:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6388:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6362:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6362:6:12"
																},
																"nativeSrc": "6362:47:12",
																"nodeType": "YulFunctionCall",
																"src": "6362:47:12"
															},
															"nativeSrc": "6362:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "6362:47:12"
														},
														{
															"nativeSrc": "6418:139:12",
															"nodeType": "YulAssignment",
															"src": "6418:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6552:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6552:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6426:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "6426:124:12"
																},
																"nativeSrc": "6426:131:12",
																"nodeType": "YulFunctionCall",
																"src": "6426:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6418:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6418:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6145:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6296:9:12",
														"nodeType": "YulTypedName",
														"src": "6296:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6311:4:12",
														"nodeType": "YulTypedName",
														"src": "6311:4:12",
														"type": ""
													}
												],
												"src": "6145:419:12"
											},
											{
												"body": {
													"nativeSrc": "6676:72:12",
													"nodeType": "YulBlock",
													"src": "6676:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6698:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6698:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6706:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6706:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6694:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6694:3:12"
																		},
																		"nativeSrc": "6694:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6694:14:12"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67",
																		"kind": "string",
																		"nativeSrc": "6710:30:12",
																		"nodeType": "YulLiteral",
																		"src": "6710:30:12",
																		"type": "",
																		"value": "Not enough tokens in listing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6687:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6687:6:12"
																},
																"nativeSrc": "6687:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6687:54:12"
															},
															"nativeSrc": "6687:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6687:54:12"
														}
													]
												},
												"name": "store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
												"nativeSrc": "6570:178:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6668:6:12",
														"nodeType": "YulTypedName",
														"src": "6668:6:12",
														"type": ""
													}
												],
												"src": "6570:178:12"
											},
											{
												"body": {
													"nativeSrc": "6900:220:12",
													"nodeType": "YulBlock",
													"src": "6900:220:12",
													"statements": [
														{
															"nativeSrc": "6910:74:12",
															"nodeType": "YulAssignment",
															"src": "6910:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6976:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6976:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6981:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:12",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6917:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "6917:58:12"
																},
																"nativeSrc": "6917:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6917:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6910:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7082:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7082:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																	"nativeSrc": "6993:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "6993:88:12"
																},
																"nativeSrc": "6993:93:12",
																"nodeType": "YulFunctionCall",
																"src": "6993:93:12"
															},
															"nativeSrc": "6993:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "6993:93:12"
														},
														{
															"nativeSrc": "7095:19:12",
															"nodeType": "YulAssignment",
															"src": "7095:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7106:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7106:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7111:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7111:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:12"
																},
																"nativeSrc": "7102:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7102:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7095:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7095:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6754:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6888:3:12",
														"nodeType": "YulTypedName",
														"src": "6888:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6896:3:12",
														"nodeType": "YulTypedName",
														"src": "6896:3:12",
														"type": ""
													}
												],
												"src": "6754:366:12"
											},
											{
												"body": {
													"nativeSrc": "7297:248:12",
													"nodeType": "YulBlock",
													"src": "7297:248:12",
													"statements": [
														{
															"nativeSrc": "7307:26:12",
															"nodeType": "YulAssignment",
															"src": "7307:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7319:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7319:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7330:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7315:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7315:3:12"
																},
																"nativeSrc": "7315:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7315:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7307:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7307:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7354:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7354:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7365:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7365:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7350:3:12"
																		},
																		"nativeSrc": "7350:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7350:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7373:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "7373:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7379:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7369:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7369:3:12"
																		},
																		"nativeSrc": "7369:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7369:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7343:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7343:6:12"
																},
																"nativeSrc": "7343:47:12",
																"nodeType": "YulFunctionCall",
																"src": "7343:47:12"
															},
															"nativeSrc": "7343:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "7343:47:12"
														},
														{
															"nativeSrc": "7399:139:12",
															"nodeType": "YulAssignment",
															"src": "7399:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7533:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7533:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7407:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "7407:124:12"
																},
																"nativeSrc": "7407:131:12",
																"nodeType": "YulFunctionCall",
																"src": "7407:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7399:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7399:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7126:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7277:9:12",
														"nodeType": "YulTypedName",
														"src": "7277:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7292:4:12",
														"nodeType": "YulTypedName",
														"src": "7292:4:12",
														"type": ""
													}
												],
												"src": "7126:419:12"
											},
											{
												"body": {
													"nativeSrc": "7579:152:12",
													"nodeType": "YulBlock",
													"src": "7579:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7596:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7596:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7599:77:12",
																		"nodeType": "YulLiteral",
																		"src": "7599:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7589:6:12"
																},
																"nativeSrc": "7589:88:12",
																"nodeType": "YulFunctionCall",
																"src": "7589:88:12"
															},
															"nativeSrc": "7589:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "7589:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7693:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7693:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7696:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7686:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7686:6:12"
																},
																"nativeSrc": "7686:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7686:15:12"
															},
															"nativeSrc": "7686:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7686:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7717:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7717:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7720:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7720:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7710:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:12"
																},
																"nativeSrc": "7710:15:12",
																"nodeType": "YulFunctionCall",
																"src": "7710:15:12"
															},
															"nativeSrc": "7710:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "7710:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7551:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "7551:180:12"
											},
											{
												"body": {
													"nativeSrc": "7785:362:12",
													"nodeType": "YulBlock",
													"src": "7785:362:12",
													"statements": [
														{
															"nativeSrc": "7795:25:12",
															"nodeType": "YulAssignment",
															"src": "7795:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7818:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7818:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7800:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7800:17:12"
																},
																"nativeSrc": "7800:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7800:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7795:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7795:1:12"
																}
															]
														},
														{
															"nativeSrc": "7829:25:12",
															"nodeType": "YulAssignment",
															"src": "7829:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7852:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7852:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7834:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7834:17:12"
																},
																"nativeSrc": "7834:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7834:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7829:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7829:1:12"
																}
															]
														},
														{
															"nativeSrc": "7863:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7863:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7886:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7886:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7889:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7889:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7882:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7882:3:12"
																},
																"nativeSrc": "7882:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7882:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "7867:11:12",
																	"nodeType": "YulTypedName",
																	"src": "7867:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7900:41:12",
															"nodeType": "YulAssignment",
															"src": "7900:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "7929:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "7929:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7911:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "7911:17:12"
																},
																"nativeSrc": "7911:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7911:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7900:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7900:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8118:22:12",
																"nodeType": "YulBlock",
																"src": "8118:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8120:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8120:16:12"
																			},
																			"nativeSrc": "8120:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8120:18:12"
																		},
																		"nativeSrc": "8120:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8120:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8051:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8051:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8044:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "8044:6:12"
																				},
																				"nativeSrc": "8044:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8044:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8074:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "8074:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8081:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "8081:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8090:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "8090:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8077:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8077:3:12"
																						},
																						"nativeSrc": "8077:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8077:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8071:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "8071:2:12"
																				},
																				"nativeSrc": "8071:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8071:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8024:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "8024:2:12"
																		},
																		"nativeSrc": "8024:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8024:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8004:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:12"
																},
																"nativeSrc": "8004:113:12",
																"nodeType": "YulFunctionCall",
																"src": "8004:113:12"
															},
															"nativeSrc": "8001:139:12",
															"nodeType": "YulIf",
															"src": "8001:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7737:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7768:1:12",
														"nodeType": "YulTypedName",
														"src": "7768:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7771:1:12",
														"nodeType": "YulTypedName",
														"src": "7771:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7777:7:12",
														"nodeType": "YulTypedName",
														"src": "7777:7:12",
														"type": ""
													}
												],
												"src": "7737:410:12"
											},
											{
												"body": {
													"nativeSrc": "8181:152:12",
													"nodeType": "YulBlock",
													"src": "8181:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8198:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8198:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8201:77:12",
																		"nodeType": "YulLiteral",
																		"src": "8201:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8191:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:12"
																},
																"nativeSrc": "8191:88:12",
																"nodeType": "YulFunctionCall",
																"src": "8191:88:12"
															},
															"nativeSrc": "8191:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "8191:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8295:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8295:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8298:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8298:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8288:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8288:6:12"
																},
																"nativeSrc": "8288:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8288:15:12"
															},
															"nativeSrc": "8288:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8288:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8319:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8319:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8322:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8322:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8312:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8312:6:12"
																},
																"nativeSrc": "8312:15:12",
																"nodeType": "YulFunctionCall",
																"src": "8312:15:12"
															},
															"nativeSrc": "8312:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "8312:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8153:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "8153:180:12"
											},
											{
												"body": {
													"nativeSrc": "8381:143:12",
													"nodeType": "YulBlock",
													"src": "8381:143:12",
													"statements": [
														{
															"nativeSrc": "8391:25:12",
															"nodeType": "YulAssignment",
															"src": "8391:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8414:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8414:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8396:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8396:17:12"
																},
																"nativeSrc": "8396:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8396:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8391:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8391:1:12"
																}
															]
														},
														{
															"nativeSrc": "8425:25:12",
															"nodeType": "YulAssignment",
															"src": "8425:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8448:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8448:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8430:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8430:17:12"
																},
																"nativeSrc": "8430:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8430:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8425:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8425:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8472:22:12",
																"nodeType": "YulBlock",
																"src": "8472:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8474:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8474:16:12"
																			},
																			"nativeSrc": "8474:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8474:18:12"
																		},
																		"nativeSrc": "8474:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8474:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8469:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8469:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8462:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:12"
																},
																"nativeSrc": "8462:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8462:9:12"
															},
															"nativeSrc": "8459:35:12",
															"nodeType": "YulIf",
															"src": "8459:35:12"
														},
														{
															"nativeSrc": "8504:14:12",
															"nodeType": "YulAssignment",
															"src": "8504:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8513:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8513:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8516:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8516:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8509:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8509:3:12"
																},
																"nativeSrc": "8509:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8509:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8504:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8504:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8339:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8370:1:12",
														"nodeType": "YulTypedName",
														"src": "8370:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8373:1:12",
														"nodeType": "YulTypedName",
														"src": "8373:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8379:1:12",
														"nodeType": "YulTypedName",
														"src": "8379:1:12",
														"type": ""
													}
												],
												"src": "8339:185:12"
											},
											{
												"body": {
													"nativeSrc": "8574:147:12",
													"nodeType": "YulBlock",
													"src": "8574:147:12",
													"statements": [
														{
															"nativeSrc": "8584:25:12",
															"nodeType": "YulAssignment",
															"src": "8584:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8607:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8607:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8589:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8589:17:12"
																},
																"nativeSrc": "8589:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8589:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8584:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8584:1:12"
																}
															]
														},
														{
															"nativeSrc": "8618:25:12",
															"nodeType": "YulAssignment",
															"src": "8618:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8641:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8641:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8623:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "8623:17:12"
																},
																"nativeSrc": "8623:20:12",
																"nodeType": "YulFunctionCall",
																"src": "8623:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8618:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "8618:1:12"
																}
															]
														},
														{
															"nativeSrc": "8652:16:12",
															"nodeType": "YulAssignment",
															"src": "8652:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8663:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8663:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8666:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8666:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8659:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:12"
																},
																"nativeSrc": "8659:9:12",
																"nodeType": "YulFunctionCall",
																"src": "8659:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8652:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8692:22:12",
																"nodeType": "YulBlock",
																"src": "8692:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8694:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "8694:16:12"
																			},
																			"nativeSrc": "8694:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8694:18:12"
																		},
																		"nativeSrc": "8694:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8694:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8684:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "8684:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8687:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8687:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8681:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "8681:2:12"
																},
																"nativeSrc": "8681:10:12",
																"nodeType": "YulFunctionCall",
																"src": "8681:10:12"
															},
															"nativeSrc": "8678:36:12",
															"nodeType": "YulIf",
															"src": "8678:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8530:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8561:1:12",
														"nodeType": "YulTypedName",
														"src": "8561:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8564:1:12",
														"nodeType": "YulTypedName",
														"src": "8564:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8570:3:12",
														"nodeType": "YulTypedName",
														"src": "8570:3:12",
														"type": ""
													}
												],
												"src": "8530:191:12"
											},
											{
												"body": {
													"nativeSrc": "8833:68:12",
													"nodeType": "YulBlock",
													"src": "8833:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8855:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8855:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8863:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8863:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8851:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8851:3:12"
																		},
																		"nativeSrc": "8851:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8851:14:12"
																	},
																	{
																		"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "8867:26:12",
																		"nodeType": "YulLiteral",
																		"src": "8867:26:12",
																		"type": "",
																		"value": "Incorrect payment amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8844:6:12"
																},
																"nativeSrc": "8844:50:12",
																"nodeType": "YulFunctionCall",
																"src": "8844:50:12"
															},
															"nativeSrc": "8844:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "8844:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
												"nativeSrc": "8727:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8825:6:12",
														"nodeType": "YulTypedName",
														"src": "8825:6:12",
														"type": ""
													}
												],
												"src": "8727:174:12"
											},
											{
												"body": {
													"nativeSrc": "9053:220:12",
													"nodeType": "YulBlock",
													"src": "9053:220:12",
													"statements": [
														{
															"nativeSrc": "9063:74:12",
															"nodeType": "YulAssignment",
															"src": "9063:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9129:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9129:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9134:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9134:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9070:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "9070:58:12"
																},
																"nativeSrc": "9070:67:12",
																"nodeType": "YulFunctionCall",
																"src": "9070:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9063:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9063:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9235:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9235:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																	"nativeSrc": "9146:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "9146:88:12"
																},
																"nativeSrc": "9146:93:12",
																"nodeType": "YulFunctionCall",
																"src": "9146:93:12"
															},
															"nativeSrc": "9146:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "9146:93:12"
														},
														{
															"nativeSrc": "9248:19:12",
															"nodeType": "YulAssignment",
															"src": "9248:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9259:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9259:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9264:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9264:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9255:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9255:3:12"
																},
																"nativeSrc": "9255:12:12",
																"nodeType": "YulFunctionCall",
																"src": "9255:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9248:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9248:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8907:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9041:3:12",
														"nodeType": "YulTypedName",
														"src": "9041:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9049:3:12",
														"nodeType": "YulTypedName",
														"src": "9049:3:12",
														"type": ""
													}
												],
												"src": "8907:366:12"
											},
											{
												"body": {
													"nativeSrc": "9450:248:12",
													"nodeType": "YulBlock",
													"src": "9450:248:12",
													"statements": [
														{
															"nativeSrc": "9460:26:12",
															"nodeType": "YulAssignment",
															"src": "9460:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9472:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9472:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9483:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9483:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9468:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9468:3:12"
																},
																"nativeSrc": "9468:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9468:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9460:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9460:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9507:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9507:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9518:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9518:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9503:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9503:3:12"
																		},
																		"nativeSrc": "9503:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9503:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9526:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9526:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9532:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9532:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9522:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9522:3:12"
																		},
																		"nativeSrc": "9522:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9522:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9496:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9496:6:12"
																},
																"nativeSrc": "9496:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9496:47:12"
															},
															"nativeSrc": "9496:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9496:47:12"
														},
														{
															"nativeSrc": "9552:139:12",
															"nodeType": "YulAssignment",
															"src": "9552:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9686:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9686:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9560:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9560:124:12"
																},
																"nativeSrc": "9560:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9560:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9552:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9552:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9279:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9430:9:12",
														"nodeType": "YulTypedName",
														"src": "9430:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9445:4:12",
														"nodeType": "YulTypedName",
														"src": "9445:4:12",
														"type": ""
													}
												],
												"src": "9279:419:12"
											},
											{
												"body": {
													"nativeSrc": "9830:206:12",
													"nodeType": "YulBlock",
													"src": "9830:206:12",
													"statements": [
														{
															"nativeSrc": "9840:26:12",
															"nodeType": "YulAssignment",
															"src": "9840:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9852:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9852:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9863:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9863:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9848:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9848:3:12"
																},
																"nativeSrc": "9848:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9848:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9840:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9840:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9920:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9920:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9933:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9933:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9944:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9944:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9929:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9929:3:12"
																		},
																		"nativeSrc": "9929:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9929:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9876:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9876:43:12"
																},
																"nativeSrc": "9876:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9876:71:12"
															},
															"nativeSrc": "9876:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9876:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10001:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10001:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10014:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10014:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10025:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10025:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10010:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10010:3:12"
																		},
																		"nativeSrc": "10010:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10010:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9957:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9957:43:12"
																},
																"nativeSrc": "9957:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9957:72:12"
															},
															"nativeSrc": "9957:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9957:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9704:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9794:9:12",
														"nodeType": "YulTypedName",
														"src": "9794:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9806:6:12",
														"nodeType": "YulTypedName",
														"src": "9806:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9814:6:12",
														"nodeType": "YulTypedName",
														"src": "9814:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9825:4:12",
														"nodeType": "YulTypedName",
														"src": "9825:4:12",
														"type": ""
													}
												],
												"src": "9704:332:12"
											},
											{
												"body": {
													"nativeSrc": "10105:80:12",
													"nodeType": "YulBlock",
													"src": "10105:80:12",
													"statements": [
														{
															"nativeSrc": "10115:22:12",
															"nodeType": "YulAssignment",
															"src": "10115:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10130:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10130:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10124:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10124:5:12"
																},
																"nativeSrc": "10124:13:12",
																"nodeType": "YulFunctionCall",
																"src": "10124:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10115:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10115:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10173:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10173:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10146:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "10146:26:12"
																},
																"nativeSrc": "10146:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10146:33:12"
															},
															"nativeSrc": "10146:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "10146:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10042:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10083:6:12",
														"nodeType": "YulTypedName",
														"src": "10083:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10091:3:12",
														"nodeType": "YulTypedName",
														"src": "10091:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10099:5:12",
														"nodeType": "YulTypedName",
														"src": "10099:5:12",
														"type": ""
													}
												],
												"src": "10042:143:12"
											},
											{
												"body": {
													"nativeSrc": "10268:274:12",
													"nodeType": "YulBlock",
													"src": "10268:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10314:83:12",
																"nodeType": "YulBlock",
																"src": "10314:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10316:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10316:77:12"
																			},
																			"nativeSrc": "10316:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10316:79:12"
																		},
																		"nativeSrc": "10316:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10316:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10289:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10289:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10298:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10298:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10285:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10285:3:12"
																		},
																		"nativeSrc": "10285:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10285:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10310:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10310:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10281:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10281:3:12"
																},
																"nativeSrc": "10281:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10281:32:12"
															},
															"nativeSrc": "10278:119:12",
															"nodeType": "YulIf",
															"src": "10278:119:12"
														},
														{
															"nativeSrc": "10407:128:12",
															"nodeType": "YulBlock",
															"src": "10407:128:12",
															"statements": [
																{
																	"nativeSrc": "10422:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10422:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10436:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10436:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10426:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10426:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10451:74:12",
																	"nodeType": "YulAssignment",
																	"src": "10451:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10497:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10497:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10508:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10508:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10493:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10493:3:12"
																				},
																				"nativeSrc": "10493:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10493:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10517:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10517:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10461:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "10461:31:12"
																		},
																		"nativeSrc": "10461:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10461:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10451:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10451:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10191:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10238:9:12",
														"nodeType": "YulTypedName",
														"src": "10238:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10249:7:12",
														"nodeType": "YulTypedName",
														"src": "10249:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10261:6:12",
														"nodeType": "YulTypedName",
														"src": "10261:6:12",
														"type": ""
													}
												],
												"src": "10191:351:12"
											},
											{
												"body": {
													"nativeSrc": "10654:75:12",
													"nodeType": "YulBlock",
													"src": "10654:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10676:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10676:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10684:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10684:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10672:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10672:3:12"
																		},
																		"nativeSrc": "10672:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10672:14:12"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "10688:33:12",
																		"nodeType": "YulLiteral",
																		"src": "10688:33:12",
																		"type": "",
																		"value": "Payment token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10665:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10665:6:12"
																},
																"nativeSrc": "10665:57:12",
																"nodeType": "YulFunctionCall",
																"src": "10665:57:12"
															},
															"nativeSrc": "10665:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "10665:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
												"nativeSrc": "10548:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10646:6:12",
														"nodeType": "YulTypedName",
														"src": "10646:6:12",
														"type": ""
													}
												],
												"src": "10548:181:12"
											},
											{
												"body": {
													"nativeSrc": "10881:220:12",
													"nodeType": "YulBlock",
													"src": "10881:220:12",
													"statements": [
														{
															"nativeSrc": "10891:74:12",
															"nodeType": "YulAssignment",
															"src": "10891:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10957:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10957:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10962:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10962:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10898:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10898:58:12"
																},
																"nativeSrc": "10898:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10898:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10891:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10891:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11063:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11063:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																	"nativeSrc": "10974:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10974:88:12"
																},
																"nativeSrc": "10974:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10974:93:12"
															},
															"nativeSrc": "10974:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10974:93:12"
														},
														{
															"nativeSrc": "11076:19:12",
															"nodeType": "YulAssignment",
															"src": "11076:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11087:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11087:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11092:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11092:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11083:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11083:3:12"
																},
																"nativeSrc": "11083:12:12",
																"nodeType": "YulFunctionCall",
																"src": "11083:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11076:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10735:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10869:3:12",
														"nodeType": "YulTypedName",
														"src": "10869:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10877:3:12",
														"nodeType": "YulTypedName",
														"src": "10877:3:12",
														"type": ""
													}
												],
												"src": "10735:366:12"
											},
											{
												"body": {
													"nativeSrc": "11278:248:12",
													"nodeType": "YulBlock",
													"src": "11278:248:12",
													"statements": [
														{
															"nativeSrc": "11288:26:12",
															"nodeType": "YulAssignment",
															"src": "11288:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11300:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11300:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11311:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11311:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11296:3:12"
																},
																"nativeSrc": "11296:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11296:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11288:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11288:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11335:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11335:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11346:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11346:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11331:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11331:3:12"
																		},
																		"nativeSrc": "11331:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11331:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11354:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "11354:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11360:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11360:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11350:3:12"
																		},
																		"nativeSrc": "11350:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11350:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11324:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11324:6:12"
																},
																"nativeSrc": "11324:47:12",
																"nodeType": "YulFunctionCall",
																"src": "11324:47:12"
															},
															"nativeSrc": "11324:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "11324:47:12"
														},
														{
															"nativeSrc": "11380:139:12",
															"nodeType": "YulAssignment",
															"src": "11380:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11514:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11514:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11388:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "11388:124:12"
																},
																"nativeSrc": "11388:131:12",
																"nodeType": "YulFunctionCall",
																"src": "11388:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11380:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11380:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11107:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11258:9:12",
														"nodeType": "YulTypedName",
														"src": "11258:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11273:4:12",
														"nodeType": "YulTypedName",
														"src": "11273:4:12",
														"type": ""
													}
												],
												"src": "11107:419:12"
											},
											{
												"body": {
													"nativeSrc": "11577:149:12",
													"nodeType": "YulBlock",
													"src": "11577:149:12",
													"statements": [
														{
															"nativeSrc": "11587:25:12",
															"nodeType": "YulAssignment",
															"src": "11587:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11610:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11610:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11592:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11592:17:12"
																},
																"nativeSrc": "11592:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11592:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11587:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11587:1:12"
																}
															]
														},
														{
															"nativeSrc": "11621:25:12",
															"nodeType": "YulAssignment",
															"src": "11621:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11644:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11644:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11626:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11626:17:12"
																},
																"nativeSrc": "11626:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11626:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11621:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11621:1:12"
																}
															]
														},
														{
															"nativeSrc": "11655:17:12",
															"nodeType": "YulAssignment",
															"src": "11655:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11667:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11667:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11670:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11670:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11663:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11663:3:12"
																},
																"nativeSrc": "11663:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11663:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11655:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11655:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11697:22:12",
																"nodeType": "YulBlock",
																"src": "11697:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11699:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11699:16:12"
																			},
																			"nativeSrc": "11699:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11699:18:12"
																		},
																		"nativeSrc": "11699:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11699:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11688:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "11688:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11694:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11694:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11685:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "11685:2:12"
																},
																"nativeSrc": "11685:11:12",
																"nodeType": "YulFunctionCall",
																"src": "11685:11:12"
															},
															"nativeSrc": "11682:37:12",
															"nodeType": "YulIf",
															"src": "11682:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11532:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11563:1:12",
														"nodeType": "YulTypedName",
														"src": "11563:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11566:1:12",
														"nodeType": "YulTypedName",
														"src": "11566:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11572:4:12",
														"nodeType": "YulTypedName",
														"src": "11572:4:12",
														"type": ""
													}
												],
												"src": "11532:194:12"
											},
											{
												"body": {
													"nativeSrc": "11774:48:12",
													"nodeType": "YulBlock",
													"src": "11774:48:12",
													"statements": [
														{
															"nativeSrc": "11784:32:12",
															"nodeType": "YulAssignment",
															"src": "11784:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11809:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11809:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11802:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11802:6:12"
																		},
																		"nativeSrc": "11802:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11802:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11795:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11795:6:12"
																},
																"nativeSrc": "11795:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11795:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11784:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11784:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "11732:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11756:5:12",
														"nodeType": "YulTypedName",
														"src": "11756:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11766:7:12",
														"nodeType": "YulTypedName",
														"src": "11766:7:12",
														"type": ""
													}
												],
												"src": "11732:90:12"
											},
											{
												"body": {
													"nativeSrc": "11887:50:12",
													"nodeType": "YulBlock",
													"src": "11887:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11904:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11904:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11924:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11924:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "11909:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "11909:14:12"
																		},
																		"nativeSrc": "11909:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11909:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11897:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11897:6:12"
																},
																"nativeSrc": "11897:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11897:34:12"
															},
															"nativeSrc": "11897:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11897:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "11828:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11875:5:12",
														"nodeType": "YulTypedName",
														"src": "11875:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11882:3:12",
														"nodeType": "YulTypedName",
														"src": "11882:3:12",
														"type": ""
													}
												],
												"src": "11828:109:12"
											},
											{
												"body": {
													"nativeSrc": "12119:365:12",
													"nodeType": "YulBlock",
													"src": "12119:365:12",
													"statements": [
														{
															"nativeSrc": "12129:27:12",
															"nodeType": "YulAssignment",
															"src": "12129:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12141:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12141:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12152:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12152:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12137:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12137:3:12"
																},
																"nativeSrc": "12137:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12137:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12129:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12129:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12210:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12210:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12223:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12223:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12234:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12234:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12219:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12219:3:12"
																		},
																		"nativeSrc": "12219:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12219:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12166:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12166:43:12"
																},
																"nativeSrc": "12166:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12166:71:12"
															},
															"nativeSrc": "12166:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12166:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12291:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12291:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12304:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12304:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12315:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12315:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12300:3:12"
																		},
																		"nativeSrc": "12300:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12300:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12247:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12247:43:12"
																},
																"nativeSrc": "12247:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12247:72:12"
															},
															"nativeSrc": "12247:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12247:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12373:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12373:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12386:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12386:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12397:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12397:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12382:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12382:3:12"
																		},
																		"nativeSrc": "12382:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12382:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12329:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12329:43:12"
																},
																"nativeSrc": "12329:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12329:72:12"
															},
															"nativeSrc": "12329:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12329:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12449:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12449:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12462:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12462:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12473:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12473:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12458:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12458:3:12"
																		},
																		"nativeSrc": "12458:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12458:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "12411:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "12411:37:12"
																},
																"nativeSrc": "12411:66:12",
																"nodeType": "YulFunctionCall",
																"src": "12411:66:12"
															},
															"nativeSrc": "12411:66:12",
															"nodeType": "YulExpressionStatement",
															"src": "12411:66:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "11943:541:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12067:9:12",
														"nodeType": "YulTypedName",
														"src": "12067:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12079:6:12",
														"nodeType": "YulTypedName",
														"src": "12079:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12087:6:12",
														"nodeType": "YulTypedName",
														"src": "12087:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12095:6:12",
														"nodeType": "YulTypedName",
														"src": "12095:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12103:6:12",
														"nodeType": "YulTypedName",
														"src": "12103:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12114:4:12",
														"nodeType": "YulTypedName",
														"src": "12114:4:12",
														"type": ""
													}
												],
												"src": "11943:541:12"
											},
											{
												"body": {
													"nativeSrc": "12596:75:12",
													"nodeType": "YulBlock",
													"src": "12596:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12618:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12618:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12626:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12626:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12614:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12614:3:12"
																		},
																		"nativeSrc": "12614:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12614:14:12"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "12630:33:12",
																		"nodeType": "YulLiteral",
																		"src": "12630:33:12",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12607:6:12"
																},
																"nativeSrc": "12607:57:12",
																"nodeType": "YulFunctionCall",
																"src": "12607:57:12"
															},
															"nativeSrc": "12607:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "12607:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
												"nativeSrc": "12490:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12588:6:12",
														"nodeType": "YulTypedName",
														"src": "12588:6:12",
														"type": ""
													}
												],
												"src": "12490:181:12"
											},
											{
												"body": {
													"nativeSrc": "12823:220:12",
													"nodeType": "YulBlock",
													"src": "12823:220:12",
													"statements": [
														{
															"nativeSrc": "12833:74:12",
															"nodeType": "YulAssignment",
															"src": "12833:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12899:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12899:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12904:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12904:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12840:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12840:58:12"
																},
																"nativeSrc": "12840:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12840:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12833:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12833:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13005:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13005:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																	"nativeSrc": "12916:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12916:88:12"
																},
																"nativeSrc": "12916:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12916:93:12"
															},
															"nativeSrc": "12916:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12916:93:12"
														},
														{
															"nativeSrc": "13018:19:12",
															"nodeType": "YulAssignment",
															"src": "13018:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13029:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13029:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13034:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13034:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13025:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13025:3:12"
																},
																"nativeSrc": "13025:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13025:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13018:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13018:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12677:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12811:3:12",
														"nodeType": "YulTypedName",
														"src": "12811:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12819:3:12",
														"nodeType": "YulTypedName",
														"src": "12819:3:12",
														"type": ""
													}
												],
												"src": "12677:366:12"
											},
											{
												"body": {
													"nativeSrc": "13220:248:12",
													"nodeType": "YulBlock",
													"src": "13220:248:12",
													"statements": [
														{
															"nativeSrc": "13230:26:12",
															"nodeType": "YulAssignment",
															"src": "13230:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13242:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13242:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13253:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13253:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13238:3:12"
																},
																"nativeSrc": "13238:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13238:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13230:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13230:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13277:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13277:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13288:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13288:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13273:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13273:3:12"
																		},
																		"nativeSrc": "13273:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13273:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13296:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13296:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13302:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13302:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13292:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13292:3:12"
																		},
																		"nativeSrc": "13292:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13292:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13266:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:12"
																},
																"nativeSrc": "13266:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13266:47:12"
															},
															"nativeSrc": "13266:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13266:47:12"
														},
														{
															"nativeSrc": "13322:139:12",
															"nodeType": "YulAssignment",
															"src": "13322:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13456:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13456:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13330:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13330:124:12"
																},
																"nativeSrc": "13330:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13330:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13322:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13322:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13049:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13200:9:12",
														"nodeType": "YulTypedName",
														"src": "13200:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13215:4:12",
														"nodeType": "YulTypedName",
														"src": "13215:4:12",
														"type": ""
													}
												],
												"src": "13049:419:12"
											},
											{
												"body": {
													"nativeSrc": "13580:76:12",
													"nodeType": "YulBlock",
													"src": "13580:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13602:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13602:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13610:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13610:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13598:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13598:3:12"
																		},
																		"nativeSrc": "13598:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13598:14:12"
																	},
																	{
																		"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "13614:34:12",
																		"nodeType": "YulLiteral",
																		"src": "13614:34:12",
																		"type": "",
																		"value": "Tokens must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13591:6:12"
																},
																"nativeSrc": "13591:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13591:58:12"
															},
															"nativeSrc": "13591:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13591:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
												"nativeSrc": "13474:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13572:6:12",
														"nodeType": "YulTypedName",
														"src": "13572:6:12",
														"type": ""
													}
												],
												"src": "13474:182:12"
											},
											{
												"body": {
													"nativeSrc": "13808:220:12",
													"nodeType": "YulBlock",
													"src": "13808:220:12",
													"statements": [
														{
															"nativeSrc": "13818:74:12",
															"nodeType": "YulAssignment",
															"src": "13818:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13884:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13884:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13889:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13889:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13825:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13825:58:12"
																},
																"nativeSrc": "13825:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13825:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13818:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13990:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13990:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																	"nativeSrc": "13901:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13901:88:12"
																},
																"nativeSrc": "13901:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13901:93:12"
															},
															"nativeSrc": "13901:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13901:93:12"
														},
														{
															"nativeSrc": "14003:19:12",
															"nodeType": "YulAssignment",
															"src": "14003:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14014:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14014:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14019:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14019:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14010:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14010:3:12"
																},
																"nativeSrc": "14010:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14010:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14003:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14003:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13662:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13796:3:12",
														"nodeType": "YulTypedName",
														"src": "13796:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13804:3:12",
														"nodeType": "YulTypedName",
														"src": "13804:3:12",
														"type": ""
													}
												],
												"src": "13662:366:12"
											},
											{
												"body": {
													"nativeSrc": "14205:248:12",
													"nodeType": "YulBlock",
													"src": "14205:248:12",
													"statements": [
														{
															"nativeSrc": "14215:26:12",
															"nodeType": "YulAssignment",
															"src": "14215:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14227:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14227:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14238:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14238:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14223:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14223:3:12"
																},
																"nativeSrc": "14223:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14223:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14215:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14215:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14262:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14262:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14273:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14273:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14258:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14258:3:12"
																		},
																		"nativeSrc": "14258:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14258:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14281:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14281:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14287:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14287:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14277:3:12"
																		},
																		"nativeSrc": "14277:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14277:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14251:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14251:6:12"
																},
																"nativeSrc": "14251:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14251:47:12"
															},
															"nativeSrc": "14251:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14251:47:12"
														},
														{
															"nativeSrc": "14307:139:12",
															"nodeType": "YulAssignment",
															"src": "14307:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14441:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14441:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14315:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14315:124:12"
																},
																"nativeSrc": "14315:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14315:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14307:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14307:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14034:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14185:9:12",
														"nodeType": "YulTypedName",
														"src": "14185:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14200:4:12",
														"nodeType": "YulTypedName",
														"src": "14200:4:12",
														"type": ""
													}
												],
												"src": "14034:419:12"
											},
											{
												"body": {
													"nativeSrc": "14565:115:12",
													"nodeType": "YulBlock",
													"src": "14565:115:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14587:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14587:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14595:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14595:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14583:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14583:3:12"
																		},
																		"nativeSrc": "14583:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14583:14:12"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65",
																		"kind": "string",
																		"nativeSrc": "14599:34:12",
																		"nodeType": "YulLiteral",
																		"src": "14599:34:12",
																		"type": "",
																		"value": "Duration must be greater than ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14576:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14576:6:12"
																},
																"nativeSrc": "14576:58:12",
																"nodeType": "YulFunctionCall",
																"src": "14576:58:12"
															},
															"nativeSrc": "14576:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "14576:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14655:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14655:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14663:2:12",
																				"nodeType": "YulLiteral",
																				"src": "14663:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14651:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14651:3:12"
																		},
																		"nativeSrc": "14651:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14651:15:12"
																	},
																	{
																		"hexValue": "726f",
																		"kind": "string",
																		"nativeSrc": "14668:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14668:4:12",
																		"type": "",
																		"value": "ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14644:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14644:6:12"
																},
																"nativeSrc": "14644:29:12",
																"nodeType": "YulFunctionCall",
																"src": "14644:29:12"
															},
															"nativeSrc": "14644:29:12",
															"nodeType": "YulExpressionStatement",
															"src": "14644:29:12"
														}
													]
												},
												"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
												"nativeSrc": "14459:221:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14557:6:12",
														"nodeType": "YulTypedName",
														"src": "14557:6:12",
														"type": ""
													}
												],
												"src": "14459:221:12"
											},
											{
												"body": {
													"nativeSrc": "14832:220:12",
													"nodeType": "YulBlock",
													"src": "14832:220:12",
													"statements": [
														{
															"nativeSrc": "14842:74:12",
															"nodeType": "YulAssignment",
															"src": "14842:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14908:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14908:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14913:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14913:2:12",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14849:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14849:58:12"
																},
																"nativeSrc": "14849:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14849:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14842:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14842:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15014:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15014:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																	"nativeSrc": "14925:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14925:88:12"
																},
																"nativeSrc": "14925:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14925:93:12"
															},
															"nativeSrc": "14925:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14925:93:12"
														},
														{
															"nativeSrc": "15027:19:12",
															"nodeType": "YulAssignment",
															"src": "15027:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15038:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15043:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15043:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15034:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15034:3:12"
																},
																"nativeSrc": "15034:12:12",
																"nodeType": "YulFunctionCall",
																"src": "15034:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15027:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15027:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14686:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14820:3:12",
														"nodeType": "YulTypedName",
														"src": "14820:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14828:3:12",
														"nodeType": "YulTypedName",
														"src": "14828:3:12",
														"type": ""
													}
												],
												"src": "14686:366:12"
											},
											{
												"body": {
													"nativeSrc": "15229:248:12",
													"nodeType": "YulBlock",
													"src": "15229:248:12",
													"statements": [
														{
															"nativeSrc": "15239:26:12",
															"nodeType": "YulAssignment",
															"src": "15239:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15251:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15251:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15262:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15262:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15247:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15247:3:12"
																},
																"nativeSrc": "15247:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15247:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15239:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15239:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15286:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15286:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15297:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15297:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15282:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15282:3:12"
																		},
																		"nativeSrc": "15282:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15282:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15305:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15305:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15311:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15311:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15301:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15301:3:12"
																		},
																		"nativeSrc": "15301:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15301:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15275:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15275:6:12"
																},
																"nativeSrc": "15275:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15275:47:12"
															},
															"nativeSrc": "15275:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15275:47:12"
														},
														{
															"nativeSrc": "15331:139:12",
															"nodeType": "YulAssignment",
															"src": "15331:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15465:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15465:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15339:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15339:124:12"
																},
																"nativeSrc": "15339:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15339:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15331:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15331:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15058:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15209:9:12",
														"nodeType": "YulTypedName",
														"src": "15209:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15224:4:12",
														"nodeType": "YulTypedName",
														"src": "15224:4:12",
														"type": ""
													}
												],
												"src": "15058:419:12"
											},
											{
												"body": {
													"nativeSrc": "15589:68:12",
													"nodeType": "YulBlock",
													"src": "15589:68:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15611:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "15611:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15619:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15619:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15607:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15607:3:12"
																		},
																		"nativeSrc": "15607:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15607:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "15623:26:12",
																		"nodeType": "YulLiteral",
																		"src": "15623:26:12",
																		"type": "",
																		"value": "Invalid contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15600:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15600:6:12"
																},
																"nativeSrc": "15600:50:12",
																"nodeType": "YulFunctionCall",
																"src": "15600:50:12"
															},
															"nativeSrc": "15600:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "15600:50:12"
														}
													]
												},
												"name": "store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
												"nativeSrc": "15483:174:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15581:6:12",
														"nodeType": "YulTypedName",
														"src": "15581:6:12",
														"type": ""
													}
												],
												"src": "15483:174:12"
											},
											{
												"body": {
													"nativeSrc": "15809:220:12",
													"nodeType": "YulBlock",
													"src": "15809:220:12",
													"statements": [
														{
															"nativeSrc": "15819:74:12",
															"nodeType": "YulAssignment",
															"src": "15819:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15885:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15885:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15890:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15890:2:12",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15826:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15826:58:12"
																},
																"nativeSrc": "15826:67:12",
																"nodeType": "YulFunctionCall",
																"src": "15826:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15819:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15991:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15991:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																	"nativeSrc": "15902:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "15902:88:12"
																},
																"nativeSrc": "15902:93:12",
																"nodeType": "YulFunctionCall",
																"src": "15902:93:12"
															},
															"nativeSrc": "15902:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "15902:93:12"
														},
														{
															"nativeSrc": "16004:19:12",
															"nodeType": "YulAssignment",
															"src": "16004:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16015:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16015:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16020:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16020:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16011:3:12"
																},
																"nativeSrc": "16011:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16011:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16004:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16004:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15663:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15797:3:12",
														"nodeType": "YulTypedName",
														"src": "15797:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15805:3:12",
														"nodeType": "YulTypedName",
														"src": "15805:3:12",
														"type": ""
													}
												],
												"src": "15663:366:12"
											},
											{
												"body": {
													"nativeSrc": "16206:248:12",
													"nodeType": "YulBlock",
													"src": "16206:248:12",
													"statements": [
														{
															"nativeSrc": "16216:26:12",
															"nodeType": "YulAssignment",
															"src": "16216:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16228:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16228:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16239:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16239:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16224:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16224:3:12"
																},
																"nativeSrc": "16224:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16224:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16216:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16216:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16263:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16263:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16274:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16274:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16259:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16259:3:12"
																		},
																		"nativeSrc": "16259:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16259:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16282:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16282:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16288:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16288:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16278:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16278:3:12"
																		},
																		"nativeSrc": "16278:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16278:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16252:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16252:6:12"
																},
																"nativeSrc": "16252:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16252:47:12"
															},
															"nativeSrc": "16252:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16252:47:12"
														},
														{
															"nativeSrc": "16308:139:12",
															"nodeType": "YulAssignment",
															"src": "16308:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16442:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16442:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16316:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "16316:124:12"
																},
																"nativeSrc": "16316:131:12",
																"nodeType": "YulFunctionCall",
																"src": "16316:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16308:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16308:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16035:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16186:9:12",
														"nodeType": "YulTypedName",
														"src": "16186:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16201:4:12",
														"nodeType": "YulTypedName",
														"src": "16201:4:12",
														"type": ""
													}
												],
												"src": "16035:419:12"
											},
											{
												"body": {
													"nativeSrc": "16566:67:12",
													"nodeType": "YulBlock",
													"src": "16566:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16588:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16588:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16596:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16596:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16584:3:12"
																		},
																		"nativeSrc": "16584:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16584:14:12"
																	},
																	{
																		"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "16600:25:12",
																		"nodeType": "YulLiteral",
																		"src": "16600:25:12",
																		"type": "",
																		"value": "Token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16577:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16577:6:12"
																},
																"nativeSrc": "16577:49:12",
																"nodeType": "YulFunctionCall",
																"src": "16577:49:12"
															},
															"nativeSrc": "16577:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "16577:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
												"nativeSrc": "16460:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16558:6:12",
														"nodeType": "YulTypedName",
														"src": "16558:6:12",
														"type": ""
													}
												],
												"src": "16460:173:12"
											},
											{
												"body": {
													"nativeSrc": "16785:220:12",
													"nodeType": "YulBlock",
													"src": "16785:220:12",
													"statements": [
														{
															"nativeSrc": "16795:74:12",
															"nodeType": "YulAssignment",
															"src": "16795:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16861:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16861:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16866:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16866:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16802:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16802:58:12"
																},
																"nativeSrc": "16802:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16802:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16795:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16795:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16967:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16967:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																	"nativeSrc": "16878:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16878:88:12"
																},
																"nativeSrc": "16878:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16878:93:12"
															},
															"nativeSrc": "16878:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16878:93:12"
														},
														{
															"nativeSrc": "16980:19:12",
															"nodeType": "YulAssignment",
															"src": "16980:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16991:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16991:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16996:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16996:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16987:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16987:3:12"
																},
																"nativeSrc": "16987:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16987:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16980:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16980:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16639:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16773:3:12",
														"nodeType": "YulTypedName",
														"src": "16773:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16781:3:12",
														"nodeType": "YulTypedName",
														"src": "16781:3:12",
														"type": ""
													}
												],
												"src": "16639:366:12"
											},
											{
												"body": {
													"nativeSrc": "17182:248:12",
													"nodeType": "YulBlock",
													"src": "17182:248:12",
													"statements": [
														{
															"nativeSrc": "17192:26:12",
															"nodeType": "YulAssignment",
															"src": "17192:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17204:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17204:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17215:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17215:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17200:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17200:3:12"
																},
																"nativeSrc": "17200:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17200:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17192:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17192:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17239:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17239:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17250:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17250:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17235:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17235:3:12"
																		},
																		"nativeSrc": "17235:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17235:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17258:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17258:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17264:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17264:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17254:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17254:3:12"
																		},
																		"nativeSrc": "17254:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17254:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17228:6:12"
																},
																"nativeSrc": "17228:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17228:47:12"
															},
															"nativeSrc": "17228:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17228:47:12"
														},
														{
															"nativeSrc": "17284:139:12",
															"nodeType": "YulAssignment",
															"src": "17284:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17418:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17418:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17292:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17292:124:12"
																},
																"nativeSrc": "17292:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17292:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17284:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17011:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17162:9:12",
														"nodeType": "YulTypedName",
														"src": "17162:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17177:4:12",
														"nodeType": "YulTypedName",
														"src": "17177:4:12",
														"type": ""
													}
												],
												"src": "17011:419:12"
											},
											{
												"body": {
													"nativeSrc": "17479:190:12",
													"nodeType": "YulBlock",
													"src": "17479:190:12",
													"statements": [
														{
															"nativeSrc": "17489:33:12",
															"nodeType": "YulAssignment",
															"src": "17489:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17516:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17516:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17498:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "17498:17:12"
																},
																"nativeSrc": "17498:24:12",
																"nodeType": "YulFunctionCall",
																"src": "17498:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17489:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17489:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17612:22:12",
																"nodeType": "YulBlock",
																"src": "17612:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17614:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "17614:16:12"
																			},
																			"nativeSrc": "17614:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17614:18:12"
																		},
																		"nativeSrc": "17614:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17614:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17537:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17537:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17544:66:12",
																		"nodeType": "YulLiteral",
																		"src": "17544:66:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "17534:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "17534:2:12"
																},
																"nativeSrc": "17534:77:12",
																"nodeType": "YulFunctionCall",
																"src": "17534:77:12"
															},
															"nativeSrc": "17531:103:12",
															"nodeType": "YulIf",
															"src": "17531:103:12"
														},
														{
															"nativeSrc": "17643:20:12",
															"nodeType": "YulAssignment",
															"src": "17643:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17654:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17654:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17661:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17661:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17650:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17650:3:12"
																},
																"nativeSrc": "17650:13:12",
																"nodeType": "YulFunctionCall",
																"src": "17650:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17643:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17643:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "17436:233:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17465:5:12",
														"nodeType": "YulTypedName",
														"src": "17465:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17475:3:12",
														"nodeType": "YulTypedName",
														"src": "17475:3:12",
														"type": ""
													}
												],
												"src": "17436:233:12"
											},
											{
												"body": {
													"nativeSrc": "17857:371:12",
													"nodeType": "YulBlock",
													"src": "17857:371:12",
													"statements": [
														{
															"nativeSrc": "17867:27:12",
															"nodeType": "YulAssignment",
															"src": "17867:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17879:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17879:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17890:3:12",
																		"nodeType": "YulLiteral",
																		"src": "17890:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17875:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17875:3:12"
																},
																"nativeSrc": "17875:19:12",
																"nodeType": "YulFunctionCall",
																"src": "17875:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17867:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17867:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17948:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17948:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17961:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17961:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17972:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17972:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17957:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17957:3:12"
																		},
																		"nativeSrc": "17957:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17957:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17904:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17904:43:12"
																},
																"nativeSrc": "17904:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17904:71:12"
															},
															"nativeSrc": "17904:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17904:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18029:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18029:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18042:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18042:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18053:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18053:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18038:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18038:3:12"
																		},
																		"nativeSrc": "18038:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18038:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17985:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17985:43:12"
																},
																"nativeSrc": "17985:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17985:72:12"
															},
															"nativeSrc": "17985:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17985:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18111:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18111:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18124:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18124:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18135:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18135:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18120:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18120:3:12"
																		},
																		"nativeSrc": "18120:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18120:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18067:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18067:43:12"
																},
																"nativeSrc": "18067:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18067:72:12"
															},
															"nativeSrc": "18067:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18067:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "18193:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18193:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18206:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18206:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18217:2:12",
																				"nodeType": "YulLiteral",
																				"src": "18217:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18202:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18202:3:12"
																		},
																		"nativeSrc": "18202:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18202:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18149:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "18149:43:12"
																},
																"nativeSrc": "18149:72:12",
																"nodeType": "YulFunctionCall",
																"src": "18149:72:12"
															},
															"nativeSrc": "18149:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "18149:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17675:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17805:9:12",
														"nodeType": "YulTypedName",
														"src": "17805:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "17817:6:12",
														"nodeType": "YulTypedName",
														"src": "17817:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "17825:6:12",
														"nodeType": "YulTypedName",
														"src": "17825:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17833:6:12",
														"nodeType": "YulTypedName",
														"src": "17833:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17841:6:12",
														"nodeType": "YulTypedName",
														"src": "17841:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17852:4:12",
														"nodeType": "YulTypedName",
														"src": "17852:4:12",
														"type": ""
													}
												],
												"src": "17675:553:12"
											},
											{
												"body": {
													"nativeSrc": "18340:76:12",
													"nodeType": "YulBlock",
													"src": "18340:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18362:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18362:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18370:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18370:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18358:3:12"
																		},
																		"nativeSrc": "18358:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18358:14:12"
																	},
																	{
																		"hexValue": "4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177",
																		"kind": "string",
																		"nativeSrc": "18374:34:12",
																		"nodeType": "YulLiteral",
																		"src": "18374:34:12",
																		"type": "",
																		"value": "Only listing seller can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18351:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18351:6:12"
																},
																"nativeSrc": "18351:58:12",
																"nodeType": "YulFunctionCall",
																"src": "18351:58:12"
															},
															"nativeSrc": "18351:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "18351:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
												"nativeSrc": "18234:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18332:6:12",
														"nodeType": "YulTypedName",
														"src": "18332:6:12",
														"type": ""
													}
												],
												"src": "18234:182:12"
											},
											{
												"body": {
													"nativeSrc": "18568:220:12",
													"nodeType": "YulBlock",
													"src": "18568:220:12",
													"statements": [
														{
															"nativeSrc": "18578:74:12",
															"nodeType": "YulAssignment",
															"src": "18578:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18644:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18644:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18649:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18649:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18585:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18585:58:12"
																},
																"nativeSrc": "18585:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18585:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18578:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18578:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18750:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18750:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																	"nativeSrc": "18661:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18661:88:12"
																},
																"nativeSrc": "18661:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18661:93:12"
															},
															"nativeSrc": "18661:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18661:93:12"
														},
														{
															"nativeSrc": "18763:19:12",
															"nodeType": "YulAssignment",
															"src": "18763:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18774:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18774:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18779:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18779:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18770:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18770:3:12"
																},
																"nativeSrc": "18770:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18770:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18763:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18763:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18422:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18556:3:12",
														"nodeType": "YulTypedName",
														"src": "18556:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18564:3:12",
														"nodeType": "YulTypedName",
														"src": "18564:3:12",
														"type": ""
													}
												],
												"src": "18422:366:12"
											},
											{
												"body": {
													"nativeSrc": "18965:248:12",
													"nodeType": "YulBlock",
													"src": "18965:248:12",
													"statements": [
														{
															"nativeSrc": "18975:26:12",
															"nodeType": "YulAssignment",
															"src": "18975:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18987:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18987:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18983:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18983:3:12"
																},
																"nativeSrc": "18983:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18983:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18975:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18975:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19022:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19022:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19033:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19033:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19018:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19018:3:12"
																		},
																		"nativeSrc": "19018:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19018:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19041:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19041:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19047:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19047:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19037:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19037:3:12"
																		},
																		"nativeSrc": "19037:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19037:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19011:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19011:6:12"
																},
																"nativeSrc": "19011:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19011:47:12"
															},
															"nativeSrc": "19011:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19011:47:12"
														},
														{
															"nativeSrc": "19067:139:12",
															"nodeType": "YulAssignment",
															"src": "19067:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19201:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19201:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19075:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19075:124:12"
																},
																"nativeSrc": "19075:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19075:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19067:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19067:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18794:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18945:9:12",
														"nodeType": "YulTypedName",
														"src": "18945:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18960:4:12",
														"nodeType": "YulTypedName",
														"src": "18960:4:12",
														"type": ""
													}
												],
												"src": "18794:419:12"
											},
											{
												"body": {
													"nativeSrc": "19325:65:12",
													"nodeType": "YulBlock",
													"src": "19325:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19347:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19347:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19355:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19355:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19343:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19343:3:12"
																		},
																		"nativeSrc": "19343:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19343:14:12"
																	},
																	{
																		"hexValue": "4c697374696e6720686173206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "19359:23:12",
																		"nodeType": "YulLiteral",
																		"src": "19359:23:12",
																		"type": "",
																		"value": "Listing has not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19336:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19336:6:12"
																},
																"nativeSrc": "19336:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19336:47:12"
															},
															"nativeSrc": "19336:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19336:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
												"nativeSrc": "19219:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19317:6:12",
														"nodeType": "YulTypedName",
														"src": "19317:6:12",
														"type": ""
													}
												],
												"src": "19219:171:12"
											},
											{
												"body": {
													"nativeSrc": "19542:220:12",
													"nodeType": "YulBlock",
													"src": "19542:220:12",
													"statements": [
														{
															"nativeSrc": "19552:74:12",
															"nodeType": "YulAssignment",
															"src": "19552:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19618:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19618:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19623:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19623:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19559:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19559:58:12"
																},
																"nativeSrc": "19559:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19559:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19552:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19552:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19724:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19724:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																	"nativeSrc": "19635:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "19635:88:12"
																},
																"nativeSrc": "19635:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19635:93:12"
															},
															"nativeSrc": "19635:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "19635:93:12"
														},
														{
															"nativeSrc": "19737:19:12",
															"nodeType": "YulAssignment",
															"src": "19737:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19748:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19748:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19753:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19753:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19744:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19744:3:12"
																},
																"nativeSrc": "19744:12:12",
																"nodeType": "YulFunctionCall",
																"src": "19744:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19737:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19737:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19396:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19530:3:12",
														"nodeType": "YulTypedName",
														"src": "19530:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19538:3:12",
														"nodeType": "YulTypedName",
														"src": "19538:3:12",
														"type": ""
													}
												],
												"src": "19396:366:12"
											},
											{
												"body": {
													"nativeSrc": "19939:248:12",
													"nodeType": "YulBlock",
													"src": "19939:248:12",
													"statements": [
														{
															"nativeSrc": "19949:26:12",
															"nodeType": "YulAssignment",
															"src": "19949:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19961:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19961:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19972:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19972:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19957:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19957:3:12"
																},
																"nativeSrc": "19957:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19957:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19949:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19949:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19996:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19996:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20007:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20007:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19992:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19992:3:12"
																		},
																		"nativeSrc": "19992:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19992:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20015:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20015:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20021:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20021:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20011:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20011:3:12"
																		},
																		"nativeSrc": "20011:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20011:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19985:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19985:6:12"
																},
																"nativeSrc": "19985:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19985:47:12"
															},
															"nativeSrc": "19985:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19985:47:12"
														},
														{
															"nativeSrc": "20041:139:12",
															"nodeType": "YulAssignment",
															"src": "20041:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20175:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20175:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20049:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20049:124:12"
																},
																"nativeSrc": "20049:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20049:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20041:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20041:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19768:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19919:9:12",
														"nodeType": "YulTypedName",
														"src": "19919:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19934:4:12",
														"nodeType": "YulTypedName",
														"src": "19934:4:12",
														"type": ""
													}
												],
												"src": "19768:419:12"
											},
											{
												"body": {
													"nativeSrc": "20299:65:12",
													"nodeType": "YulBlock",
													"src": "20299:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "20321:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20329:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20329:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20317:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20317:3:12"
																		},
																		"nativeSrc": "20317:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20317:14:12"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "20333:23:12",
																		"nodeType": "YulLiteral",
																		"src": "20333:23:12",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20310:6:12"
																},
																"nativeSrc": "20310:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20310:47:12"
															},
															"nativeSrc": "20310:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20310:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "20193:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20291:6:12",
														"nodeType": "YulTypedName",
														"src": "20291:6:12",
														"type": ""
													}
												],
												"src": "20193:171:12"
											},
											{
												"body": {
													"nativeSrc": "20516:220:12",
													"nodeType": "YulBlock",
													"src": "20516:220:12",
													"statements": [
														{
															"nativeSrc": "20526:74:12",
															"nodeType": "YulAssignment",
															"src": "20526:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20592:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20592:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20597:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20597:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20533:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "20533:58:12"
																},
																"nativeSrc": "20533:67:12",
																"nodeType": "YulFunctionCall",
																"src": "20533:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20526:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20526:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20698:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20698:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "20609:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20609:88:12"
																},
																"nativeSrc": "20609:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20609:93:12"
															},
															"nativeSrc": "20609:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20609:93:12"
														},
														{
															"nativeSrc": "20711:19:12",
															"nodeType": "YulAssignment",
															"src": "20711:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20722:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20722:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20727:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20727:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20718:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20718:3:12"
																},
																"nativeSrc": "20718:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20718:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20711:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20370:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20504:3:12",
														"nodeType": "YulTypedName",
														"src": "20504:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20512:3:12",
														"nodeType": "YulTypedName",
														"src": "20512:3:12",
														"type": ""
													}
												],
												"src": "20370:366:12"
											},
											{
												"body": {
													"nativeSrc": "20913:248:12",
													"nodeType": "YulBlock",
													"src": "20913:248:12",
													"statements": [
														{
															"nativeSrc": "20923:26:12",
															"nodeType": "YulAssignment",
															"src": "20923:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20935:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20935:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20946:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20946:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20931:3:12"
																},
																"nativeSrc": "20931:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20931:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20923:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20923:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20970:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20970:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20981:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20981:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20966:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20966:3:12"
																		},
																		"nativeSrc": "20966:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20966:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20989:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20989:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20995:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20995:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20985:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20985:3:12"
																		},
																		"nativeSrc": "20985:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20985:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20959:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20959:6:12"
																},
																"nativeSrc": "20959:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20959:47:12"
															},
															"nativeSrc": "20959:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20959:47:12"
														},
														{
															"nativeSrc": "21015:139:12",
															"nodeType": "YulAssignment",
															"src": "21015:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21149:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21149:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21023:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21023:124:12"
																},
																"nativeSrc": "21023:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21023:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21015:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21015:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20742:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20893:9:12",
														"nodeType": "YulTypedName",
														"src": "20893:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20908:4:12",
														"nodeType": "YulTypedName",
														"src": "20908:4:12",
														"type": ""
													}
												],
												"src": "20742:419:12"
											},
											{
												"body": {
													"nativeSrc": "21321:288:12",
													"nodeType": "YulBlock",
													"src": "21321:288:12",
													"statements": [
														{
															"nativeSrc": "21331:26:12",
															"nodeType": "YulAssignment",
															"src": "21331:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21343:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21343:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21354:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21354:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21339:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21339:3:12"
																},
																"nativeSrc": "21339:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21339:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21331:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21331:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21411:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21411:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21424:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21424:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21435:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21435:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21420:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21420:3:12"
																		},
																		"nativeSrc": "21420:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21420:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21367:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21367:43:12"
																},
																"nativeSrc": "21367:71:12",
																"nodeType": "YulFunctionCall",
																"src": "21367:71:12"
															},
															"nativeSrc": "21367:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "21367:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21492:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21492:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21505:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21505:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21516:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21516:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21501:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21501:3:12"
																		},
																		"nativeSrc": "21501:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21501:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21448:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21448:43:12"
																},
																"nativeSrc": "21448:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21448:72:12"
															},
															"nativeSrc": "21448:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21448:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21574:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21574:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21587:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21587:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21598:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21598:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21583:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21583:3:12"
																		},
																		"nativeSrc": "21583:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21583:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21530:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21530:43:12"
																},
																"nativeSrc": "21530:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21530:72:12"
															},
															"nativeSrc": "21530:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21530:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21167:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21277:9:12",
														"nodeType": "YulTypedName",
														"src": "21277:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21289:6:12",
														"nodeType": "YulTypedName",
														"src": "21289:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21297:6:12",
														"nodeType": "YulTypedName",
														"src": "21297:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21305:6:12",
														"nodeType": "YulTypedName",
														"src": "21305:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21316:4:12",
														"nodeType": "YulTypedName",
														"src": "21316:4:12",
														"type": ""
													}
												],
												"src": "21167:442:12"
											},
											{
												"body": {
													"nativeSrc": "21741:206:12",
													"nodeType": "YulBlock",
													"src": "21741:206:12",
													"statements": [
														{
															"nativeSrc": "21751:26:12",
															"nodeType": "YulAssignment",
															"src": "21751:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21763:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21763:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21774:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21774:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21759:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21759:3:12"
																},
																"nativeSrc": "21759:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21759:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21751:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21751:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21831:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21831:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21844:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21844:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21855:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21855:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21840:3:12"
																		},
																		"nativeSrc": "21840:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21840:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21787:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21787:43:12"
																},
																"nativeSrc": "21787:71:12",
																"nodeType": "YulFunctionCall",
																"src": "21787:71:12"
															},
															"nativeSrc": "21787:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "21787:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21912:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "21912:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21925:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21925:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21936:2:12",
																				"nodeType": "YulLiteral",
																				"src": "21936:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21921:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21921:3:12"
																		},
																		"nativeSrc": "21921:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21921:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21868:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "21868:43:12"
																},
																"nativeSrc": "21868:72:12",
																"nodeType": "YulFunctionCall",
																"src": "21868:72:12"
															},
															"nativeSrc": "21868:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "21868:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21615:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21705:9:12",
														"nodeType": "YulTypedName",
														"src": "21705:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21717:6:12",
														"nodeType": "YulTypedName",
														"src": "21717:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21725:6:12",
														"nodeType": "YulTypedName",
														"src": "21725:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21736:4:12",
														"nodeType": "YulTypedName",
														"src": "21736:4:12",
														"type": ""
													}
												],
												"src": "21615:332:12"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing has expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens in listing\")\n\n    }\n\n    function abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid contract address\")\n\n    }\n\n    function abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only listing seller can withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing has not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80637a82a87f116100595780637a82a87f146100d95780639ffae41b146100f5578063de74e57b14610111578063f25713bf146101455761007b565b806317c73ff01461007f5780631bf1de9b1461009d5780636c2c9c7d146100bb575b5f5ffd5b610087610161565b6040516100949190610d28565b60405180910390f35b6100a5610179565b6040516100b29190610d59565b60405180910390f35b6100c361017e565b6040516100d09190610d59565b60405180910390f35b6100f360048036038101906100ee9190610dca565b610184565b005b61010f600480360381019061010a9190610e2e565b610514565b005b61012b60048036038101906101269190610e92565b6108e7565b60405161013c959493929190610ebd565b60405180910390f35b61015f600480360381019061015a9190610e92565b610957565b005b73fcf8d2b098b3160654bbada1a8769483c71c288b81565b600a81565b60025481565b61018c610b00565b5f60015f8681526020019081526020015f2090505f8160020154116101e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101dd90610f68565b60405180910390fd5b806004015442111561022d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022490610fd0565b60405180910390fd5b8381600201541015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90611038565b60405180910390fd5b5f8482600101546102859190611083565b90505f6064600a836102979190611083565b6102a191906110f1565b90505f81836102b09190611121565b90508085146102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb9061119e565b60405180910390fd5b5f869050858173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016103349291906111bc565b602060405180830381865afa15801561034f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037391906111f7565b10156103b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ab9061126c565b60405180910390fd5b6103f53373fcf8d2b098b3160654bbada1a8769483c71c288b858473ffffffffffffffffffffffffffffffffffffffff16610b44909392919063ffffffff16565b61044533866003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868473ffffffffffffffffffffffffffffffffffffffff16610b44909392919063ffffffff16565b87856002015f828254610458919061128a565b925050819055506104ac3389875f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610bc69092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fdca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf58a8a8760016040516104f994939291906112d7565b60405180910390a2505050505061050e610c45565b50505050565b5f8411610556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054d90611364565b60405180910390fd5b5f8211610598576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058f906113cc565b60405180910390fd5b5f81116105da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d19061145a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f906114c2565b60405180910390fd5b5f839050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b81526004016106889291906111bc565b602060405180830381865afa1580156106a3573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c791906111f7565b1015610708576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ff9061152a565b60405180910390fd5b6107353330858473ffffffffffffffffffffffffffffffffffffffff16610b44909392919063ffffffff16565b60025f81548092919061074790611548565b91905055506040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183426107a79190611121565b81525060015f60025481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b600254888787426108c89190611121565b6040516108d8949392919061158f565b60405180910390a35050505050565b6001602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b61095f610b00565b5f60015f8381526020019081526020015f209050806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a04576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fb9061161c565b60405180910390fd5b80600401544211610a4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4190611684565b60405180910390fd5b5f816002015411610a90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a87906116ec565b60405180910390fd5b5f816002015490505f82600201819055505f825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610af233838373ffffffffffffffffffffffffffffffffffffffff16610bc69092919063ffffffff16565b505050610afd610c45565b50565b60025f5403610b3b576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b610bc0848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610b799392919061170a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c4e565b50505050565b610c40838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610bf992919061173f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c4e565b505050565b60015f81905550565b5f5f60205f8451602086015f885af180610c6d576040513d5f823e3d81fd5b3d92505f519150505f8214610c86576001811415610ca1565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15610ce357836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610cda9190610d28565b60405180910390fd5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610d1282610ce9565b9050919050565b610d2281610d08565b82525050565b5f602082019050610d3b5f830184610d19565b92915050565b5f819050919050565b610d5381610d41565b82525050565b5f602082019050610d6c5f830184610d4a565b92915050565b5f5ffd5b610d7f81610d41565b8114610d89575f5ffd5b50565b5f81359050610d9a81610d76565b92915050565b610da981610d08565b8114610db3575f5ffd5b50565b5f81359050610dc481610da0565b92915050565b5f5f5f5f60808587031215610de257610de1610d72565b5b5f610def87828801610d8c565b9450506020610e0087828801610d8c565b9350506040610e1187828801610db6565b9250506060610e2287828801610d8c565b91505092959194509250565b5f5f5f5f60808587031215610e4657610e45610d72565b5b5f610e5387828801610d8c565b9450506020610e6487828801610db6565b9350506040610e7587828801610d8c565b9250506060610e8687828801610d8c565b91505092959194509250565b5f60208284031215610ea757610ea6610d72565b5b5f610eb484828501610d8c565b91505092915050565b5f60a082019050610ed05f830188610d19565b610edd6020830187610d4a565b610eea6040830186610d4a565b610ef76060830185610d19565b610f046080830184610d4a565b9695505050505050565b5f82825260208201905092915050565b7f4c697374696e6720646f6573206e6f74206578697374000000000000000000005f82015250565b5f610f52601683610f0e565b9150610f5d82610f1e565b602082019050919050565b5f6020820190508181035f830152610f7f81610f46565b9050919050565b7f4c697374696e67206861732065787069726564000000000000000000000000005f82015250565b5f610fba601383610f0e565b9150610fc582610f86565b602082019050919050565b5f6020820190508181035f830152610fe781610fae565b9050919050565b7f4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67000000005f82015250565b5f611022601c83610f0e565b915061102d82610fee565b602082019050919050565b5f6020820190508181035f83015261104f81611016565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61108d82610d41565b915061109883610d41565b92508282026110a681610d41565b915082820484148315176110bd576110bc611056565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6110fb82610d41565b915061110683610d41565b925082611116576111156110c4565b5b828204905092915050565b5f61112b82610d41565b915061113683610d41565b925082820190508082111561114e5761114d611056565b5b92915050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f611188601883610f0e565b915061119382611154565b602082019050919050565b5f6020820190508181035f8301526111b58161117c565b9050919050565b5f6040820190506111cf5f830185610d19565b6111dc6020830184610d19565b9392505050565b5f815190506111f181610d76565b92915050565b5f6020828403121561120c5761120b610d72565b5b5f611219848285016111e3565b91505092915050565b7f5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77005f82015250565b5f611256601f83610f0e565b915061126182611222565b602082019050919050565b5f6020820190508181035f8301526112838161124a565b9050919050565b5f61129482610d41565b915061129f83610d41565b92508282039050818111156112b7576112b6611056565b5b92915050565b5f8115159050919050565b6112d1816112bd565b82525050565b5f6080820190506112ea5f830187610d4a565b6112f76020830186610d4a565b6113046040830185610d4a565b61131160608301846112c8565b95945050505050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f61134e601f83610f0e565b91506113598261131a565b602082019050919050565b5f6020820190508181035f83015261137b81611342565b9050919050565b7f546f6b656e73206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f6113b6602083610f0e565b91506113c182611382565b602082019050919050565b5f6020820190508181035f8301526113e3816113aa565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f611444602283610f0e565b915061144f826113ea565b604082019050919050565b5f6020820190508181035f83015261147181611438565b9050919050565b7f496e76616c696420636f6e7472616374206164647265737300000000000000005f82015250565b5f6114ac601883610f0e565b91506114b782611478565b602082019050919050565b5f6020820190508181035f8301526114d9816114a0565b9050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f770000000000000000005f82015250565b5f611514601783610f0e565b915061151f826114e0565b602082019050919050565b5f6020820190508181035f83015261154181611508565b9050919050565b5f61155282610d41565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361158457611583611056565b5b600182019050919050565b5f6080820190506115a25f830187610d4a565b6115af6020830186610d4a565b6115bc6040830185610d4a565b6115c96060830184610d4a565b95945050505050565b7f4f6e6c79206c697374696e672073656c6c65722063616e2077697468647261775f82015250565b5f611606602083610f0e565b9150611611826115d2565b602082019050919050565b5f6020820190508181035f830152611633816115fa565b9050919050565b7f4c697374696e6720686173206e6f7420656e64656400000000000000000000005f82015250565b5f61166e601583610f0e565b91506116798261163a565b602082019050919050565b5f6020820190508181035f83015261169b81611662565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f6116d6601583610f0e565b91506116e1826116a2565b602082019050919050565b5f6020820190508181035f830152611703816116ca565b9050919050565b5f60608201905061171d5f830186610d19565b61172a6020830185610d19565b6117376040830184610d4a565b949350505050565b5f6040820190506117525f830185610d19565b61175f6020830184610d4a565b939250505056fea26469706673582212207ade803c48215fba5856bee89e2abd1b054679d1faad224200c4f91e5a00fe7864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A82A87F GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7A82A87F EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0xF25713BF EQ PUSH2 0x145 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0x7F JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0xBB JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x87 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x94 SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA5 PUSH2 0x179 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC3 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0xD59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEE SWAP2 SWAP1 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0x184 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x10F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10A SWAP2 SWAP1 PUSH2 0xE2E JUMP JUMPDEST PUSH2 0x514 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x12B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x8E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0xE92 JUMP JUMPDEST PUSH2 0x957 JUMP JUMPDEST STOP JUMPDEST PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C PUSH2 0xB00 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x1E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD SWAP1 PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x22D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x224 SWAP1 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26B SWAP1 PUSH2 0x1038 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP7 SWAP1 POP DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x334 SWAP3 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x34F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST LT ISZERO PUSH2 0x3B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AB SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F5 CALLER PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x445 CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP8 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x128A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4AC CALLER DUP10 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5 DUP11 DUP11 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x50E PUSH2 0xC45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54D SWAP1 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x598 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58F SWAP1 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D1 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63F SWAP1 PUSH2 0x14C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x688 SWAP3 SWAP2 SWAP1 PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x11F7 JUMP JUMPDEST LT ISZERO PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FF SWAP1 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x735 CALLER ADDRESS DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB44 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x747 SWAP1 PUSH2 0x1548 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x1 PUSH0 PUSH1 0x2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B PUSH1 0x2 SLOAD DUP9 DUP8 DUP8 TIMESTAMP PUSH2 0x8C8 SWAP2 SWAP1 PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0x95F PUSH2 0xB00 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FB SWAP1 PUSH2 0x161C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0xA4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA41 SWAP1 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xA90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA87 SWAP1 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xAF2 CALLER DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBC6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0xAFD PUSH2 0xC45 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xB3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBC0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xB79 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x170A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC4E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xC40 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xBF9 SWAP3 SWAP2 SWAP1 PUSH2 0x173F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xC4E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0xC6D JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0xC86 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0xCA1 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0xCE3 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDA SWAP2 SWAP1 PUSH2 0xD28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD12 DUP3 PUSH2 0xCE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD22 DUP2 PUSH2 0xD08 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD3B PUSH0 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD53 DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xD6C PUSH0 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xD7F DUP2 PUSH2 0xD41 JUMP JUMPDEST DUP2 EQ PUSH2 0xD89 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xD9A DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xDA9 DUP2 PUSH2 0xD08 JUMP JUMPDEST DUP2 EQ PUSH2 0xDB3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC4 DUP2 PUSH2 0xDA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDEF DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE00 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE11 DUP8 DUP3 DUP9 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE22 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xE53 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0xE64 DUP8 DUP3 DUP9 ADD PUSH2 0xDB6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0xE75 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0xE86 DUP8 DUP3 DUP9 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA7 JUMPI PUSH2 0xEA6 PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xEB4 DUP5 DUP3 DUP6 ADD PUSH2 0xD8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xED0 PUSH0 DUP4 ADD DUP9 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xEDD PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xEEA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0xEF7 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0xF04 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xF52 PUSH1 0x16 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xF5D DUP3 PUSH2 0xF1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF7F DUP2 PUSH2 0xF46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA PUSH1 0x13 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0xFC5 DUP3 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xFE7 DUP2 PUSH2 0xFAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1022 PUSH1 0x1C DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x102D DUP3 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x104F DUP2 PUSH2 0x1016 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x108D DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1098 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x10A6 DUP2 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x10BD JUMPI PUSH2 0x10BC PUSH2 0x1056 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x10FB DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1106 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1116 JUMPI PUSH2 0x1115 PUSH2 0x10C4 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x112B DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x1136 DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x114E JUMPI PUSH2 0x114D PUSH2 0x1056 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1188 PUSH1 0x18 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1193 DUP3 PUSH2 0x1154 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x11B5 DUP2 PUSH2 0x117C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x11CF PUSH0 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x11DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD19 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x11F1 DUP2 PUSH2 0xD76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120C JUMPI PUSH2 0x120B PUSH2 0xD72 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1219 DUP5 DUP3 DUP6 ADD PUSH2 0x11E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1256 PUSH1 0x1F DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1261 DUP3 PUSH2 0x1222 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1283 DUP2 PUSH2 0x124A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1294 DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH2 0x129F DUP4 PUSH2 0xD41 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x12B7 JUMPI PUSH2 0x12B6 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D1 DUP2 PUSH2 0x12BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x12EA PUSH0 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x12F7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x1304 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x1311 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x12C8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x134E PUSH1 0x1F DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1359 DUP3 PUSH2 0x131A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x137B DUP2 PUSH2 0x1342 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13B6 PUSH1 0x20 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x13C1 DUP3 PUSH2 0x1382 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13E3 DUP2 PUSH2 0x13AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH1 0x22 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x144F DUP3 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1471 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14AC PUSH1 0x18 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x14B7 DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14D9 DUP2 PUSH2 0x14A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1514 PUSH1 0x17 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x151F DUP3 PUSH2 0x14E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1541 DUP2 PUSH2 0x1508 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1552 DUP3 PUSH2 0xD41 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1584 JUMPI PUSH2 0x1583 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x15A2 PUSH0 DUP4 ADD DUP8 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15AF PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15BC PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD4A JUMP JUMPDEST PUSH2 0x15C9 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1606 PUSH1 0x20 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1611 DUP3 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1633 DUP2 PUSH2 0x15FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x166E PUSH1 0x15 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP3 PUSH2 0x163A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x169B DUP2 PUSH2 0x1662 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x16D6 PUSH1 0x15 DUP4 PUSH2 0xF0E JUMP JUMPDEST SWAP2 POP PUSH2 0x16E1 DUP3 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1703 DUP2 PUSH2 0x16CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x171D PUSH0 DUP4 ADD DUP7 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x172A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x1737 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH0 DUP4 ADD DUP6 PUSH2 0xD19 JUMP JUMPDEST PUSH2 0x175F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD4A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0xDE803C48215FBA5856BEE89E2ABD1B054679D1FAAD224200C4F91E GAS STOP INVALID PUSH25 0x64736F6C634300081C00330000000000000000000000000000 ",
							"sourceMap": "241:3574:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;564:86;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;656:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;529:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1971:1269;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;986:979;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;480:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3246:566;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;564:86;608:42;564:86;:::o;656:50::-;704:2;656:50;:::o;529:29::-;;;;:::o;1971:1269::-;2500:21:9;:19;:21::i;:::-;2154:23:11::1;2180:8;:19;2189:9;2180:19;;;;;;;;;;;2154:45;;2234:1;2217:7;:14;;;:18;2209:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2299:7;:18;;;2280:15;:37;;2272:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2377:11;2359:7;:14;;;:29;;2351:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2432:18;2469:11;2453:7;:13;;;:27;;;;:::i;:::-;2432:48;;2490:18;2550:3;704:2;2512:10;:34;;;;:::i;:::-;2511:42;;;;:::i;:::-;2490:63;;2563:26;2605:10;2592;:23;;;;:::i;:::-;2563:52;;2650:18;2633:13;:35;2625:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2708:18;2735:12;2708:40;;2819:13;2766:12;:22;;;2789:10;2809:4;2766:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;2758:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;2879:72;2909:10;608:42;2940:10;2879:12;:29;;;;:72;;;;;;:::i;:::-;2961:69;2991:10;3003:7;:14;;;;;;;;;;;;3019:10;2961:12;:29;;;;:69;;;;;;:::i;:::-;3059:11;3041:7;:14;;;:29;;;;;;;:::i;:::-;;;;;;;;3080:68;3124:10;3136:11;3086:7;:23;;;;;;;;;;;;3080:43;;;;:68;;;;;:::i;:::-;3191:10;3164:69;;;3180:9;3203:11;3216:10;3228:4;3164:69;;;;;;;;;:::i;:::-;;;;;;;;2144:1096;;;;;2542:20:9::0;:18;:20::i;:::-;1971:1269:11;;;;:::o;986:979::-;1115:1;1107:5;:9;1099:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1179:1;1170:6;:10;1162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1246:1;1235:8;:12;1227:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1331:1;1304:29;;:15;:29;;;1296:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1373:11;1393:15;1373:36;;1473:6;1427:5;:15;;;1443:10;1463:4;1427:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1419:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1518:57;1541:10;1561:4;1568:6;1518:5;:22;;;;:57;;;;;;:::i;:::-;1586:14;;:16;;;;;;;;;:::i;:::-;;;;;;1639:203;;;;;;;;1678:15;1639:203;;;;;;1714:5;1639:203;;;;1741:6;1639:203;;;;1769:10;1639:203;;;;;;1823:8;1805:15;:26;;;;:::i;:::-;1639:203;;;1612:8;:24;1621:14;;1612:24;;;;;;;;;;;:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:15;1858:100;;1887:10;1858:100;;;1871:14;;1916:5;1923:6;1949:8;1931:15;:26;;;;:::i;:::-;1858:100;;;;;;;;;:::i;:::-;;;;;;;;1089:876;986:979;;;;:::o;480:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3246:566::-;2500:21:9;:19;:21::i;:::-;3332:23:11::1;3358:8;:19;3367:9;3358:19;;;;;;;;;;;3332:45;;3409:7;:14;;;;;;;;;;;;3395:28;;:10;:28;;;3387:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3496:7;:18;;;3478:15;:36;3470:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3575:1;3558:7;:14;;;:18;3550:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3613:29;3645:7;:14;;;3613:46;;3686:1;3669:7;:14;;:18;;;;3698:11;3718:7;:23;;;;;;;;;;;;3698:44;;3752:53;3771:10;3783:21;3752:5;:18;;;;:53;;;;;:::i;:::-;3322:490;;;2542:20:9::0;:18;:20::i;:::-;3246:566:11;:::o;2575:307:9:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2888:208:9:-;1857:1;3068:7;:21;;;;2888:208::o;7686:720:7:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;7:126:12:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:122::-;1701:24;1719:5;1701:24;:::i;:::-;1694:5;1691:35;1681:63;;1740:1;1737;1730:12;1681:63;1628:122;:::o;1756:139::-;1802:5;1840:6;1827:20;1818:29;;1856:33;1883:5;1856:33;:::i;:::-;1756:139;;;;:::o;1901:765::-;1987:6;1995;2003;2011;2060:3;2048:9;2039:7;2035:23;2031:33;2028:120;;;2067:79;;:::i;:::-;2028:120;2187:1;2212:53;2257:7;2248:6;2237:9;2233:22;2212:53;:::i;:::-;2202:63;;2158:117;2314:2;2340:53;2385:7;2376:6;2365:9;2361:22;2340:53;:::i;:::-;2330:63;;2285:118;2442:2;2468:53;2513:7;2504:6;2493:9;2489:22;2468:53;:::i;:::-;2458:63;;2413:118;2570:2;2596:53;2641:7;2632:6;2621:9;2617:22;2596:53;:::i;:::-;2586:63;;2541:118;1901:765;;;;;;;:::o;2672:::-;2758:6;2766;2774;2782;2831:3;2819:9;2810:7;2806:23;2802:33;2799:120;;;2838:79;;:::i;:::-;2799:120;2958:1;2983:53;3028:7;3019:6;3008:9;3004:22;2983:53;:::i;:::-;2973:63;;2929:117;3085:2;3111:53;3156:7;3147:6;3136:9;3132:22;3111:53;:::i;:::-;3101:63;;3056:118;3213:2;3239:53;3284:7;3275:6;3264:9;3260:22;3239:53;:::i;:::-;3229:63;;3184:118;3341:2;3367:53;3412:7;3403:6;3392:9;3388:22;3367:53;:::i;:::-;3357:63;;3312:118;2672:765;;;;;;;:::o;3443:329::-;3502:6;3551:2;3539:9;3530:7;3526:23;3522:32;3519:119;;;3557:79;;:::i;:::-;3519:119;3677:1;3702:53;3747:7;3738:6;3727:9;3723:22;3702:53;:::i;:::-;3692:63;;3648:117;3443:329;;;;:::o;3778:664::-;3983:4;4021:3;4010:9;4006:19;3998:27;;4035:71;4103:1;4092:9;4088:17;4079:6;4035:71;:::i;:::-;4116:72;4184:2;4173:9;4169:18;4160:6;4116:72;:::i;:::-;4198;4266:2;4255:9;4251:18;4242:6;4198:72;:::i;:::-;4280;4348:2;4337:9;4333:18;4324:6;4280:72;:::i;:::-;4362:73;4430:3;4419:9;4415:19;4406:6;4362:73;:::i;:::-;3778:664;;;;;;;;:::o;4448:169::-;4532:11;4566:6;4561:3;4554:19;4606:4;4601:3;4597:14;4582:29;;4448:169;;;;:::o;4623:172::-;4763:24;4759:1;4751:6;4747:14;4740:48;4623:172;:::o;4801:366::-;4943:3;4964:67;5028:2;5023:3;4964:67;:::i;:::-;4957:74;;5040:93;5129:3;5040:93;:::i;:::-;5158:2;5153:3;5149:12;5142:19;;4801:366;;;:::o;5173:419::-;5339:4;5377:2;5366:9;5362:18;5354:26;;5426:9;5420:4;5416:20;5412:1;5401:9;5397:17;5390:47;5454:131;5580:4;5454:131;:::i;:::-;5446:139;;5173:419;;;:::o;5598:169::-;5738:21;5734:1;5726:6;5722:14;5715:45;5598:169;:::o;5773:366::-;5915:3;5936:67;6000:2;5995:3;5936:67;:::i;:::-;5929:74;;6012:93;6101:3;6012:93;:::i;:::-;6130:2;6125:3;6121:12;6114:19;;5773:366;;;:::o;6145:419::-;6311:4;6349:2;6338:9;6334:18;6326:26;;6398:9;6392:4;6388:20;6384:1;6373:9;6369:17;6362:47;6426:131;6552:4;6426:131;:::i;:::-;6418:139;;6145:419;;;:::o;6570:178::-;6710:30;6706:1;6698:6;6694:14;6687:54;6570:178;:::o;6754:366::-;6896:3;6917:67;6981:2;6976:3;6917:67;:::i;:::-;6910:74;;6993:93;7082:3;6993:93;:::i;:::-;7111:2;7106:3;7102:12;7095:19;;6754:366;;;:::o;7126:419::-;7292:4;7330:2;7319:9;7315:18;7307:26;;7379:9;7373:4;7369:20;7365:1;7354:9;7350:17;7343:47;7407:131;7533:4;7407:131;:::i;:::-;7399:139;;7126:419;;;:::o;7551:180::-;7599:77;7596:1;7589:88;7696:4;7693:1;7686:15;7720:4;7717:1;7710:15;7737:410;7777:7;7800:20;7818:1;7800:20;:::i;:::-;7795:25;;7834:20;7852:1;7834:20;:::i;:::-;7829:25;;7889:1;7886;7882:9;7911:30;7929:11;7911:30;:::i;:::-;7900:41;;8090:1;8081:7;8077:15;8074:1;8071:22;8051:1;8044:9;8024:83;8001:139;;8120:18;;:::i;:::-;8001:139;7785:362;7737:410;;;;:::o;8153:180::-;8201:77;8198:1;8191:88;8298:4;8295:1;8288:15;8322:4;8319:1;8312:15;8339:185;8379:1;8396:20;8414:1;8396:20;:::i;:::-;8391:25;;8430:20;8448:1;8430:20;:::i;:::-;8425:25;;8469:1;8459:35;;8474:18;;:::i;:::-;8459:35;8516:1;8513;8509:9;8504:14;;8339:185;;;;:::o;8530:191::-;8570:3;8589:20;8607:1;8589:20;:::i;:::-;8584:25;;8623:20;8641:1;8623:20;:::i;:::-;8618:25;;8666:1;8663;8659:9;8652:16;;8687:3;8684:1;8681:10;8678:36;;;8694:18;;:::i;:::-;8678:36;8530:191;;;;:::o;8727:174::-;8867:26;8863:1;8855:6;8851:14;8844:50;8727:174;:::o;8907:366::-;9049:3;9070:67;9134:2;9129:3;9070:67;:::i;:::-;9063:74;;9146:93;9235:3;9146:93;:::i;:::-;9264:2;9259:3;9255:12;9248:19;;8907:366;;;:::o;9279:419::-;9445:4;9483:2;9472:9;9468:18;9460:26;;9532:9;9526:4;9522:20;9518:1;9507:9;9503:17;9496:47;9560:131;9686:4;9560:131;:::i;:::-;9552:139;;9279:419;;;:::o;9704:332::-;9825:4;9863:2;9852:9;9848:18;9840:26;;9876:71;9944:1;9933:9;9929:17;9920:6;9876:71;:::i;:::-;9957:72;10025:2;10014:9;10010:18;10001:6;9957:72;:::i;:::-;9704:332;;;;;:::o;10042:143::-;10099:5;10130:6;10124:13;10115:22;;10146:33;10173:5;10146:33;:::i;:::-;10042:143;;;;:::o;10191:351::-;10261:6;10310:2;10298:9;10289:7;10285:23;10281:32;10278:119;;;10316:79;;:::i;:::-;10278:119;10436:1;10461:64;10517:7;10508:6;10497:9;10493:22;10461:64;:::i;:::-;10451:74;;10407:128;10191:351;;;;:::o;10548:181::-;10688:33;10684:1;10676:6;10672:14;10665:57;10548:181;:::o;10735:366::-;10877:3;10898:67;10962:2;10957:3;10898:67;:::i;:::-;10891:74;;10974:93;11063:3;10974:93;:::i;:::-;11092:2;11087:3;11083:12;11076:19;;10735:366;;;:::o;11107:419::-;11273:4;11311:2;11300:9;11296:18;11288:26;;11360:9;11354:4;11350:20;11346:1;11335:9;11331:17;11324:47;11388:131;11514:4;11388:131;:::i;:::-;11380:139;;11107:419;;;:::o;11532:194::-;11572:4;11592:20;11610:1;11592:20;:::i;:::-;11587:25;;11626:20;11644:1;11626:20;:::i;:::-;11621:25;;11670:1;11667;11663:9;11655:17;;11694:1;11688:4;11685:11;11682:37;;;11699:18;;:::i;:::-;11682:37;11532:194;;;;:::o;11732:90::-;11766:7;11809:5;11802:13;11795:21;11784:32;;11732:90;;;:::o;11828:109::-;11909:21;11924:5;11909:21;:::i;:::-;11904:3;11897:34;11828:109;;:::o;11943:541::-;12114:4;12152:3;12141:9;12137:19;12129:27;;12166:71;12234:1;12223:9;12219:17;12210:6;12166:71;:::i;:::-;12247:72;12315:2;12304:9;12300:18;12291:6;12247:72;:::i;:::-;12329;12397:2;12386:9;12382:18;12373:6;12329:72;:::i;:::-;12411:66;12473:2;12462:9;12458:18;12449:6;12411:66;:::i;:::-;11943:541;;;;;;;:::o;12490:181::-;12630:33;12626:1;12618:6;12614:14;12607:57;12490:181;:::o;12677:366::-;12819:3;12840:67;12904:2;12899:3;12840:67;:::i;:::-;12833:74;;12916:93;13005:3;12916:93;:::i;:::-;13034:2;13029:3;13025:12;13018:19;;12677:366;;;:::o;13049:419::-;13215:4;13253:2;13242:9;13238:18;13230:26;;13302:9;13296:4;13292:20;13288:1;13277:9;13273:17;13266:47;13330:131;13456:4;13330:131;:::i;:::-;13322:139;;13049:419;;;:::o;13474:182::-;13614:34;13610:1;13602:6;13598:14;13591:58;13474:182;:::o;13662:366::-;13804:3;13825:67;13889:2;13884:3;13825:67;:::i;:::-;13818:74;;13901:93;13990:3;13901:93;:::i;:::-;14019:2;14014:3;14010:12;14003:19;;13662:366;;;:::o;14034:419::-;14200:4;14238:2;14227:9;14223:18;14215:26;;14287:9;14281:4;14277:20;14273:1;14262:9;14258:17;14251:47;14315:131;14441:4;14315:131;:::i;:::-;14307:139;;14034:419;;;:::o;14459:221::-;14599:34;14595:1;14587:6;14583:14;14576:58;14668:4;14663:2;14655:6;14651:15;14644:29;14459:221;:::o;14686:366::-;14828:3;14849:67;14913:2;14908:3;14849:67;:::i;:::-;14842:74;;14925:93;15014:3;14925:93;:::i;:::-;15043:2;15038:3;15034:12;15027:19;;14686:366;;;:::o;15058:419::-;15224:4;15262:2;15251:9;15247:18;15239:26;;15311:9;15305:4;15301:20;15297:1;15286:9;15282:17;15275:47;15339:131;15465:4;15339:131;:::i;:::-;15331:139;;15058:419;;;:::o;15483:174::-;15623:26;15619:1;15611:6;15607:14;15600:50;15483:174;:::o;15663:366::-;15805:3;15826:67;15890:2;15885:3;15826:67;:::i;:::-;15819:74;;15902:93;15991:3;15902:93;:::i;:::-;16020:2;16015:3;16011:12;16004:19;;15663:366;;;:::o;16035:419::-;16201:4;16239:2;16228:9;16224:18;16216:26;;16288:9;16282:4;16278:20;16274:1;16263:9;16259:17;16252:47;16316:131;16442:4;16316:131;:::i;:::-;16308:139;;16035:419;;;:::o;16460:173::-;16600:25;16596:1;16588:6;16584:14;16577:49;16460:173;:::o;16639:366::-;16781:3;16802:67;16866:2;16861:3;16802:67;:::i;:::-;16795:74;;16878:93;16967:3;16878:93;:::i;:::-;16996:2;16991:3;16987:12;16980:19;;16639:366;;;:::o;17011:419::-;17177:4;17215:2;17204:9;17200:18;17192:26;;17264:9;17258:4;17254:20;17250:1;17239:9;17235:17;17228:47;17292:131;17418:4;17292:131;:::i;:::-;17284:139;;17011:419;;;:::o;17436:233::-;17475:3;17498:24;17516:5;17498:24;:::i;:::-;17489:33;;17544:66;17537:5;17534:77;17531:103;;17614:18;;:::i;:::-;17531:103;17661:1;17654:5;17650:13;17643:20;;17436:233;;;:::o;17675:553::-;17852:4;17890:3;17879:9;17875:19;17867:27;;17904:71;17972:1;17961:9;17957:17;17948:6;17904:71;:::i;:::-;17985:72;18053:2;18042:9;18038:18;18029:6;17985:72;:::i;:::-;18067;18135:2;18124:9;18120:18;18111:6;18067:72;:::i;:::-;18149;18217:2;18206:9;18202:18;18193:6;18149:72;:::i;:::-;17675:553;;;;;;;:::o;18234:182::-;18374:34;18370:1;18362:6;18358:14;18351:58;18234:182;:::o;18422:366::-;18564:3;18585:67;18649:2;18644:3;18585:67;:::i;:::-;18578:74;;18661:93;18750:3;18661:93;:::i;:::-;18779:2;18774:3;18770:12;18763:19;;18422:366;;;:::o;18794:419::-;18960:4;18998:2;18987:9;18983:18;18975:26;;19047:9;19041:4;19037:20;19033:1;19022:9;19018:17;19011:47;19075:131;19201:4;19075:131;:::i;:::-;19067:139;;18794:419;;;:::o;19219:171::-;19359:23;19355:1;19347:6;19343:14;19336:47;19219:171;:::o;19396:366::-;19538:3;19559:67;19623:2;19618:3;19559:67;:::i;:::-;19552:74;;19635:93;19724:3;19635:93;:::i;:::-;19753:2;19748:3;19744:12;19737:19;;19396:366;;;:::o;19768:419::-;19934:4;19972:2;19961:9;19957:18;19949:26;;20021:9;20015:4;20011:20;20007:1;19996:9;19992:17;19985:47;20049:131;20175:4;20049:131;:::i;:::-;20041:139;;19768:419;;;:::o;20193:171::-;20333:23;20329:1;20321:6;20317:14;20310:47;20193:171;:::o;20370:366::-;20512:3;20533:67;20597:2;20592:3;20533:67;:::i;:::-;20526:74;;20609:93;20698:3;20609:93;:::i;:::-;20727:2;20722:3;20718:12;20711:19;;20370:366;;;:::o;20742:419::-;20908:4;20946:2;20935:9;20931:18;20923:26;;20995:9;20989:4;20985:20;20981:1;20970:9;20966:17;20959:47;21023:131;21149:4;21023:131;:::i;:::-;21015:139;;20742:419;;;:::o;21167:442::-;21316:4;21354:2;21343:9;21339:18;21331:26;;21367:71;21435:1;21424:9;21420:17;21411:6;21367:71;:::i;:::-;21448:72;21516:2;21505:9;21501:18;21492:6;21448:72;:::i;:::-;21530;21598:2;21587:9;21583:18;21574:6;21530:72;:::i;:::-;21167:442;;;;;;:::o;21615:332::-;21736:4;21774:2;21763:9;21759:18;21751:26;;21787:71;21855:1;21844:9;21840:17;21831:6;21787:71;:::i;:::-;21868:72;21936:2;21925:9;21921:18;21912:6;21868:72;:::i;:::-;21615:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1208800",
								"executionCost": "23365",
								"totalCost": "1232165"
							},
							"external": {
								"COMMISSION_PERCENTAGE()": "348",
								"COMMISSION_WALLET()": "374",
								"addListing(uint256,address,uint256,uint256)": "infinite",
								"buyTokensWithERC20(uint256,uint256,address,uint256)": "infinite",
								"listingCounter()": "2470",
								"listings(uint256)": "infinite",
								"withdrawTokensFromListing(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 3815,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207ade803c48215fba5856bee89e2abd1b054679d1faad224200c4f91e5a00fe7864736f6c634300081c0033",
									".code": [
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "7A82A87F"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "7A82A87F"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "9FFAE41B"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "DE74E57B"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "F25713BF"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "17C73FF0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "1BF1DE9B"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "6C2C9C7D"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 3815,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 564,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 564,
											"end": 650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 656,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 656,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 529,
											"end": 558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1971,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1971,
											"end": 3240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 986,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 986,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 480,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 480,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 3246,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3246,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 608,
											"end": 650,
											"name": "PUSH",
											"source": 11,
											"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
										},
										{
											"begin": 564,
											"end": 650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 564,
											"end": 650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 704,
											"end": 706,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 656,
											"end": 706,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 656,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 558,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 529,
											"end": 558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2198,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2199,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2154,
											"end": 2199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2154,
											"end": 2199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2234,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2224,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2217,
											"end": 2231,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2231,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2217,
											"end": 2235,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 2209,
											"end": 2262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 2209,
											"end": 2262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2299,
											"end": 2306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2299,
											"end": 2317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2299,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2299,
											"end": 2317,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2295,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2317,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2280,
											"end": 2317,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 2272,
											"end": 2341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2272,
											"end": 2341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2377,
											"end": 2388,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2366,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2359,
											"end": 2373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2388,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2359,
											"end": 2388,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 2351,
											"end": 2421,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 2351,
											"end": 2421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2450,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2480,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2460,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2466,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2453,
											"end": 2466,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2466,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2453,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 2453,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2432,
											"end": 2480,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2550,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 704,
											"end": 706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 2512,
											"end": 2522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 2512,
											"end": 2546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 2512,
											"end": 2546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 2511,
											"end": 2553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 2511,
											"end": 2553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2553,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2589,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2605,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2602,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 2592,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2592,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2563,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2668,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2646,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2633,
											"end": 2668,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 2625,
											"end": 2697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 2625,
											"end": 2697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2735,
											"end": 2747,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2832,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2788,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 2789,
											"end": 2799,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2809,
											"end": 2813,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 2766,
											"end": 2815,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 2766,
											"end": 2815,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 2766,
											"end": 2815,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2832,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2766,
											"end": 2832,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 2758,
											"end": 2868,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 2758,
											"end": 2868,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2909,
											"end": 2919,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 608,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
										},
										{
											"begin": 2940,
											"end": 2950,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2891,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2908,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2908,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2879,
											"end": 2908,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 2879,
											"end": 2951,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2991,
											"end": 3001,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3010,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3003,
											"end": 3017,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3019,
											"end": 3029,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 2973,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 2990,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 2990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2961,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 2961,
											"end": 3030,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3048,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3041,
											"end": 3055,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3055,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 3041,
											"end": 3070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3041,
											"end": 3070,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3124,
											"end": 3134,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3136,
											"end": 3147,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3093,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3086,
											"end": 3109,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3080,
											"end": 3123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 3080,
											"end": 3148,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3191,
											"end": 3201,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "DCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5"
										},
										{
											"begin": 3180,
											"end": 3189,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 3203,
											"end": 3214,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3226,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3228,
											"end": 3232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 3164,
											"end": 3233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3233,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 3240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 3240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 3240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 3240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2144,
											"end": 3240,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1971,
											"end": 3240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1112,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 1099,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 1099,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1170,
											"end": 1180,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 1162,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 1162,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1246,
											"end": 1247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1235,
											"end": 1243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1235,
											"end": 1247,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 1227,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 1227,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1319,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1304,
											"end": 1333,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1296,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "tag",
											"source": 11,
											"value": "92"
										},
										{
											"begin": 1296,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1373,
											"end": 1384,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1393,
											"end": 1408,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1479,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1442,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 1443,
											"end": 1453,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1463,
											"end": 1467,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1427,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 1427,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1427,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1479,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1427,
											"end": 1479,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1419,
											"end": 1507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 1419,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1541,
											"end": 1551,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1561,
											"end": 1565,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1523,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 1518,
											"end": 1540,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1518,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1600,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1586,
											"end": 1600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1586,
											"end": 1602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1586,
											"end": 1602,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1678,
											"end": 1693,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1714,
											"end": 1719,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1769,
											"end": 1779,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1823,
											"end": 1831,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1820,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1805,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1805,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1639,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1620,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1635,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1621,
											"end": 1635,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1636,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1612,
											"end": 1842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1899,
											"end": 1914,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1897,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "C8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B"
										},
										{
											"begin": 1871,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1871,
											"end": 1885,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1916,
											"end": 1921,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1949,
											"end": 1957,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 1946,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 1931,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1931,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 1858,
											"end": 1958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1858,
											"end": 1958,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 1089,
											"end": 1965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 986,
											"end": 1965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 480,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 480,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3376,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3358,
											"end": 3377,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3377,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3332,
											"end": 3377,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3416,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3409,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3395,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3405,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3395,
											"end": 3423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3395,
											"end": 3423,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 3387,
											"end": 3460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 3387,
											"end": 3460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3496,
											"end": 3514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3514,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3493,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3514,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 3470,
											"end": 3540,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 3470,
											"end": 3540,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3575,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3558,
											"end": 3572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3572,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3576,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 3550,
											"end": 3602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 3550,
											"end": 3602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3659,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3645,
											"end": 3659,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3645,
											"end": 3659,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3659,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3613,
											"end": 3659,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3686,
											"end": 3687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3676,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3669,
											"end": 3683,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3687,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3687,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3669,
											"end": 3687,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3698,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3718,
											"end": 3741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3698,
											"end": 3742,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3771,
											"end": 3781,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3783,
											"end": 3804,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3757,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 3752,
											"end": 3770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 3752,
											"end": 3805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3322,
											"end": 3812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 12,
											"value": "190"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 12,
											"value": "192"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1719,
											"end": 1724,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1701,
											"end": 1725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 1701,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1691,
											"end": 1726,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1737,
											"end": 1738,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1730,
											"end": 1742,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 1681,
											"end": 1744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1628,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1802,
											"end": 1807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1846,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1827,
											"end": 1847,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1818,
											"end": 1847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1883,
											"end": 1888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1856,
											"end": 1889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 1856,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1756,
											"end": 1895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1987,
											"end": 1993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1995,
											"end": 2001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2009,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2063,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2046,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2035,
											"end": 2058,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2148,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2028,
											"end": 2148,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2067,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2146,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2067,
											"end": 2146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2067,
											"end": 2146,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 2067,
											"end": 2146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2028,
											"end": 2148,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 2028,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2188,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2212,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2254,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2237,
											"end": 2246,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2233,
											"end": 2255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2212,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2212,
											"end": 2265,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 2212,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2265,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2202,
											"end": 2265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2275,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2316,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2340,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2385,
											"end": 2392,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2376,
											"end": 2382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2365,
											"end": 2374,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2361,
											"end": 2383,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2340,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2393,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 2340,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2393,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2330,
											"end": 2393,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2285,
											"end": 2403,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2442,
											"end": 2444,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2493,
											"end": 2502,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2468,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 2468,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2521,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2413,
											"end": 2531,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2596,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2641,
											"end": 2648,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2617,
											"end": 2639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2596,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2649,
											"name": "tag",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 2596,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2649,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2586,
											"end": 2649,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2659,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1901,
											"end": 2666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2772,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2831,
											"end": 2834,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2810,
											"end": 2817,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2806,
											"end": 2829,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2835,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2919,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2799,
											"end": 2919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2838,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 2838,
											"end": 2917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2838,
											"end": 2917,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 2838,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 2919,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 2799,
											"end": 2919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2958,
											"end": 2959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 3028,
											"end": 3035,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3019,
											"end": 3025,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3026,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2983,
											"end": 3036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 2983,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 3036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2929,
											"end": 3046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3085,
											"end": 3087,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3156,
											"end": 3163,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3147,
											"end": 3153,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3136,
											"end": 3145,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3132,
											"end": 3154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 3111,
											"end": 3164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 3111,
											"end": 3164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3101,
											"end": 3164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3056,
											"end": 3174,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3239,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3284,
											"end": 3291,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3260,
											"end": 3282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3239,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3239,
											"end": 3292,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 3239,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3292,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3184,
											"end": 3302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3341,
											"end": 3343,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3401,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3388,
											"end": 3410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3367,
											"end": 3420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 3367,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3357,
											"end": 3420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3312,
											"end": 3430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2672,
											"end": 3437,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3508,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3539,
											"end": 3548,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3530,
											"end": 3537,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3526,
											"end": 3549,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3554,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3638,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3519,
											"end": 3638,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3557,
											"end": 3636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 3557,
											"end": 3636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3557,
											"end": 3636,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 3557,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3519,
											"end": 3638,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3519,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3677,
											"end": 3678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3738,
											"end": 3744,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3736,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3723,
											"end": 3745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3702,
											"end": 3755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 3702,
											"end": 3755,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3692,
											"end": 3755,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3648,
											"end": 3765,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3443,
											"end": 3772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3983,
											"end": 3987,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4024,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4010,
											"end": 4019,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4006,
											"end": 4025,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4103,
											"end": 4104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4092,
											"end": 4101,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4088,
											"end": 4105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4079,
											"end": 4085,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 4035,
											"end": 4106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 4035,
											"end": 4106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4184,
											"end": 4186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4173,
											"end": 4182,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4169,
											"end": 4187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4160,
											"end": 4166,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4116,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4188,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 4116,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4266,
											"end": 4268,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4264,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4251,
											"end": 4269,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4198,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4198,
											"end": 4270,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 4198,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4337,
											"end": 4346,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4333,
											"end": 4351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 4280,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4280,
											"end": 4352,
											"name": "tag",
											"source": 12,
											"value": "233"
										},
										{
											"begin": 4280,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4430,
											"end": 4433,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 4419,
											"end": 4428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4434,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4412,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 4362,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4435,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 4362,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3778,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4532,
											"end": 4543,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4572,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4561,
											"end": 4564,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4554,
											"end": 4573,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4597,
											"end": 4611,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4582,
											"end": 4611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4582,
											"end": 4611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4623,
											"end": 4795,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 4623,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4763,
											"end": 4787,
											"name": "PUSH",
											"source": 12,
											"value": "4C697374696E6720646F6573206E6F7420657869737400000000000000000000"
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4751,
											"end": 4757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4747,
											"end": 4761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4740,
											"end": 4788,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4623,
											"end": 4795,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4623,
											"end": 4795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 5167,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 4801,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4943,
											"end": 4946,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4964,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 5028,
											"end": 5030,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 5023,
											"end": 5026,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 4964,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4964,
											"end": 5031,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 4964,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 5031,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4957,
											"end": 5031,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5040,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5129,
											"end": 5132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5040,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 5040,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5040,
											"end": 5133,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 5040,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5158,
											"end": 5160,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5153,
											"end": 5156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5149,
											"end": 5161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5142,
											"end": 5161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 5167,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 5167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 5167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4801,
											"end": 5167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5592,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 5173,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5339,
											"end": 5343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5379,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5366,
											"end": 5375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5362,
											"end": 5380,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5380,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5354,
											"end": 5380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5426,
											"end": 5435,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5416,
											"end": 5436,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5412,
											"end": 5413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5410,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5397,
											"end": 5414,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5390,
											"end": 5437,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5580,
											"end": 5584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 5454,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5454,
											"end": 5585,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 5454,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5173,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5598,
											"end": 5767,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 5598,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5759,
											"name": "PUSH",
											"source": 12,
											"value": "4C697374696E6720686173206578706972656400000000000000000000000000"
										},
										{
											"begin": 5734,
											"end": 5735,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5726,
											"end": 5732,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5722,
											"end": 5736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5715,
											"end": 5760,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5598,
											"end": 5767,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5598,
											"end": 5767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6139,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 5773,
											"end": 6139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 5995,
											"end": 5998,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5936,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 5936,
											"end": 6003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5936,
											"end": 6003,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 5936,
											"end": 6003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 6003,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 6003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6012,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 6101,
											"end": 6104,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6012,
											"end": 6105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6012,
											"end": 6105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6012,
											"end": 6105,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 6012,
											"end": 6105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6130,
											"end": 6132,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6125,
											"end": 6128,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6121,
											"end": 6133,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6114,
											"end": 6133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6564,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6145,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6352,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6326,
											"end": 6352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6398,
											"end": 6407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6392,
											"end": 6396,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6388,
											"end": 6408,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6384,
											"end": 6385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6382,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6362,
											"end": 6409,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 6552,
											"end": 6556,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6426,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6557,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 6426,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6418,
											"end": 6557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6564,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6145,
											"end": 6564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6748,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6570,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000"
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6698,
											"end": 6704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6694,
											"end": 6708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6741,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6748,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6748,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 7120,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 6754,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6896,
											"end": 6899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 12,
											"value": "1C"
										},
										{
											"begin": 6976,
											"end": 6979,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6917,
											"end": 6984,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6917,
											"end": 6984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6917,
											"end": 6984,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 6917,
											"end": 6984,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6984,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6910,
											"end": 6984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 7082,
											"end": 7085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 6993,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6993,
											"end": 7086,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 6993,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7111,
											"end": 7113,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7106,
											"end": 7109,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7114,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7095,
											"end": 7114,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 7120,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 7120,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 7120,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6754,
											"end": 7120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7545,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 7126,
											"end": 7545,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7292,
											"end": 7296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7319,
											"end": 7328,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7307,
											"end": 7333,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7379,
											"end": 7388,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7373,
											"end": 7377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7369,
											"end": 7389,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7365,
											"end": 7366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7363,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7350,
											"end": 7367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7343,
											"end": 7390,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 7533,
											"end": 7537,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 7407,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7407,
											"end": 7538,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 7407,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7538,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7399,
											"end": 7538,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7545,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7545,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7545,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7126,
											"end": 7545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7551,
											"end": 7731,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 7551,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7599,
											"end": 7676,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7596,
											"end": 7597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7589,
											"end": 7677,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7686,
											"end": 7701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7720,
											"end": 7724,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7717,
											"end": 7718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7710,
											"end": 7725,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7777,
											"end": 7784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7800,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 7800,
											"end": 7820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7800,
											"end": 7820,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 7800,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7795,
											"end": 7820,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7795,
											"end": 7820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7852,
											"end": 7853,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 7834,
											"end": 7854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 7834,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7854,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7829,
											"end": 7854,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7889,
											"end": 7890,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7882,
											"end": 7891,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 7929,
											"end": 7940,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 7911,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 7911,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7900,
											"end": 7941,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8077,
											"end": 8092,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8074,
											"end": 8075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8071,
											"end": 8093,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8051,
											"end": 8052,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8053,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8024,
											"end": 8107,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 8001,
											"end": 8140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 8001,
											"end": 8140,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8120,
											"end": 8138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8001,
											"end": 8140,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 8001,
											"end": 8140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 8147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7737,
											"end": 8147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8153,
											"end": 8333,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8153,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8201,
											"end": 8278,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8191,
											"end": 8279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8298,
											"end": 8302,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8295,
											"end": 8296,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8288,
											"end": 8303,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8322,
											"end": 8326,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8319,
											"end": 8320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8312,
											"end": 8327,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8379,
											"end": 8380,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8396,
											"end": 8416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 8396,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8416,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8391,
											"end": 8416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8430,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 8430,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8450,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8450,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8469,
											"end": 8470,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 8474,
											"end": 8492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 8474,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8516,
											"end": 8517,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8513,
											"end": 8514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8509,
											"end": 8518,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8518,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 8518,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8570,
											"end": 8573,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 8607,
											"end": 8608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8589,
											"end": 8609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 8589,
											"end": 8609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8609,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8584,
											"end": 8609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 8623,
											"end": 8643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8623,
											"end": 8643,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 8623,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8643,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8618,
											"end": 8643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8666,
											"end": 8667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8663,
											"end": 8664,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8659,
											"end": 8668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8687,
											"end": 8690,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8681,
											"end": 8691,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8714,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 8678,
											"end": 8714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 8694,
											"end": 8712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 8694,
											"end": 8712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8678,
											"end": 8714,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 8678,
											"end": 8714,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8530,
											"end": 8721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8727,
											"end": 8901,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 8727,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8867,
											"end": 8893,
											"name": "PUSH",
											"source": 12,
											"value": "496E636F7272656374207061796D656E7420616D6F756E740000000000000000"
										},
										{
											"begin": 8863,
											"end": 8864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8855,
											"end": 8861,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8851,
											"end": 8865,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8844,
											"end": 8894,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8727,
											"end": 8901,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8727,
											"end": 8901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 9273,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 8907,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9049,
											"end": 9052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9134,
											"end": 9136,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 9129,
											"end": 9132,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9070,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 9070,
											"end": 9137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9070,
											"end": 9137,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9070,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9137,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9063,
											"end": 9137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9235,
											"end": 9238,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 9146,
											"end": 9239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9239,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9146,
											"end": 9239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9266,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9259,
											"end": 9262,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9255,
											"end": 9267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9248,
											"end": 9267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 9273,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 9273,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 9273,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8907,
											"end": 9273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9698,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 9279,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9483,
											"end": 9485,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9472,
											"end": 9481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9468,
											"end": 9486,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9486,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9460,
											"end": 9486,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9541,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9526,
											"end": 9530,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9542,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9518,
											"end": 9519,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9507,
											"end": 9516,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9503,
											"end": 9520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9496,
											"end": 9543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9560,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9686,
											"end": 9690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9560,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 9560,
											"end": 9691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9560,
											"end": 9691,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 9560,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9552,
											"end": 9691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9552,
											"end": 9691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9698,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9698,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9279,
											"end": 9698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9863,
											"end": 9865,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9852,
											"end": 9861,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9848,
											"end": 9866,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9840,
											"end": 9866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9840,
											"end": 9866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9933,
											"end": 9942,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9929,
											"end": 9946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9920,
											"end": 9926,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9876,
											"end": 9947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 9876,
											"end": 9947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 10025,
											"end": 10027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10010,
											"end": 10028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10001,
											"end": 10007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9957,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 9957,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9704,
											"end": 10036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10099,
											"end": 10104,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10130,
											"end": 10136,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10124,
											"end": 10137,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10115,
											"end": 10137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10115,
											"end": 10137,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10173,
											"end": 10178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10179,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 10146,
											"end": 10179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10146,
											"end": 10179,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 10146,
											"end": 10179,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10042,
											"end": 10185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10267,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10312,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10298,
											"end": 10307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10289,
											"end": 10296,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10285,
											"end": 10308,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10281,
											"end": 10313,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10397,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 10278,
											"end": 10397,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10316,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 10316,
											"end": 10395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 10316,
											"end": 10395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10316,
											"end": 10395,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 10316,
											"end": 10395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10278,
											"end": 10397,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 10278,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10436,
											"end": 10437,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10461,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 10517,
											"end": 10524,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10508,
											"end": 10514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10497,
											"end": 10506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10493,
											"end": 10515,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 10461,
											"end": 10525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10461,
											"end": 10525,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 10461,
											"end": 10525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10451,
											"end": 10525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10407,
											"end": 10535,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10548,
											"end": 10729,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 10548,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10688,
											"end": 10721,
											"name": "PUSH",
											"source": 12,
											"value": "5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700"
										},
										{
											"begin": 10684,
											"end": 10685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10676,
											"end": 10682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10686,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10665,
											"end": 10722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10548,
											"end": 10729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10548,
											"end": 10729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 11101,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 10735,
											"end": 11101,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10877,
											"end": 10880,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 10962,
											"end": 10964,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10898,
											"end": 10965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 10898,
											"end": 10965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10898,
											"end": 10965,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 10898,
											"end": 10965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10891,
											"end": 10965,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10891,
											"end": 10965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 11063,
											"end": 11066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 11067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 10974,
											"end": 11067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10974,
											"end": 11067,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 10974,
											"end": 11067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11092,
											"end": 11094,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11083,
											"end": 11095,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11076,
											"end": 11095,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11076,
											"end": 11095,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 11101,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 11101,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 11101,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10735,
											"end": 11101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11526,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 11107,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11273,
											"end": 11277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11311,
											"end": 11313,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11300,
											"end": 11309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11288,
											"end": 11314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11288,
											"end": 11314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11360,
											"end": 11369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11370,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11346,
											"end": 11347,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11335,
											"end": 11344,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11331,
											"end": 11348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11324,
											"end": 11371,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11514,
											"end": 11518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 11388,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11388,
											"end": 11519,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 11388,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11380,
											"end": 11519,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11380,
											"end": 11519,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11526,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11526,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11526,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11107,
											"end": 11526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11572,
											"end": 11576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11592,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 11610,
											"end": 11611,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11612,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 11592,
											"end": 11612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11592,
											"end": 11612,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 11592,
											"end": 11612,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11612,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11587,
											"end": 11612,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11626,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 11644,
											"end": 11645,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11626,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 11626,
											"end": 11646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11626,
											"end": 11646,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 11626,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11621,
											"end": 11646,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11621,
											"end": 11646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11667,
											"end": 11668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11663,
											"end": 11672,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11655,
											"end": 11672,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11655,
											"end": 11672,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11694,
											"end": 11695,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11688,
											"end": 11692,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11685,
											"end": 11696,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11719,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 11682,
											"end": 11719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 11699,
											"end": 11717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 11699,
											"end": 11717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11682,
											"end": 11719,
											"name": "tag",
											"source": 12,
											"value": "296"
										},
										{
											"begin": 11682,
											"end": 11719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11532,
											"end": 11726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11822,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 11732,
											"end": 11822,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11766,
											"end": 11773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11814,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 11815,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11795,
											"end": 11816,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11784,
											"end": 11816,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11784,
											"end": 11816,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11822,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11822,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11822,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11732,
											"end": 11822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11937,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 11828,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11924,
											"end": 11929,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 11909,
											"end": 11930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11909,
											"end": 11930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11904,
											"end": 11907,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 11931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11937,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11828,
											"end": 11937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12114,
											"end": 12118,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12152,
											"end": 12155,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12141,
											"end": 12150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12137,
											"end": 12156,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12129,
											"end": 12156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12129,
											"end": 12156,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12166,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 12234,
											"end": 12235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12232,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12219,
											"end": 12236,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12210,
											"end": 12216,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12166,
											"end": 12237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12166,
											"end": 12237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12166,
											"end": 12237,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 12166,
											"end": 12237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 12315,
											"end": 12317,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12300,
											"end": 12318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12291,
											"end": 12297,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12247,
											"end": 12319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 12247,
											"end": 12319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12397,
											"end": 12399,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12386,
											"end": 12395,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12379,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12329,
											"end": 12401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 12329,
											"end": 12401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 12473,
											"end": 12475,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12462,
											"end": 12471,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12458,
											"end": 12476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12449,
											"end": 12455,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 12411,
											"end": 12477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12411,
											"end": 12477,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 12411,
											"end": 12477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11943,
											"end": 12484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12671,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 12490,
											"end": 12671,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12663,
											"name": "PUSH",
											"source": 12,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 12626,
											"end": 12627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12618,
											"end": 12624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12614,
											"end": 12628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12607,
											"end": 12664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 13043,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 12677,
											"end": 13043,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12819,
											"end": 12822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12840,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12904,
											"end": 12906,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 12899,
											"end": 12902,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 12907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 12840,
											"end": 12907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12840,
											"end": 12907,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12840,
											"end": 12907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12833,
											"end": 12907,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12833,
											"end": 12907,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 13005,
											"end": 13008,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 13009,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 12916,
											"end": 13009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12916,
											"end": 13009,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 12916,
											"end": 13009,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13034,
											"end": 13036,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13029,
											"end": 13032,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13037,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13018,
											"end": 13037,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13018,
											"end": 13037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 13043,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 13043,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 13043,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12677,
											"end": 13043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13468,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 13049,
											"end": 13468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13215,
											"end": 13219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13253,
											"end": 13255,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13242,
											"end": 13251,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13238,
											"end": 13256,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13256,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13230,
											"end": 13256,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13302,
											"end": 13311,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13296,
											"end": 13300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13292,
											"end": 13312,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13277,
											"end": 13286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13273,
											"end": 13290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13266,
											"end": 13313,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13330,
											"end": 13461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 13456,
											"end": 13460,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13330,
											"end": 13461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 13330,
											"end": 13461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13330,
											"end": 13461,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 13330,
											"end": 13461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13322,
											"end": 13461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13322,
											"end": 13461,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13468,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13468,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13049,
											"end": 13468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13474,
											"end": 13656,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 13474,
											"end": 13656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13614,
											"end": 13648,
											"name": "PUSH",
											"source": 12,
											"value": "546F6B656E73206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 13610,
											"end": 13611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13602,
											"end": 13608,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13598,
											"end": 13612,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13591,
											"end": 13649,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13474,
											"end": 13656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13474,
											"end": 13656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13662,
											"end": 14028,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 13662,
											"end": 14028,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13804,
											"end": 13807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13825,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 13889,
											"end": 13891,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13884,
											"end": 13887,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13825,
											"end": 13892,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 13825,
											"end": 13892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13825,
											"end": 13892,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 13825,
											"end": 13892,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13892,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13818,
											"end": 13892,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13901,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13990,
											"end": 13993,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13901,
											"end": 13994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 13901,
											"end": 13994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13901,
											"end": 13994,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13901,
											"end": 13994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14019,
											"end": 14021,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14014,
											"end": 14017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14010,
											"end": 14022,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14003,
											"end": 14022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14003,
											"end": 14022,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13662,
											"end": 14028,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13662,
											"end": 14028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13662,
											"end": 14028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13662,
											"end": 14028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14453,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 14034,
											"end": 14453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14200,
											"end": 14204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14240,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14227,
											"end": 14236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14223,
											"end": 14241,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14215,
											"end": 14241,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14215,
											"end": 14241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14287,
											"end": 14296,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14281,
											"end": 14285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14277,
											"end": 14297,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14273,
											"end": 14274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14258,
											"end": 14275,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14251,
											"end": 14298,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14441,
											"end": 14445,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 14315,
											"end": 14446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14315,
											"end": 14446,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 14315,
											"end": 14446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14307,
											"end": 14446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14034,
											"end": 14453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14459,
											"end": 14680,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 14459,
											"end": 14680,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14599,
											"end": 14633,
											"name": "PUSH",
											"source": 12,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E207A65"
										},
										{
											"begin": 14595,
											"end": 14596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14587,
											"end": 14593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14583,
											"end": 14597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14576,
											"end": 14634,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14668,
											"end": 14672,
											"name": "PUSH",
											"source": 12,
											"value": "726F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14663,
											"end": 14665,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14655,
											"end": 14661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14651,
											"end": 14666,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14644,
											"end": 14673,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14459,
											"end": 14680,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14459,
											"end": 14680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 15052,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 14686,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14828,
											"end": 14831,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14849,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 14913,
											"end": 14915,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 14908,
											"end": 14911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14849,
											"end": 14916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 14849,
											"end": 14916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14849,
											"end": 14916,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 14849,
											"end": 14916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14842,
											"end": 14916,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14842,
											"end": 14916,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 15014,
											"end": 15017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 14925,
											"end": 15018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14925,
											"end": 15018,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 14925,
											"end": 15018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15043,
											"end": 15045,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15038,
											"end": 15041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15034,
											"end": 15046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15027,
											"end": 15046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15027,
											"end": 15046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 15052,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 15052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 15052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14686,
											"end": 15052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15477,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 15058,
											"end": 15477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15224,
											"end": 15228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15262,
											"end": 15264,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15251,
											"end": 15260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15247,
											"end": 15265,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15239,
											"end": 15265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15239,
											"end": 15265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15311,
											"end": 15320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15305,
											"end": 15309,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15301,
											"end": 15321,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15297,
											"end": 15298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 15295,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15282,
											"end": 15299,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15275,
											"end": 15322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15339,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15465,
											"end": 15469,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15339,
											"end": 15470,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 15339,
											"end": 15470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15339,
											"end": 15470,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 15339,
											"end": 15470,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15331,
											"end": 15470,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15331,
											"end": 15470,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15058,
											"end": 15477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15657,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 15483,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15623,
											"end": 15649,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420636F6E747261637420616464726573730000000000000000"
										},
										{
											"begin": 15619,
											"end": 15620,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15611,
											"end": 15617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15607,
											"end": 15621,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15600,
											"end": 15650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15657,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15483,
											"end": 15657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15663,
											"end": 16029,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 15663,
											"end": 16029,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15805,
											"end": 15808,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15826,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15890,
											"end": 15892,
											"name": "PUSH",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 15885,
											"end": 15888,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 15826,
											"end": 15893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15826,
											"end": 15893,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 15826,
											"end": 15893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 15893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15819,
											"end": 15893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15991,
											"end": 15994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15995,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 15902,
											"end": 15995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15902,
											"end": 15995,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 15902,
											"end": 15995,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16020,
											"end": 16022,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16015,
											"end": 16018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16011,
											"end": 16023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16004,
											"end": 16023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15663,
											"end": 16029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15663,
											"end": 16029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15663,
											"end": 16029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15663,
											"end": 16029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16454,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 16035,
											"end": 16454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16201,
											"end": 16205,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16239,
											"end": 16241,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16228,
											"end": 16237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16224,
											"end": 16242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16216,
											"end": 16242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16216,
											"end": 16242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16288,
											"end": 16297,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16286,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16278,
											"end": 16298,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16274,
											"end": 16275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16263,
											"end": 16272,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16259,
											"end": 16276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16252,
											"end": 16299,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16316,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16442,
											"end": 16446,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16316,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 16316,
											"end": 16447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16316,
											"end": 16447,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 16316,
											"end": 16447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16308,
											"end": 16447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16308,
											"end": 16447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16454,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16035,
											"end": 16454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16460,
											"end": 16633,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 16460,
											"end": 16633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16600,
											"end": 16625,
											"name": "PUSH",
											"source": 12,
											"value": "546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000"
										},
										{
											"begin": 16596,
											"end": 16597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16588,
											"end": 16594,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16584,
											"end": 16598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16577,
											"end": 16626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16460,
											"end": 16633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16460,
											"end": 16633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16781,
											"end": 16784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 16866,
											"end": 16868,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 16861,
											"end": 16864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 16802,
											"end": 16869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 16802,
											"end": 16869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16795,
											"end": 16869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16795,
											"end": 16869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 16967,
											"end": 16970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 16878,
											"end": 16971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 16878,
											"end": 16971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16996,
											"end": 16998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16991,
											"end": 16994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16987,
											"end": 16999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16980,
											"end": 16999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16980,
											"end": 16999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16639,
											"end": 17005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16639,
											"end": 17005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17177,
											"end": 17181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17215,
											"end": 17217,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17204,
											"end": 17213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17200,
											"end": 17218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17192,
											"end": 17218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17192,
											"end": 17218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17264,
											"end": 17273,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17258,
											"end": 17262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17254,
											"end": 17274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17250,
											"end": 17251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17239,
											"end": 17248,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17235,
											"end": 17252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17228,
											"end": 17275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 17418,
											"end": 17422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 17292,
											"end": 17423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 17292,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17284,
											"end": 17423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17011,
											"end": 17430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17669,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 17436,
											"end": 17669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17475,
											"end": 17478,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17498,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 17516,
											"end": 17521,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17498,
											"end": 17522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 17498,
											"end": 17522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17498,
											"end": 17522,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 17498,
											"end": 17522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17489,
											"end": 17522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17544,
											"end": 17610,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17537,
											"end": 17542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17534,
											"end": 17611,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17531,
											"end": 17634,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 17531,
											"end": 17634,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 17614,
											"end": 17632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 17614,
											"end": 17632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17531,
											"end": 17634,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 17531,
											"end": 17634,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17661,
											"end": 17662,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 17654,
											"end": 17659,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17650,
											"end": 17663,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17643,
											"end": 17663,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17643,
											"end": 17663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17669,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17669,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17436,
											"end": 17669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17852,
											"end": 17856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17890,
											"end": 17893,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 17879,
											"end": 17888,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17875,
											"end": 17894,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17867,
											"end": 17894,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17867,
											"end": 17894,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17904,
											"end": 17975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 17972,
											"end": 17973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17961,
											"end": 17970,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17957,
											"end": 17974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17948,
											"end": 17954,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 17904,
											"end": 17975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 17904,
											"end": 17975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17904,
											"end": 17975,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 17904,
											"end": 17975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 18053,
											"end": 18055,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18042,
											"end": 18051,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18038,
											"end": 18056,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18035,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18057,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 17985,
											"end": 18057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 18057,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 17985,
											"end": 18057,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18067,
											"end": 18139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 18135,
											"end": 18137,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 18124,
											"end": 18133,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18120,
											"end": 18138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18111,
											"end": 18117,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18067,
											"end": 18139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 18067,
											"end": 18139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18067,
											"end": 18139,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 18067,
											"end": 18139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18149,
											"end": 18221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 18217,
											"end": 18219,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 18206,
											"end": 18215,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18202,
											"end": 18220,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18193,
											"end": 18199,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18149,
											"end": 18221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 18149,
											"end": 18221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18149,
											"end": 18221,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 18149,
											"end": 18221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17675,
											"end": 18228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18234,
											"end": 18416,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 18234,
											"end": 18416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18374,
											"end": 18408,
											"name": "PUSH",
											"source": 12,
											"value": "4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177"
										},
										{
											"begin": 18370,
											"end": 18371,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18362,
											"end": 18368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18358,
											"end": 18372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18409,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18234,
											"end": 18416,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18234,
											"end": 18416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18564,
											"end": 18567,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 18649,
											"end": 18651,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18644,
											"end": 18647,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 18585,
											"end": 18652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 18585,
											"end": 18652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18578,
											"end": 18652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18578,
											"end": 18652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 18750,
											"end": 18753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 18661,
											"end": 18754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 18661,
											"end": 18754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18774,
											"end": 18777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18770,
											"end": 18782,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18763,
											"end": 18782,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18763,
											"end": 18782,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18422,
											"end": 18788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18960,
											"end": 18964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18987,
											"end": 18996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18983,
											"end": 19001,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18975,
											"end": 19001,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19047,
											"end": 19056,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19041,
											"end": 19045,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19037,
											"end": 19057,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19022,
											"end": 19031,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19018,
											"end": 19035,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19058,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 19201,
											"end": 19205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 19075,
											"end": 19206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 19075,
											"end": 19206,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19206,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19067,
											"end": 19206,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19213,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18794,
											"end": 19213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19219,
											"end": 19390,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 19219,
											"end": 19390,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19359,
											"end": 19382,
											"name": "PUSH",
											"source": 12,
											"value": "4C697374696E6720686173206E6F7420656E6465640000000000000000000000"
										},
										{
											"begin": 19355,
											"end": 19356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19347,
											"end": 19353,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19343,
											"end": 19357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19336,
											"end": 19383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19219,
											"end": 19390,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19219,
											"end": 19390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19396,
											"end": 19762,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 19396,
											"end": 19762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19538,
											"end": 19541,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19559,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 19623,
											"end": 19625,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 19618,
											"end": 19621,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19559,
											"end": 19626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 19559,
											"end": 19626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19559,
											"end": 19626,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 19559,
											"end": 19626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19552,
											"end": 19626,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19552,
											"end": 19626,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 19724,
											"end": 19727,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19728,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 19635,
											"end": 19728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19635,
											"end": 19728,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 19635,
											"end": 19728,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19753,
											"end": 19755,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19748,
											"end": 19751,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19744,
											"end": 19756,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19737,
											"end": 19756,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19737,
											"end": 19756,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19396,
											"end": 19762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19396,
											"end": 19762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19396,
											"end": 19762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19396,
											"end": 19762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 20187,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 19768,
											"end": 20187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19934,
											"end": 19938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19972,
											"end": 19974,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19961,
											"end": 19970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19957,
											"end": 19975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 19975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 19975,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20021,
											"end": 20030,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20015,
											"end": 20019,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20011,
											"end": 20031,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20007,
											"end": 20008,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19996,
											"end": 20005,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19992,
											"end": 20009,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19985,
											"end": 20032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 20175,
											"end": 20179,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 20049,
											"end": 20180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20049,
											"end": 20180,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 20049,
											"end": 20180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20041,
											"end": 20180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20041,
											"end": 20180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 20187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 20187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 20187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19768,
											"end": 20187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20193,
											"end": 20364,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 20193,
											"end": 20364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20333,
											"end": 20356,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 20329,
											"end": 20330,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20321,
											"end": 20327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20317,
											"end": 20331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20310,
											"end": 20357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20193,
											"end": 20364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20193,
											"end": 20364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20736,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 20370,
											"end": 20736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20512,
											"end": 20515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20533,
											"end": 20600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 20597,
											"end": 20599,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 20592,
											"end": 20595,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20533,
											"end": 20600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 20533,
											"end": 20600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20533,
											"end": 20600,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 20533,
											"end": 20600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20526,
											"end": 20600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20526,
											"end": 20600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20609,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 20698,
											"end": 20701,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20609,
											"end": 20702,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 20609,
											"end": 20702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20609,
											"end": 20702,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 20609,
											"end": 20702,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20727,
											"end": 20729,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20722,
											"end": 20725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20718,
											"end": 20730,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20711,
											"end": 20730,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20711,
											"end": 20730,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20736,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20370,
											"end": 20736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 21161,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 20742,
											"end": 21161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20908,
											"end": 20912,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20946,
											"end": 20948,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20935,
											"end": 20944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20931,
											"end": 20949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20923,
											"end": 20949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20923,
											"end": 20949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20995,
											"end": 21004,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20989,
											"end": 20993,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20985,
											"end": 21005,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20981,
											"end": 20982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20970,
											"end": 20979,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20966,
											"end": 20983,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20959,
											"end": 21006,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21023,
											"end": 21154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 21149,
											"end": 21153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21023,
											"end": 21154,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 21023,
											"end": 21154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21023,
											"end": 21154,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 21023,
											"end": 21154,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21015,
											"end": 21154,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21015,
											"end": 21154,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 21161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 21161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 21161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20742,
											"end": 21161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21316,
											"end": 21320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21354,
											"end": 21356,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 21343,
											"end": 21352,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21339,
											"end": 21357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21331,
											"end": 21357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21331,
											"end": 21357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 21435,
											"end": 21436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21424,
											"end": 21433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21420,
											"end": 21437,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21411,
											"end": 21417,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 21367,
											"end": 21438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21367,
											"end": 21438,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 21367,
											"end": 21438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21448,
											"end": 21520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 21516,
											"end": 21518,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21505,
											"end": 21514,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21501,
											"end": 21519,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21492,
											"end": 21498,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21448,
											"end": 21520,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 21448,
											"end": 21520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21448,
											"end": 21520,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 21448,
											"end": 21520,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21530,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 21598,
											"end": 21600,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21587,
											"end": 21596,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21583,
											"end": 21601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21574,
											"end": 21580,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21530,
											"end": 21602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 21530,
											"end": 21602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21530,
											"end": 21602,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 21530,
											"end": 21602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21167,
											"end": 21609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21736,
											"end": 21740,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21774,
											"end": 21776,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 21763,
											"end": 21772,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21759,
											"end": 21777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21751,
											"end": 21777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21751,
											"end": 21777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 21855,
											"end": 21856,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21844,
											"end": 21853,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21840,
											"end": 21857,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21831,
											"end": 21837,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21858,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 21787,
											"end": 21858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21787,
											"end": 21858,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 21787,
											"end": 21858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21868,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 21936,
											"end": 21938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21925,
											"end": 21934,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21921,
											"end": 21939,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21912,
											"end": 21918,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 21868,
											"end": 21940,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 21868,
											"end": 21940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21868,
											"end": 21940,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 21868,
											"end": 21940,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21615,
											"end": 21947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SaleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMISSION_PERCENTAGE()": "1bf1de9b",
							"COMMISSION_WALLET()": "17c73ff0",
							"addListing(uint256,address,uint256,uint256)": "9ffae41b",
							"buyTokensWithERC20(uint256,uint256,address,uint256)": "7a82a87f",
							"listingCounter()": "6c2c9c7d",
							"listings(uint256)": "de74e57b",
							"withdrawTokensFromListing(uint256)": "f25713bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"ListingAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withERC20\",\"type\":\"bool\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMISSION_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMISSION_WALLET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensWithERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"withdrawTokensFromListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaleContract.sol\":\"SaleContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SaleContract.sol\":{\"keccak256\":\"0x4c4b5d1c0d73a3d8b3c9d04cda9acca5d49a0e134c63a37a8a5a3375bf2d0f94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57138392574d47f7b0efd283959c6f653610c11f35c07ec385bcf54cf5ac77e8\",\"dweb:/ipfs/QmRX8GbtWUvwTiq8NM28s23QcNYSrCHmvDC2qNTrTbQt45\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1295,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1392,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listings",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Listing)1387_storage)"
							},
							{
								"astId": 1394,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listingCounter",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Listing)1387_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SaleContract.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)1387_storage"
							},
							"t_struct(Listing)1387_storage": {
								"encoding": "inplace",
								"label": "struct SaleContract.Listing",
								"members": [
									{
										"astId": 1378,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1380,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1382,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "tokens",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1384,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "seller",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1386,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "expiration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC165": [
							1365
						],
						"IERC20": [
							819
						]
					},
					"id": 82,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 90,
							"src": "133:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "141:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 82,
							"sourceUnit": 86,
							"src": "170:38:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1365,
										"src": "178:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "IERC20",
										"nameLocations": [
											"590:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "590:6:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC165",
										"nameLocations": [
											"598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "598:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:0"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:0",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 81,
							"linearizedBaseContracts": [
								81,
								1365,
								819
							],
							"name": "IERC1363",
							"nameLocation": "578:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1548:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1560:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "1593:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:0"
									},
									"scope": 81,
									"src": "1523:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 32,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2088:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2100:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2115:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 26,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "2154:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:0"
									},
									"scope": 81,
									"src": "2063:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2653:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2667:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "2712:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:0"
									},
									"scope": 81,
									"src": "2624:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3294:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3308:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3320:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3335:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 52,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "3374:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:0"
									},
									"scope": 81,
									"src": "3265:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3805:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3822:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "3855:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:0"
									},
									"scope": 81,
									"src": "3781:80:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4391:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4406:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "4445:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:0"
									},
									"scope": 81,
									"src": "4350:101:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 82,
							"src": "568:3885:0",
							"usedErrors": [],
							"usedEvents": [
								753,
								762
							]
						}
					],
					"src": "107:4347:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1365
						]
					},
					"id": 86,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 83,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 85,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 86,
							"sourceUnit": 1366,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 84,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1365,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							819
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 87,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 89,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 90,
							"sourceUnit": 820,
							"src": "131:49:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 88,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							226
						],
						"IERC20Errors": [
							131
						],
						"IERC721Errors": [
							179
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 91,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 92,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:3",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 131,
							"linearizedBaseContracts": [
								131
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 101,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "654:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "670:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "687:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:3"
									},
									"src": "623:80:3"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 106,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "891:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:3"
									},
									"src": "866:41:3"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 111,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "1104:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:3"
									},
									"src": "1077:45:3"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 120,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1511:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1528:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "1547:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:3"
									},
									"src": "1478:85:3"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 125,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1775:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:3"
									},
									"src": "1748:45:3"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 130,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2025:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:3"
									},
									"src": "1999:43:3"
								}
							],
							"scope": 227,
							"src": "280:1764:3",
							"usedErrors": [
								101,
								106,
								111,
								120,
								125,
								130
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 132,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:3",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 179,
							"linearizedBaseContracts": [
								179
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 137,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "2469:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:3"
									},
									"src": "2444:40:3"
								},
								{
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 142,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "2656:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:3"
									},
									"src": "2627:46:3"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 151,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3000:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3016:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "3033:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:3"
									},
									"src": "2973:75:3"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 156,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "3237:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:3"
									},
									"src": "3211:42:3"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 161,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3451:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:3"
									},
									"src": "3423:46:3"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 168,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3760:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "3778:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:3"
									},
									"src": "3727:68:3"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 173,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "4008:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:3"
									},
									"src": "3980:46:3"
								},
								{
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 178,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "4262:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:3"
									},
									"src": "4234:46:3"
								}
							],
							"scope": 227,
							"src": "2190:2092:3",
							"usedErrors": [
								137,
								142,
								151,
								156,
								161,
								168,
								173,
								178
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 180,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:3",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 191,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4860:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4876:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4893:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4909:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:3"
									},
									"src": "4827:99:3"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 196,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "5116:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:3"
									},
									"src": "5089:43:3"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 201,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "5331:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:3"
									},
									"src": "5302:47:3"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 208,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5651:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5669:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:3"
									},
									"src": "5616:68:3"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 213,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "5898:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:3"
									},
									"src": "5869:47:3"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 218,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "6153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:3"
									},
									"src": "6124:47:3"
								},
								{
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 225,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6494:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6513:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:3"
									},
									"src": "6462:73:3"
								}
							],
							"scope": 227,
							"src": "4430:2107:3",
							"usedErrors": [
								191,
								196,
								201,
								208,
								213,
								218,
								225
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1284
						],
						"ERC20": [
							741
						],
						"IERC20": [
							819
						],
						"IERC20Errors": [
							131
						],
						"IERC20Metadata": [
							845
						]
					},
					"id": 742,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 820,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 229,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 232,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 846,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 231,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 845,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 234,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 1285,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 233,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1284,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 236,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 742,
							"sourceUnit": 227,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 235,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 131,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 238,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1284,
										"src": "1133:7:4"
									},
									"id": 239,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 240,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "1142:6:4"
									},
									"id": 241,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 242,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 845,
										"src": "1150:14:4"
									},
									"id": 243,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 244,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 131,
										"src": "1166:12:4"
									},
									"id": 245,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 237,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 741,
							"linearizedBaseContracts": [
								741,
								131,
								845,
								819,
								1284
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 249,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 248,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 246,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 247,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 255,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 254,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 253,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 251,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 252,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 257,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 256,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 259,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 258,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 261,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 741,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 260,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 270,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 273,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 274,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 278,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 741,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										832
									],
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 284,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 259,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 283,
												"id": 285,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 281,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 741,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										838
									],
									"body": {
										"id": 295,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 293,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 261,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 292,
												"id": 294,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 296,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 290,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 741,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 299,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 741,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										768
									],
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 311,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 257,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 310,
												"id": 312,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 741,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										776
									],
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 322,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 324,
													"indexExpression": {
														"id": 323,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 321,
												"id": 325,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 741,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										786
									],
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													338
												],
												"declarations": [
													{
														"constant": false,
														"id": 338,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 350,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 337,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 341,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 339,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 338,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 344,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 342,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 336,
												"id": 349,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 741,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										796
									],
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 361,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 363,
														"indexExpression": {
															"id": 362,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 365,
													"indexExpression": {
														"id": 364,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 366,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 741,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										806
									],
									"body": {
										"id": 391,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 391,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 378,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 380,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															632,
															692
														],
														"referencedDeclaration": 632,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 377,
												"id": 390,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 392,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 741,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										818
									],
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													405
												],
												"declarations": [
													{
														"constant": false,
														"id": 405,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 423,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 404,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 406,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 411,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 416,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 415,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 403,
												"id": 422,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 401,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 741,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 434,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 435,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 438,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 448,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 447,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 443,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 441,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 440,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 446,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 467,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 469,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 741,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 481,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 482,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 518,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																493
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 493,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 518,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 492,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 497,
															"initialValue": {
																"baseExpression": {
																	"id": 494,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 249,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 496,
																"indexExpression": {
																	"id": 495,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 474,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 498,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 499,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 508,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 507,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 502,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 474,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 503,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 493,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 504,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 478,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 501,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 101,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 506,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 517,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 509,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 511,
																			"indexExpression": {
																				"id": 510,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 474,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 514,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 512,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 513,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 516,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 519,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 487,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 488,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 520,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 521,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 524,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 539,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 538,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 532,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 534,
																			"indexExpression": {
																				"id": 533,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 476,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 535,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 537,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 540,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 531,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 530,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 526,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 257,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 527,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 529,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 542,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 543,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 544,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 541,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 741,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 556,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 551,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 557,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 563,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 562,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 568,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 741,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 589,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 603,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 602,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 596,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 595,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 601,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 605,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 614,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 741,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 626,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 624,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															632,
															692
														],
														"referencedDeclaration": 692,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 741,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 691,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 644,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 635,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 645,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 653,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 651,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 650,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 656,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 660,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 673,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 672,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 668,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 667,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 666,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 669,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 665,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 671,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 674,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 677,
															"indexExpression": {
																"id": 675,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 635,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 678,
														"indexExpression": {
															"id": 676,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 679,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 682,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 690,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 689,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 684,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 685,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 686,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 639,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 683,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 688,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 692,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 741,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 739,
										"nodeType": "Block",
										"src": "10504:387:4",
										"statements": [
											{
												"assignments": [
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 739,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 702,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 708,
												"initialValue": {
													"arguments": [
														{
															"id": 705,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 704,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 709,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 711,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 710,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 738,
												"nodeType": "IfStatement",
												"src": "10576:309:4",
												"trueBody": {
													"id": 737,
													"nodeType": "Block",
													"src": "10618:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 716,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "10636:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 717,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "10655:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 726,
															"nodeType": "IfStatement",
															"src": "10632:130:4",
															"trueBody": {
																"id": 725,
																"nodeType": "Block",
																"src": "10662:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 720,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 697,
																					"src": "10714:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 721,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "10723:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 722,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 699,
																					"src": "10741:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 719,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 120,
																				"src": "10687:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 723,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 724,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:4"
																	}
																]
															}
														},
														{
															"id": 736,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 728,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 695,
																				"src": "10812:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 729,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 697,
																				"src": "10819:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 730,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "10828:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 731,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 699,
																					"src": "10847:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 733,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 727,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				632,
																				692
																			],
																			"referencedDeclaration": 692,
																			"src": "10803:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 735,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 693,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 741,
									"src": "10415:476:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 742,
							"src": "1106:9787:4",
							"usedErrors": [
								101,
								106,
								111,
								120,
								125,
								130
							],
							"usedEvents": [
								753,
								762
							]
						}
					],
					"src": "105:10789:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							819
						]
					},
					"id": 820,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 743,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 744,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 819,
							"linearizedBaseContracts": [
								819
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 753,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 762,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 819,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 819,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 819,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 796,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 796,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 819,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 797,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 803,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 819,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 818,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 815,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 819,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 820,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								753,
								762
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							819
						],
						"IERC20Metadata": [
							845
						]
					},
					"id": 846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 821,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 846,
							"sourceUnit": 820,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 822,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 825,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 819,
										"src": "306:6:6"
									},
									"id": 826,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 824,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 845,
							"linearizedBaseContracts": [
								845,
								819
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 829,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 845,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 838,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 838,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 835,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 845,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 839,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 841,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 845,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 846,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								753,
								762
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							81
						],
						"IERC20": [
							819
						],
						"SafeERC20": [
							1254
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 847,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 820,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 848,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 819,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 851,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 82,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 850,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 81,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 852,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 857,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 866,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 881,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 786,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 883,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 872,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 874,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 885,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 879,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 877,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 888,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 869,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 868,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 819,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 1254,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 904,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 907,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 894,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 818,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 896,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 898,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 911,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 900,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 912,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 905,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 903,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 893,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 892,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 819,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 1254,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2548:139:7",
										"statements": [
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 947,
														"src": "2558:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 934,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1254",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1254",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 932,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 936,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2612:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 930,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2581:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 796,
														"src": "2581:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "2643:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 941,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "2650:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 942,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 929,
																"src": "2659:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 943,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "2674:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$819",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 939,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "2630:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:7"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2493:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 920,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 919,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "2493:6:7"
													},
													"referencedDeclaration": 819,
													"src": "2493:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2507:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "2524:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:7"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:7"
									},
									"scope": 1254,
									"src": "2462:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "3453:370:7",
										"statements": [
											{
												"id": 989,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:7",
												"statements": [
													{
														"assignments": [
															960
														],
														"declarations": [
															{
																"constant": false,
																"id": 960,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 989,
																"src": "3487:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 959,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 969,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 965,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1254",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1254",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 963,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 967,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "3545:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 961,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "3514:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$819",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 796,
																"src": "3514:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 970,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 960,
																"src": "3571:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 971,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 956,
																"src": "3590:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 980,
														"nodeType": "IfStatement",
														"src": "3567:160:7",
														"trueBody": {
															"id": 979,
															"nodeType": "Block",
															"src": "3609:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 974,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "3667:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 975,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 960,
																				"src": "3676:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 976,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "3694:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 973,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 866,
																			"src": "3634:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 978,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 982,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 952,
																	"src": "3753:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$819",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 983,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "3760:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 984,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 960,
																		"src": "3769:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 985,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 956,
																		"src": "3788:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$819",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 981,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1038,
																"src": "3740:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 988,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3386:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 951,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 950,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "3386:6:7"
													},
													"referencedDeclaration": 819,
													"src": "3386:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3400:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "3417:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:7"
									},
									"returnParameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:7"
									},
									"scope": 1254,
									"src": "3355:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "4477:303:7",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 1037,
														"src": "4487:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1002,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1006,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "4530:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$819",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 806,
															"src": "4530:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1008,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 997,
																	"src": "4546:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1009,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "4555:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1010,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1004,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1005,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:7"
											},
											{
												"condition": {
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 1014,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 995,
																"src": "4602:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$819",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1015,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "4609:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$819",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1013,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1253,
															"src": "4578:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "4573:201:7",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "4624:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1019,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4658:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1022,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 995,
																					"src": "4680:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$819",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 806,
																				"src": "4680:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1024,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 997,
																						"src": "4696:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1025,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1026,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1020,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1018,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "4638:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1029,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1031,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 995,
																		"src": "4743:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1032,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1003,
																		"src": "4750:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$819",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1030,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1212,
																	"src": "4723:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1034,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4422:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "4422:6:7"
													},
													"referencedDeclaration": 819,
													"src": "4422:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4436:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "4453:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:7"
									},
									"scope": 1254,
									"src": "4400:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "5227:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1051,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "5241:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1065,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "5350:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1066,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "5354:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1067,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1048,
																	"src": "5361:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1063,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5328:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 32,
																"src": "5328:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1078,
													"nodeType": "IfStatement",
													"src": "5323:117:7",
													"trueBody": {
														"id": 1077,
														"nodeType": "Block",
														"src": "5368:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1073,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1042,
																					"src": "5422:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1072,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1071,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1070,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "5389:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1076,
																"nodeType": "RevertStatement",
																"src": "5382:47:7"
															}
														]
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "5237:203:7",
												"trueBody": {
													"id": 1062,
													"nodeType": "Block",
													"src": "5262:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1057,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5289:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1058,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "5296:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1059,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "5300:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1056,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 890,
																	"src": "5276:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1061,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "5156:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1040,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5156:8:7"
													},
													"referencedDeclaration": 81,
													"src": "5156:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "5172:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "5184:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "5199:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1047,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:7"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:7"
									},
									"scope": 1254,
									"src": "5124:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "5965:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1096,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "5979:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1111,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "6102:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1112,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "6108:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1113,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "6112:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1114,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "6119:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1109,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1085,
																	"src": "6076:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 58,
																"src": "6076:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1125,
													"nodeType": "IfStatement",
													"src": "6071:127:7",
													"trueBody": {
														"id": 1124,
														"nodeType": "Block",
														"src": "6126:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1120,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1085,
																					"src": "6180:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1118,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1117,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "6147:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1123,
																"nodeType": "RevertStatement",
																"src": "6140:47:7"
															}
														]
													}
												},
												"id": 1126,
												"nodeType": "IfStatement",
												"src": "5975:223:7",
												"trueBody": {
													"id": 1108,
													"nodeType": "Block",
													"src": "6000:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1102,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1085,
																		"src": "6031:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1103,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1087,
																		"src": "6038:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1104,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "6044:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1105,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "6048:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1101,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "6014:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1107,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5843:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1084,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1083,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "5843:8:7"
													},
													"referencedDeclaration": 81,
													"src": "5843:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5867:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5889:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "5932:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1092,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:7"
									},
									"returnParameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:7"
									},
									"scope": 1254,
									"src": "5798:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "6971:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1141,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "6985:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 1155,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "7093:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1156,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "7097:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1157,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "7104:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1153,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "7072:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$81",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 80,
																"src": "7072:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1168,
													"nodeType": "IfStatement",
													"src": "7067:116:7",
													"trueBody": {
														"id": 1167,
														"nodeType": "Block",
														"src": "7111:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1163,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "7165:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$81",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1161,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1160,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "7132:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1166,
																"nodeType": "RevertStatement",
																"src": "7125:47:7"
															}
														]
													}
												},
												"id": 1169,
												"nodeType": "IfStatement",
												"src": "6981:202:7",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "7006:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1147,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "7033:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1148,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "7040:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1149,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1136,
																		"src": "7044:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$81",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1146,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "7020:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1151,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6900:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$81",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1131,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1130,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 81,
														"src": "6900:8:7"
													},
													"referencedDeclaration": 81,
													"src": "6900:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$81",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6916:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6928:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "6943:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:7"
									},
									"returnParameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:7"
									},
									"scope": 1254,
									"src": "6869:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "7756:650:7",
										"statements": [
											{
												"assignments": [
													1181
												],
												"declarations": [
													{
														"constant": false,
														"id": 1181,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "7766:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1182,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:7"
											},
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "7794:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1183,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1185,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:7"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:7",
													"nodeType": "YulBlock",
													"src": "7848:396:7",
													"statements": [
														{
															"nativeSrc": "7862:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:7"
																		},
																		"nativeSrc": "7882:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:7"
																		},
																		"nativeSrc": "7899:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:7"
																		},
																		"nativeSrc": "7916:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:7"
																},
																"nativeSrc": "7877:60:7",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:7",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:7",
																"nodeType": "YulBlock",
																"src": "7998:157:7",
																"statements": [
																	{
																		"nativeSrc": "8016:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:7"
																			},
																			"nativeSrc": "8027:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:7"
																					},
																					"nativeSrc": "8078:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:7"
																			},
																			"nativeSrc": "8055:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:7"
																		},
																		"nativeSrc": "8055:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:7"
																					},
																					"nativeSrc": "8124:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:7"
																			},
																			"nativeSrc": "8112:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:7"
																		},
																		"nativeSrc": "8112:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:7"
																},
																"nativeSrc": "7982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:7"
															},
															"nativeSrc": "7979:176:7",
															"nodeType": "YulIf",
															"src": "7979:176:7"
														},
														{
															"nativeSrc": "8168:30:7",
															"nodeType": "YulAssignment",
															"src": "8168:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:7"
																},
																"nativeSrc": "8182:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:7"
																}
															]
														},
														{
															"nativeSrc": "8211:23:7",
															"nodeType": "YulAssignment",
															"src": "8211:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:7"
																},
																"nativeSrc": "8226:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1177,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1177,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1181,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1184,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1175,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1186,
												"nodeType": "InlineAssembly",
												"src": "7823:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1187,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "8258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1198,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "8310:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1192,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "8284:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$819",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$819",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1190,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1195,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1210,
												"nodeType": "IfStatement",
												"src": "8254:146:7",
												"trueBody": {
													"id": 1209,
													"nodeType": "Block",
													"src": "8328:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1205,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1175,
																				"src": "8382:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$819",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$819",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1203,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1202,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "8349:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1208,
															"nodeType": "RevertStatement",
															"src": "8342:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "7715:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1174,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1173,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "7715:6:7"
													},
													"referencedDeclaration": 819,
													"src": "7715:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "7729:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1176,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:7"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:7"
									},
									"scope": 1254,
									"src": "7686:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "8997:391:7",
										"statements": [
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "9007:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1223,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1225,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:7"
											},
											{
												"assignments": [
													1227
												],
												"declarations": [
													{
														"constant": false,
														"id": 1227,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "9029:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1228,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:7"
											},
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 1252,
														"src": "9057:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:7",
													"nodeType": "YulBlock",
													"src": "9111:174:7",
													"statements": [
														{
															"nativeSrc": "9125:71:7",
															"nodeType": "YulAssignment",
															"src": "9125:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:7"
																		},
																		"nativeSrc": "9141:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:7"
																		},
																		"nativeSrc": "9158:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:7"
																		},
																		"nativeSrc": "9175:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:7"
																},
																"nativeSrc": "9136:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:7"
																}
															]
														},
														{
															"nativeSrc": "9209:30:7",
															"nodeType": "YulAssignment",
															"src": "9209:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:7"
																},
																"nativeSrc": "9223:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:7"
																}
															]
														},
														{
															"nativeSrc": "9252:23:7",
															"nodeType": "YulAssignment",
															"src": "9252:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:7"
																},
																"nativeSrc": "9267:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1218,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:7",
														"valueSize": 1
													},
													{
														"declaration": 1227,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:7",
														"valueSize": 1
													},
													{
														"declaration": 1230,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:7",
														"valueSize": 1
													},
													{
														"declaration": 1224,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:7",
														"valueSize": 1
													},
													{
														"declaration": 1216,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1232,
												"nodeType": "InlineAssembly",
												"src": "9086:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1224,
														"src": "9301:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1234,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1227,
																		"src": "9313:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1245,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1230,
																		"src": "9364:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1239,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1216,
																						"src": "9339:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$819",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$819",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1237,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1240,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1249,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1222,
												"id": 1251,
												"nodeType": "Return",
												"src": "9294:87:7"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8941:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$819",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1214,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 819,
														"src": "8941:6:7"
													},
													"referencedDeclaration": 819,
													"src": "8941:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$819",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8955:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:7"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "8991:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:7"
									},
									"scope": 1254,
									"src": "8908:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1255,
							"src": "698:8692:7",
							"usedErrors": [
								857,
								866
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1284
						]
					},
					"id": 1285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1284,
							"linearizedBaseContracts": [
								1284
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1262,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1264,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1284,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1273,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1268,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1284,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1279,
												"id": 1281,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1284,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1285,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1353
						]
					},
					"id": 1354,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1287,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:9",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1353,
							"linearizedBaseContracts": [
								1353
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1290,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "1818:40:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1288,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1289,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1293,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "1864:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1291,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1292,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1295,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1353,
									"src": "1907:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1294,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:9",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1298,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:9"
									},
									"src": "1994:37:9"
								},
								{
									"body": {
										"id": 1305,
										"nodeType": "Block",
										"src": "2051:38:9",
										"statements": [
											{
												"expression": {
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1301,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "2061:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1302,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "2071:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:9"
											}
										]
									},
									"id": 1306,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:9"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:9"
									},
									"scope": 1353,
									"src": "2037:52:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2490:79:9",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1309,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "2500:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:9"
											},
											{
												"id": 1312,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1313,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "2542:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:9"
											}
										]
									},
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:9",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1317,
									"name": "nonReentrant",
									"nameLocation": "2475:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:9"
									},
									"src": "2466:103:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "2614:268:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1320,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "2702:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1321,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "2713:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"nodeType": "IfStatement",
												"src": "2698:86:9",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "2722:62:9",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1323,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "2743:28:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1325,
															"nodeType": "RevertStatement",
															"src": "2736:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1328,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "2858:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1329,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "2868:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:9"
											}
										]
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:9"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:9"
									},
									"scope": 1353,
									"src": "2575:307:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1340,
										"nodeType": "Block",
										"src": "2926:170:9",
										"statements": [
											{
												"expression": {
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1336,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3068:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1337,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "3078:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1339,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:9"
											}
										]
									},
									"id": 1341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:9"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:9"
									},
									"scope": 1353,
									"src": "2888:208:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1351,
										"nodeType": "Block",
										"src": "3339:42:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1347,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3356:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1348,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3367:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1350,
												"nodeType": "Return",
												"src": "3349:25:9"
											}
										]
									},
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:9",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1352,
												"src": "3333:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:9"
									},
									"scope": 1353,
									"src": "3275:106:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1354,
							"src": "1030:2353:9",
							"usedErrors": [
								1298
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1356,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1365,
							"linearizedBaseContracts": [
								1365
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1357,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1358,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1365,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1366,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/SaleContract.sol": {
				"ast": {
					"absolutePath": "contracts/SaleContract.sol",
					"exportedSymbols": {
						"Context": [
							1284
						],
						"ERC20": [
							741
						],
						"IERC1363": [
							81
						],
						"IERC20": [
							819
						],
						"IERC20Errors": [
							131
						],
						"IERC20Metadata": [
							845
						],
						"ReentrancyGuard": [
							1353
						],
						"SafeERC20": [
							1254
						],
						"SaleContract": [
							1745
						]
					},
					"id": 1746,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 742,
							"src": "58:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 1255,
							"src": "114:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1746,
							"sourceUnit": 1354,
							"src": "180:59:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1371,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"266:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1353,
										"src": "266:15:11"
									},
									"id": 1372,
									"nodeType": "InheritanceSpecifier",
									"src": "266:15:11"
								}
							],
							"canonicalName": "SaleContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1745,
							"linearizedBaseContracts": [
								1745,
								1353
							],
							"name": "SaleContract",
							"nameLocation": "250:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1376,
									"libraryName": {
										"id": 1373,
										"name": "SafeERC20",
										"nameLocations": [
											"294:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1254,
										"src": "294:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "288:26:11",
									"typeName": {
										"id": 1375,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1374,
											"name": "ERC20",
											"nameLocations": [
												"308:5:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 741,
											"src": "308:5:11"
										},
										"referencedDeclaration": 741,
										"src": "308:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$741",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"canonicalName": "SaleContract.Listing",
									"id": 1387,
									"members": [
										{
											"constant": false,
											"id": 1378,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "353:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "345:23:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1377,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "345:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1380,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "386:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "378:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1379,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "378:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1382,
											"mutability": "mutable",
											"name": "tokens",
											"nameLocation": "409:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "401:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1381,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1384,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "433:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "425:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1383,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "425:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1386,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "457:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1387,
											"src": "449:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1385,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "449:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "327:7:11",
									"nodeType": "StructDefinition",
									"scope": 1745,
									"src": "320:154:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 1392,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "515:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "480:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1387_storage_$",
										"typeString": "mapping(uint256 => struct SaleContract.Listing)"
									},
									"typeName": {
										"id": 1391,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1388,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "488:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "480:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1387_storage_$",
											"typeString": "mapping(uint256 => struct SaleContract.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1390,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1389,
												"name": "Listing",
												"nameLocations": [
													"499:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1387,
												"src": "499:7:11"
											},
											"referencedDeclaration": 1387,
											"src": "499:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
												"typeString": "struct SaleContract.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c2c9c7d",
									"id": 1394,
									"mutability": "mutable",
									"name": "listingCounter",
									"nameLocation": "544:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "529:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1393,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "17c73ff0",
									"id": 1397,
									"mutability": "constant",
									"name": "COMMISSION_WALLET",
									"nameLocation": "588:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "564:86:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1395,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846434638643262303938423331363036353462626144613161383736393438336337314332383862",
										"id": 1396,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "608:42:11",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xFCF8d2b098B3160654bbaDa1a8769483c71C288b"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1bf1de9b",
									"id": 1400,
									"mutability": "constant",
									"name": "COMMISSION_PERCENTAGE",
									"nameLocation": "680:21:11",
									"nodeType": "VariableDeclaration",
									"scope": 1745,
									"src": "656:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1398,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "656:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1399,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "704:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b",
									"id": 1414,
									"name": "ListingAdded",
									"nameLocation": "719:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "740:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "732:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "732:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "767:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "751:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "791:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "775:31:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "775:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "816:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "808:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "808:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "831:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "823:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "847:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "839:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "731:127:11"
									},
									"src": "713:146:11"
								},
								{
									"anonymous": false,
									"eventSelector": "dca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf5",
									"id": 1426,
									"name": "TokensPurchased",
									"nameLocation": "870:15:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "894:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "886:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "921:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "905:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "905:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "936:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "928:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "957:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "949:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": false,
												"mutability": "mutable",
												"name": "withERC20",
												"nameLocation": "969:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "964:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1423,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "964:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:94:11"
									},
									"src": "864:116:11"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "1089:876:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1438,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "1107:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1115:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1107:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1118:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 1437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1099:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1099:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "1099:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1445,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1170:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1179:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1170:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1182:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															},
															"value": "Tokens must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															}
														],
														"id": 1444,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1162:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "1162:55:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1452,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "1235:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1246:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1235:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1249:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															},
															"value": "Duration must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															}
														],
														"id": 1451,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1227:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1227:59:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "1227:59:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1459,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "1304:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1331:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1323:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1460,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1323:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1323:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1304:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6e74726163742061646472657373",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1335:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															},
															"value": "Invalid contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															}
														],
														"id": 1458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1296:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1296:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "1296:66:11"
											},
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1379:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1534,
														"src": "1373:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$741",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1469,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1468,
																"name": "ERC20",
																"nameLocations": [
																	"1373:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "1373:5:11"
															},
															"referencedDeclaration": 741,
															"src": "1373:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"arguments": [
														{
															"id": 1472,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "1393:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1471,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1387:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$741_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$741",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1373:36:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1478,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1443:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1447:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1443:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1482,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1463:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1745",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1745",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 1481,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1455:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1480,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1455:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1455:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1476,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "1427:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$741",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:9:11",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 368,
																	"src": "1427:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1427:42:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1485,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1473:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1427:52:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1481:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															},
															"value": "Token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1419:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1419:88:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "ExpressionStatement",
												"src": "1419:88:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1493,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1541:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1545:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1541:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1497,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1561:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SaleContract_$1745",
																		"typeString": "contract SaleContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SaleContract_$1745",
																		"typeString": "contract SaleContract"
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1553:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1495,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1553:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1499,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "1568:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1490,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "1518:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1524:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "1518:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "1518:57:11"
											},
											{
												"expression": {
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1586:16:11",
													"subExpression": {
														"id": 1502,
														"name": "listingCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "1586:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1504,
												"nodeType": "ExpressionStatement",
												"src": "1586:16:11"
											},
											{
												"expression": {
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1505,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "1612:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1387_storage_$",
																"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
															}
														},
														"id": 1507,
														"indexExpression": {
															"id": 1506,
															"name": "listingCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1621:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1612:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1387_storage",
															"typeString": "struct SaleContract.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1509,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "1678:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1510,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "1714:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1511,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1741:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1512,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1769:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1773:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1769:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1514,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1805:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1811:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1805:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1516,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1434,
																	"src": "1823:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1805:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1508,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "1639:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$1387_storage_ptr_$",
																"typeString": "type(struct SaleContract.Listing storage pointer)"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1661:15:11",
															"1707:5:11",
															"1733:6:11",
															"1761:6:11",
															"1793:10:11"
														],
														"names": [
															"contractAddress",
															"price",
															"tokens",
															"seller",
															"expiration"
														],
														"nodeType": "FunctionCall",
														"src": "1639:203:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1387_memory_ptr",
															"typeString": "struct SaleContract.Listing memory"
														}
													},
													"src": "1612:230:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1387_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"id": 1520,
												"nodeType": "ExpressionStatement",
												"src": "1612:230:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1522,
															"name": "listingCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "1871:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1523,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1887:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1891:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1887:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1525,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "1899:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "1916:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1527,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "1923:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1528,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1931:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1937:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1931:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1530,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "1949:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1931:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1521,
														"name": "ListingAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "1858:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:100:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1533,
												"nodeType": "EmitStatement",
												"src": "1853:105:11"
											}
										]
									},
									"functionSelector": "9ffae41b",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "995:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1014:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1006:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1029:15:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1021:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1054:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1046:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1070:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1062:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1062:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:74:11"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1089:0:11"
									},
									"scope": 1745,
									"src": "986:979:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "2144:1096:11",
										"statements": [
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2170:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2154:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 1549,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1548,
																"name": "Listing",
																"nameLocations": [
																	"2154:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1387,
																"src": "2154:7:11"
															},
															"referencedDeclaration": 1387,
															"src": "2154:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1554,
												"initialValue": {
													"baseExpression": {
														"id": 1551,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "2180:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1387_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 1553,
													"indexExpression": {
														"id": 1552,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1537,
														"src": "2189:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2180:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1387_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2154:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1556,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "2217:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2225:6:11",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1382,
																"src": "2217:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2234:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2217:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2237:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															},
															"value": "Listing does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															}
														],
														"id": 1555,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2209:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2209:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1564,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2280:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2286:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2280:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1566,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "2299:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1567,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2307:10:11",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1386,
																"src": "2299:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2280:37:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206861732065787069726564",
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2319:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															},
															"value": "Listing has expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															}
														],
														"id": 1563,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2272:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2272:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "2272:69:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1573,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "2359:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2367:6:11",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1382,
																"src": "2359:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1575,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "2377:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2359:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67",
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2390:30:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																"typeString": "literal_string \"Not enough tokens in listing\""
															},
															"value": "Not enough tokens in listing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																"typeString": "literal_string \"Not enough tokens in listing\""
															}
														],
														"id": 1572,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2351:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2351:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "2351:70:11"
											},
											{
												"assignments": [
													1581
												],
												"declarations": [
													{
														"constant": false,
														"id": 1581,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "2440:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2432:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1580,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2432:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1582,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "2453:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2461:5:11",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1380,
														"src": "2453:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1584,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "2469:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2453:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2432:48:11"
											},
											{
												"assignments": [
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "commission",
														"nameLocation": "2498:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2490:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2490:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1589,
																	"name": "totalPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "2512:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1590,
																	"name": "COMMISSION_PERCENTAGE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "2525:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2512:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1592,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2511:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2550:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2511:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2490:63:11"
											},
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "totalPaymentAmount",
														"nameLocation": "2571:18:11",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2563:26:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1596,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2563:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1601,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1598,
														"name": "totalPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "2592:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1599,
														"name": "commission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "2605:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2592:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2563:52:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "2633:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1604,
																"name": "totalPaymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "2650:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2633:35:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2670:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															},
															"value": "Incorrect payment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2625:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2625:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1608,
												"nodeType": "ExpressionStatement",
												"src": "2625:72:11"
											},
											{
												"assignments": [
													1611
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "paymentERC20",
														"nameLocation": "2714:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1675,
														"src": "2708:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$741",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1610,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1609,
																"name": "ERC20",
																"nameLocations": [
																	"2708:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "2708:5:11"
															},
															"referencedDeclaration": 741,
															"src": "2708:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1615,
												"initialValue": {
													"arguments": [
														{
															"id": 1613,
															"name": "paymentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "2735:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1612,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "2729:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$741_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2729:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$741",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2708:40:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1619,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2789:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1620,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2793:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2789:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1623,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2809:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1745",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1745",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 1622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2801:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2801:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2801:13:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1617,
																		"name": "paymentERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1611,
																		"src": "2766:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$741",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1618,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2779:9:11",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 368,
																	"src": "2766:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2766:49:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1626,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "2819:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2766:66:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2834:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															},
															"value": "Payment token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															}
														],
														"id": 1616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2758:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2758:110:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "2758:110:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1634,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2909:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2913:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2909:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1636,
															"name": "COMMISSION_WALLET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "2921:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1637,
															"name": "commission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "2940:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1631,
															"name": "paymentERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2879:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2892:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "2879:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2879:72:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1639,
												"nodeType": "ExpressionStatement",
												"src": "2879:72:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2991:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2995:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2991:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1645,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "3003:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3011:6:11",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1384,
															"src": "3003:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1647,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "3019:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1640,
															"name": "paymentERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "2961:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2974:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 917,
														"src": "2961:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2961:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "2961:69:11"
											},
											{
												"expression": {
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1650,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "3041:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3049:6:11",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "3041:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1653,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "3059:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3041:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "3041:29:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1661,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3124:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3128:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3124:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1663,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "3136:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1657,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "3086:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																			"typeString": "struct SaleContract.Listing storage pointer"
																		}
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3094:15:11",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1378,
																	"src": "3086:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1656,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "3080:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$741_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3080:30:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3111:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 890,
														"src": "3080:43:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3080:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "3080:68:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1667,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "3180:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1668,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3191:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3195:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3191:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1670,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "3203:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1671,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1581,
															"src": "3216:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3228:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1666,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "3164:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,bool)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "EmitStatement",
												"src": "3159:74:11"
											}
										]
									},
									"functionSelector": "7a82a87f",
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1546,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1545,
												"name": "nonReentrant",
												"nameLocations": [
													"2131:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "2131:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "2131:12:11"
										}
									],
									"name": "buyTokensWithERC20",
									"nameLocation": "1980:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "2016:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2008:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2043:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2035:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "paymentToken",
												"nameLocation": "2072:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2064:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2064:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "2102:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "2094:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:123:11"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:11"
									},
									"scope": 1745,
									"src": "1971:1269:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1743,
										"nodeType": "Block",
										"src": "3322:490:11",
										"statements": [
											{
												"assignments": [
													1685
												],
												"declarations": [
													{
														"constant": false,
														"id": 1685,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "3348:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1743,
														"src": "3332:23:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 1684,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1683,
																"name": "Listing",
																"nameLocations": [
																	"3332:7:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1387,
																"src": "3332:7:11"
															},
															"referencedDeclaration": 1387,
															"src": "3332:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1689,
												"initialValue": {
													"baseExpression": {
														"id": 1686,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "3358:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1387_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 1688,
													"indexExpression": {
														"id": 1687,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3367:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3358:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1387_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3332:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1691,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3395:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3399:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3395:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1693,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "3409:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1694,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3417:6:11",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1384,
																"src": "3409:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3395:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177",
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3425:34:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																"typeString": "literal_string \"Only listing seller can withdraw\""
															},
															"value": "Only listing seller can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																"typeString": "literal_string \"Only listing seller can withdraw\""
															}
														],
														"id": 1690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3387:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3387:73:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "3387:73:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1700,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3478:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3484:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3478:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1702,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "3496:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3504:10:11",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1386,
																"src": "3496:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3478:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720686173206e6f7420656e646564",
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3516:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																"typeString": "literal_string \"Listing has not ended\""
															},
															"value": "Listing has not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																"typeString": "literal_string \"Listing has not ended\""
															}
														],
														"id": 1699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3470:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3470:70:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "3470:70:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1709,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1685,
																	"src": "3558:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3566:6:11",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1382,
																"src": "3558:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3575:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3558:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3578:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1708,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3550:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3550:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1715,
												"nodeType": "ExpressionStatement",
												"src": "3550:52:11"
											},
											{
												"assignments": [
													1717
												],
												"declarations": [
													{
														"constant": false,
														"id": 1717,
														"mutability": "mutable",
														"name": "tokenAmountToWithdraw",
														"nameLocation": "3621:21:11",
														"nodeType": "VariableDeclaration",
														"scope": 1743,
														"src": "3613:29:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3613:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1720,
												"initialValue": {
													"expression": {
														"id": 1718,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1685,
														"src": "3645:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
															"typeString": "struct SaleContract.Listing storage pointer"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3653:6:11",
													"memberName": "tokens",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1382,
													"src": "3645:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3613:46:11"
											},
											{
												"expression": {
													"id": 1725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1721,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1685,
															"src": "3669:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3677:6:11",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1382,
														"src": "3669:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3686:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3669:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1726,
												"nodeType": "ExpressionStatement",
												"src": "3669:18:11"
											},
											{
												"assignments": [
													1729
												],
												"declarations": [
													{
														"constant": false,
														"id": 1729,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3704:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1743,
														"src": "3698:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$741",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1728,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1727,
																"name": "ERC20",
																"nameLocations": [
																	"3698:5:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 741,
																"src": "3698:5:11"
															},
															"referencedDeclaration": 741,
															"src": "3698:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1731,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1685,
																"src": "3718:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1387_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3726:15:11",
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1378,
															"src": "3718:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1730,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "3712:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$741_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3712:30:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$741",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3698:44:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1738,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3771:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3775:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3771:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1740,
															"name": "tokenAmountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1717,
															"src": "3783:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1735,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "3752:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$741",
																"typeString": "contract ERC20"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3758:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 890,
														"src": "3752:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$819_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$819_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3752:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1742,
												"nodeType": "ExpressionStatement",
												"src": "3752:53:11"
											}
										]
									},
									"functionSelector": "f25713bf",
									"id": 1744,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1681,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1680,
												"name": "nonReentrant",
												"nameLocations": [
													"3309:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1317,
												"src": "3309:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3309:12:11"
										}
									],
									"name": "withdrawTokensFromListing",
									"nameLocation": "3255:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "3289:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1744,
												"src": "3281:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3280:19:11"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3322:0:11"
									},
									"scope": 1745,
									"src": "3246:566:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1746,
							"src": "241:3574:11",
							"usedErrors": [
								857,
								1298
							],
							"usedEvents": [
								1414,
								1426
							]
						}
					],
					"src": "32:3784:11"
				},
				"id": 11
			}
		}
	}
}