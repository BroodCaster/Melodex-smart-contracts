{
	"id": "ad4bbff66c1a6c0212ed557eb774febd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SaleContract.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract SaleContract is ReentrancyGuard, Ownable {\n    using SafeERC20 for ERC20;\n\n    constructor () Ownable(msg.sender) { }\n\n    struct Listing {\n        address contractAddress;\n        uint256 price;\n        uint256 tokens;\n        address seller;\n        uint256 expiration;\n    }\n\n    mapping(uint256 => Listing) public listings;\n    uint256 public listingCounter;\n    address public COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b;\n    uint256 public constant COMMISSION_PERCENTAGE = 10;\n    address public constant MELS_ADDRESS = 0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697;\n\n    event ListingAdded(uint256 listingId, address indexed seller, address indexed contractAddress, uint256 price, uint256 tokens, uint256 expiration);\n    event TokensPurchased(uint256 listingId, address indexed buyer, uint256 tokenAmount, uint256 price, bool withERC20);\n\n    function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {\n        require(price > 0, \"Price must be greater than zero\");\n        require(tokens > 0, \"Tokens must be greater than zero\");\n        require(duration > 0, \"Duration must be greater than zero\");\n        require(contractAddress != address(0), \"Invalid contract address\");\n\n        ERC20 token = ERC20(contractAddress);\n        require(token.allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\");\n\n        token.safeTransferFrom(msg.sender, address(this), tokens);\n\n        listingCounter++;\n        listings[listingCounter] = Listing({\n            contractAddress: contractAddress,\n            price: price,\n            tokens: tokens,\n            seller: msg.sender,\n            expiration: block.timestamp + duration\n        });\n\n        emit ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration);\n    }\n\n    function buyTokensWithERC20(\n        uint256 listingId,\n        uint256 tokenAmount,\n        uint256 paymentAmount\n    ) external nonReentrant {\n        Listing storage listing = listings[listingId];\n        require(listing.tokens > 0, \"Listing does not exist\");\n        require(block.timestamp <= listing.expiration, \"Listing has expired\");\n        require(listing.tokens >= tokenAmount, \"Not enough tokens in listing\");\n\n        uint256 totalPrice = listing.price * tokenAmount;\n        uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100;\n        uint256 totalPaymentAmount = totalPrice + commission;\n        require(paymentAmount == totalPaymentAmount, \"Incorrect payment amount\");\n\n        ERC20 paymentERC20 = ERC20(MELS_ADDRESS);\n        require(paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\");\n\n        paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission);\n        paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice);\n\n        listing.tokens -= tokenAmount;\n        ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount);\n\n        emit TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true);\n    }\n\n    function withdrawTokensFromListing(uint256 listingId) external nonReentrant {\n        Listing storage listing = listings[listingId];\n        require(msg.sender == listing.seller, \"Only listing seller can withdraw\");\n        require(block.timestamp > listing.expiration, \"Listing has not ended\");\n        require(listing.tokens > 0, \"No tokens to withdraw\");\n\n        uint256 tokenAmountToWithdraw = listing.tokens;\n        listing.tokens = 0;\n\n        ERC20 token = ERC20(listing.contractAddress);\n        token.safeTransfer(msg.sender, tokenAmountToWithdraw);\n    }\n\n    function setCommissionWallet(address newWallet) external onlyOwner {\n        require(newWallet != address(0), \"Invalid address\");\n        COMMISSION_WALLET = newWallet;\n    }\n\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 405,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 407,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 409,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:9390  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x22 0xC DUP16 0xEE 0x1E 0xEF 0xED PUSH3 0x84782D JUMPI DUP2 0xBE CALLER PUSH27 0x4E924C115A0D5256D7ECBF49E99F3764736F6C634300081C003300 ",
							"sourceMap": "698:8692:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 9390,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c220c8fee1eefed6284782d5781be337a4e924c115a0d5256d7ecbf49e99f3764736f6c634300081c0033",
									".code": [
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 9390,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SaleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1443,
								"contract": "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SaleContract.sol": {
				"SaleContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"name": "ListingAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "withERC20",
									"type": "bool"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "COMMISSION_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "COMMISSION_WALLET",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MELS_ADDRESS",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								}
							],
							"name": "addListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "paymentAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokensWithERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "listingCounter",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "listings",
							"outputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expiration",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newWallet",
									"type": "address"
								}
							],
							"name": "setCommissionWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "listingId",
									"type": "uint256"
								}
							],
							"name": "withdrawTokensFromListing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/SaleContract.sol\":309:4164  contract SaleContract is ReentrancyGuard, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SaleContract.sol\":720:762  0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n  0xfcf8d2b098b3160654bbada1a8769483c71c288b\n    /* \"contracts/SaleContract.sol\":685:762  address public COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/SaleContract.sol\":397:435  constructor () Ownable(msg.sender) { } */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/SaleContract.sol\":420:430  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n  0x01\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2068  _status */\n  0x00\n    /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2061:2082  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/SaleContract.sol\":309:4164  contract SaleContract is ReentrancyGuard, Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_15:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_16:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_21\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_17:\n    /* \"#utility.yul\":328:352   */\n  tag_23\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_16\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_9:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_25\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/SaleContract.sol\":309:4164  contract SaleContract is ReentrancyGuard, Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/SaleContract.sol\":309:4164  contract SaleContract is ReentrancyGuard, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d60b6ce\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x7d60b6ce\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9ffae41b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xde74e57b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf25713bf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x17c73ff0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1bf1de9b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x24f56afa\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27722e62\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6c2c9c7d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/SaleContract.sol\":685:762  address public COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":768:818  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_4:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":2170:3409  function buyTokensWithERC20(... */\n    tag_5:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/SaleContract.sol\":824:905  address public constant MELS_ADDRESS = 0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697 */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":650:679  uint256 public listingCounter */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/SaleContract.sol\":3987:4161  function setCommissionWallet(address newWallet) external onlyOwner {... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":1185:2164  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n    tag_11:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/SaleContract.sol\":601:644  mapping(uint256 => Listing) public listings */\n    tag_12:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_51\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaleContract.sol\":3415:3981  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n    tag_13:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/SaleContract.sol\":685:762  address public COMMISSION_WALLET = 0xFCF8d2b098B3160654bbaDa1a8769483c71C288b */\n    tag_17:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":768:818  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n    tag_21:\n        /* \"contracts/SaleContract.sol\":816:818  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":768:818  uint256 public constant COMMISSION_PERCENTAGE = 10 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":2170:3409  function buyTokensWithERC20(... */\n    tag_27:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_60\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_61\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_60:\n        /* \"contracts/SaleContract.sol\":2323:2346  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":2349:2357  listings */\n      0x02\n        /* \"contracts/SaleContract.sol\":2349:2368  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":2358:2367  listingId */\n      dup6\n        /* \"contracts/SaleContract.sol\":2349:2368  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":2323:2368  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2403:2404  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":2386:2393  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2386:2400  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2386:2404  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":2378:2431  require(listing.tokens > 0, \"Listing does not exist\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/SaleContract.sol\":2468:2475  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":2468:2486  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2449:2464  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":2449:2486  block.timestamp <= listing.expiration */\n      gt\n      iszero\n        /* \"contracts/SaleContract.sol\":2441:2510  require(block.timestamp <= listing.expiration, \"Listing has expired\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/SaleContract.sol\":2546:2557  tokenAmount */\n      dup3\n        /* \"contracts/SaleContract.sol\":2528:2535  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":2528:2542  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2528:2557  listing.tokens >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2520:2590  require(listing.tokens >= tokenAmount, \"Not enough tokens in listing\") */\n      tag_69\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_69:\n        /* \"contracts/SaleContract.sol\":2601:2619  uint256 totalPrice */\n      0x00\n        /* \"contracts/SaleContract.sol\":2638:2649  tokenAmount */\n      dup4\n        /* \"contracts/SaleContract.sol\":2622:2629  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":2622:2635  listing.price */\n      0x01\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":2622:2649  listing.price * tokenAmount */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/SaleContract.sol\":2601:2649  uint256 totalPrice = listing.price * tokenAmount */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2659:2677  uint256 commission */\n      0x00\n        /* \"contracts/SaleContract.sol\":2719:2722  100 */\n      0x64\n        /* \"contracts/SaleContract.sol\":816:818  10 */\n      0x0a\n        /* \"contracts/SaleContract.sol\":2681:2691  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":2681:2715  totalPrice * COMMISSION_PERCENTAGE */\n      tag_74\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_74:\n        /* \"contracts/SaleContract.sol\":2680:2722  (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/SaleContract.sol\":2659:2722  uint256 commission = (totalPrice * COMMISSION_PERCENTAGE) / 100 */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2732:2758  uint256 totalPaymentAmount */\n      0x00\n        /* \"contracts/SaleContract.sol\":2774:2784  commission */\n      dup2\n        /* \"contracts/SaleContract.sol\":2761:2771  totalPrice */\n      dup4\n        /* \"contracts/SaleContract.sol\":2761:2784  totalPrice + commission */\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"contracts/SaleContract.sol\":2732:2784  uint256 totalPaymentAmount = totalPrice + commission */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2819:2837  totalPaymentAmount */\n      dup1\n        /* \"contracts/SaleContract.sol\":2802:2815  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2802:2837  paymentAmount == totalPaymentAmount */\n      eq\n        /* \"contracts/SaleContract.sol\":2794:2866  require(paymentAmount == totalPaymentAmount, \"Incorrect payment amount\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"contracts/SaleContract.sol\":2877:2895  ERC20 paymentERC20 */\n      0x00\n        /* \"contracts/SaleContract.sol\":863:905  0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697 */\n      0x5fdaf637aed59b2e6d384d9e84d8ac5cf03c6697\n        /* \"contracts/SaleContract.sol\":2877:2917  ERC20 paymentERC20 = ERC20(MELS_ADDRESS) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":2988:3001  paymentAmount */\n      dup6\n        /* \"contracts/SaleContract.sol\":2935:2947  paymentERC20 */\n      dup2\n        /* \"contracts/SaleContract.sol\":2935:2957  paymentERC20.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":2958:2968  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":2978:2982  this */\n      address\n        /* \"contracts/SaleContract.sol\":2935:2984  paymentERC20.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/SaleContract.sol\":2935:3001  paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":2927:3037  require(paymentERC20.allowance(msg.sender, address(this)) >= paymentAmount, \"Payment token allowance too low\") */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/SaleContract.sol\":3048:3120  paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission) */\n      tag_91\n        /* \"contracts/SaleContract.sol\":3078:3088  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3090:3107  COMMISSION_WALLET */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3109:3119  commission */\n      dup6\n        /* \"contracts/SaleContract.sol\":3048:3060  paymentERC20 */\n      dup5\n        /* \"contracts/SaleContract.sol\":3048:3077  paymentERC20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/SaleContract.sol\":3048:3120  paymentERC20.safeTransferFrom(msg.sender, COMMISSION_WALLET, commission) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/SaleContract.sol\":3130:3199  paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice) */\n      tag_93\n        /* \"contracts/SaleContract.sol\":3160:3170  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3172:3179  listing */\n      dup7\n        /* \"contracts/SaleContract.sol\":3172:3186  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3188:3198  totalPrice */\n      dup7\n        /* \"contracts/SaleContract.sol\":3130:3142  paymentERC20 */\n      dup5\n        /* \"contracts/SaleContract.sol\":3130:3159  paymentERC20.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/SaleContract.sol\":3130:3199  paymentERC20.safeTransferFrom(msg.sender, listing.seller, totalPrice) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/SaleContract.sol\":3228:3239  tokenAmount */\n      dup7\n        /* \"contracts/SaleContract.sol\":3210:3217  listing */\n      dup6\n        /* \"contracts/SaleContract.sol\":3210:3224  listing.tokens */\n      0x02\n      add\n      0x00\n        /* \"contracts/SaleContract.sol\":3210:3239  listing.tokens -= tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3249:3317  ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount) */\n      tag_96\n        /* \"contracts/SaleContract.sol\":3293:3303  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3305:3316  tokenAmount */\n      dup9\n        /* \"contracts/SaleContract.sol\":3255:3262  listing */\n      dup8\n        /* \"contracts/SaleContract.sol\":3255:3278  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3249:3292  ERC20(listing.contractAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_97\n      swap1\n        /* \"contracts/SaleContract.sol\":3249:3317  ERC20(listing.contractAddress).safeTransfer(msg.sender, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_96:\n        /* \"contracts/SaleContract.sol\":3360:3370  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3333:3402  TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf5\n        /* \"contracts/SaleContract.sol\":3349:3358  listingId */\n      dup10\n        /* \"contracts/SaleContract.sol\":3372:3383  tokenAmount */\n      dup10\n        /* \"contracts/SaleContract.sol\":3385:3395  totalPrice */\n      dup8\n        /* \"contracts/SaleContract.sol\":3397:3401  true */\n      0x01\n        /* \"contracts/SaleContract.sol\":3333:3402  TokensPurchased(listingId, msg.sender, tokenAmount, totalPrice, true) */\n      mload(0x40)\n      tag_98\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/SaleContract.sol\":2313:3409  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_100\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/SaleContract.sol\":2170:3409  function buyTokensWithERC20(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":824:905  address public constant MELS_ADDRESS = 0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697 */\n    tag_29:\n        /* \"contracts/SaleContract.sol\":863:905  0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697 */\n      0x5fdaf637aed59b2e6d384d9e84d8ac5cf03c6697\n        /* \"contracts/SaleContract.sol\":824:905  address public constant MELS_ADDRESS = 0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":650:679  uint256 public listingCounter */\n    tag_32:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_106\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_106:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":3987:4161  function setCommissionWallet(address newWallet) external onlyOwner {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/SaleContract.sol\":4093:4094  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":4072:4095  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":4072:4081  newWallet */\n      dup2\n        /* \"contracts/SaleContract.sol\":4072:4095  newWallet != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SaleContract.sol\":4064:4115  require(newWallet != address(0), \"Invalid address\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/SaleContract.sol\":4145:4154  newWallet */\n      dup1\n        /* \"contracts/SaleContract.sol\":4125:4142  COMMISSION_WALLET */\n      0x04\n      0x00\n        /* \"contracts/SaleContract.sol\":4125:4154  COMMISSION_WALLET = newWallet */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3987:4161  function setCommissionWallet(address newWallet) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":1185:2164  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n    tag_46:\n        /* \"contracts/SaleContract.sol\":1314:1315  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1306:1311  price */\n      dup5\n        /* \"contracts/SaleContract.sol\":1306:1315  price > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1298:1351  require(price > 0, \"Price must be greater than zero\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"contracts/SaleContract.sol\":1378:1379  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1369:1375  tokens */\n      dup3\n        /* \"contracts/SaleContract.sol\":1369:1379  tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1361:1416  require(tokens > 0, \"Tokens must be greater than zero\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \"contracts/SaleContract.sol\":1445:1446  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1434:1442  duration */\n      dup2\n        /* \"contracts/SaleContract.sol\":1434:1446  duration > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":1426:1485  require(duration > 0, \"Duration must be greater than zero\") */\n      tag_122\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_123\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_122:\n        /* \"contracts/SaleContract.sol\":1530:1531  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":1503:1532  contractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":1503:1518  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":1503:1532  contractAddress != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/SaleContract.sol\":1495:1561  require(contractAddress != address(0), \"Invalid contract address\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_125:\n        /* \"contracts/SaleContract.sol\":1572:1583  ERC20 token */\n      0x00\n        /* \"contracts/SaleContract.sol\":1592:1607  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":1572:1608  ERC20 token = ERC20(contractAddress) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":1672:1678  tokens */\n      dup3\n        /* \"contracts/SaleContract.sol\":1626:1631  token */\n      dup2\n        /* \"contracts/SaleContract.sol\":1626:1641  token.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/SaleContract.sol\":1642:1652  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1662:1666  this */\n      address\n        /* \"contracts/SaleContract.sol\":1626:1668  token.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_128:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_130\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_131:\n        /* \"contracts/SaleContract.sol\":1626:1678  token.allowance(msg.sender, address(this)) >= tokens */\n      lt\n      iszero\n        /* \"contracts/SaleContract.sol\":1618:1706  require(token.allowance(msg.sender, address(this)) >= tokens, \"Token allowance too low\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"contracts/SaleContract.sol\":1717:1774  token.safeTransferFrom(msg.sender, address(this), tokens) */\n      tag_135\n        /* \"contracts/SaleContract.sol\":1740:1750  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1760:1764  this */\n      address\n        /* \"contracts/SaleContract.sol\":1767:1773  tokens */\n      dup6\n        /* \"contracts/SaleContract.sol\":1717:1722  token */\n      dup5\n        /* \"contracts/SaleContract.sol\":1717:1739  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/SaleContract.sol\":1717:1774  token.safeTransferFrom(msg.sender, address(this), tokens) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/SaleContract.sol\":1785:1799  listingCounter */\n      0x03\n      0x00\n        /* \"contracts/SaleContract.sol\":1785:1801  listingCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/SaleContract.sol\":1877:1892  contractAddress */\n      dup6\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1913:1918  price */\n      dup7\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1940:1946  tokens */\n      dup5\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":1968:1978  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/SaleContract.sol\":2022:2030  duration */\n      dup4\n        /* \"contracts/SaleContract.sol\":2004:2019  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":2004:2030  block.timestamp + duration */\n      tag_138\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_138:\n        /* \"contracts/SaleContract.sol\":1838:2041  Listing({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/SaleContract.sol\":1811:1819  listings */\n      0x02\n        /* \"contracts/SaleContract.sol\":1811:1835  listings[listingCounter] */\n      0x00\n        /* \"contracts/SaleContract.sol\":1820:1834  listingCounter */\n      sload(0x03)\n        /* \"contracts/SaleContract.sol\":1811:1835  listings[listingCounter] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":1811:2041  listings[listingCounter] = Listing({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"contracts/SaleContract.sol\":2098:2113  contractAddress */\n      dup4\n        /* \"contracts/SaleContract.sol\":2057:2157  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":2086:2096  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":2057:2157  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b\n        /* \"contracts/SaleContract.sol\":2070:2084  listingCounter */\n      sload(0x03)\n        /* \"contracts/SaleContract.sol\":2115:2120  price */\n      dup9\n        /* \"contracts/SaleContract.sol\":2122:2128  tokens */\n      dup8\n        /* \"contracts/SaleContract.sol\":2148:2156  duration */\n      dup8\n        /* \"contracts/SaleContract.sol\":2130:2145  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":2130:2156  block.timestamp + duration */\n      tag_139\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_139:\n        /* \"contracts/SaleContract.sol\":2057:2157  ListingAdded(listingCounter, msg.sender, contractAddress, price, tokens, block.timestamp + duration) */\n      mload(0x40)\n      tag_140\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/SaleContract.sol\":1288:2164  {... */\n      pop\n        /* \"contracts/SaleContract.sol\":1185:2164  function addListing(uint256 price, address contractAddress, uint256 tokens, uint256 duration) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":601:644  mapping(uint256 => Listing) public listings */\n    tag_50:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/SaleContract.sol\":3415:3981  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      tag_143\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2519  _nonReentrantBefore */\n      tag_61\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2500:2521  _nonReentrantBefore() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/SaleContract.sol\":3501:3524  Listing storage listing */\n      0x00\n        /* \"contracts/SaleContract.sol\":3527:3535  listings */\n      0x02\n        /* \"contracts/SaleContract.sol\":3527:3546  listings[listingId] */\n      0x00\n        /* \"contracts/SaleContract.sol\":3536:3545  listingId */\n      dup4\n        /* \"contracts/SaleContract.sol\":3527:3546  listings[listingId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/SaleContract.sol\":3501:3546  Listing storage listing = listings[listingId] */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3578:3585  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":3578:3592  listing.seller */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3564:3592  msg.sender == listing.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3564:3574  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3564:3592  msg.sender == listing.seller */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/SaleContract.sol\":3556:3629  require(msg.sender == listing.seller, \"Only listing seller can withdraw\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"contracts/SaleContract.sol\":3665:3672  listing */\n      dup1\n        /* \"contracts/SaleContract.sol\":3665:3683  listing.expiration */\n      0x04\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3647:3662  block.timestamp */\n      timestamp\n        /* \"contracts/SaleContract.sol\":3647:3683  block.timestamp > listing.expiration */\n      gt\n        /* \"contracts/SaleContract.sol\":3639:3709  require(block.timestamp > listing.expiration, \"Listing has not ended\") */\n      tag_148\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_148:\n        /* \"contracts/SaleContract.sol\":3744:3745  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":3727:3734  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":3727:3741  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3727:3745  listing.tokens > 0 */\n      gt\n        /* \"contracts/SaleContract.sol\":3719:3771  require(listing.tokens > 0, \"No tokens to withdraw\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/SaleContract.sol\":3782:3811  uint256 tokenAmountToWithdraw */\n      0x00\n        /* \"contracts/SaleContract.sol\":3814:3821  listing */\n      dup2\n        /* \"contracts/SaleContract.sol\":3814:3828  listing.tokens */\n      0x02\n      add\n      sload\n        /* \"contracts/SaleContract.sol\":3782:3828  uint256 tokenAmountToWithdraw = listing.tokens */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3855:3856  0 */\n      0x00\n        /* \"contracts/SaleContract.sol\":3838:3845  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":3838:3852  listing.tokens */\n      0x02\n      add\n        /* \"contracts/SaleContract.sol\":3838:3856  listing.tokens = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/SaleContract.sol\":3867:3878  ERC20 token */\n      0x00\n        /* \"contracts/SaleContract.sol\":3887:3894  listing */\n      dup3\n        /* \"contracts/SaleContract.sol\":3887:3910  listing.contractAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/SaleContract.sol\":3867:3911  ERC20 token = ERC20(listing.contractAddress) */\n      swap1\n      pop\n        /* \"contracts/SaleContract.sol\":3921:3974  token.safeTransfer(msg.sender, tokenAmountToWithdraw) */\n      tag_154\n        /* \"contracts/SaleContract.sol\":3940:3950  msg.sender */\n      caller\n        /* \"contracts/SaleContract.sol\":3952:3973  tokenAmountToWithdraw */\n      dup4\n        /* \"contracts/SaleContract.sol\":3921:3926  token */\n      dup4\n        /* \"contracts/SaleContract.sol\":3921:3939  token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_97\n      swap1\n        /* \"contracts/SaleContract.sol\":3921:3974  token.safeTransfer(msg.sender, tokenAmountToWithdraw) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/SaleContract.sol\":3491:3981  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      tag_155\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2560  _nonReentrantAfter */\n      tag_101\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2542:2562  _nonReentrantAfter() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/SaleContract.sol\":3415:3981  function withdrawTokensFromListing(uint256 listingId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_107\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2709  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2702:2720  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n      tag_163\n      jumpi\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2743:2773  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2698:2784  if (_status == ENTERED) {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1899:1900  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2865  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2858:2875  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2575:2882  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_168\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":1857:1858  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3075  _status */\n      0x00\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":3068:3089  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":2888:3096  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_41\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7766:7784  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7794:7813  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7932:7936  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7929:7930  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7922:7926  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7916:7927  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7909:7913  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7903:7907  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7899:7914  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7896:7897  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7889:7894  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7882:7887  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7877:7937  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7989:7996  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8033:8037  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8027:8038  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8078:8094  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8075:8076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8070:8073  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8055:8095  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8124:8140  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8119:8122  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8112:8141  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7979:8155  if iszero(success) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8182:8198  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8168:8198  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8232:8233  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8226:8234  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8211:8234  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7848:8244  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8272:8273  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8268  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8273  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8325:8326  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8321  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8310:8326  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_185)\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8306:8307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8284:8289  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8302  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8276:8307  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8258:8326  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8382:8387  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8349:8389  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8254:8400  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7756:8406  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":7686:8406  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_189:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_190:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_238\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_189\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_191:\n        /* \"#utility.yul\":328:352   */\n      tag_240\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_190\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_19:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_242\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_191\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:670   */\n    tag_192:\n        /* \"#utility.yul\":630:637   */\n      0x00\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":648:664   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":676:794   */\n    tag_193:\n        /* \"#utility.yul\":763:787   */\n      tag_245\n        /* \"#utility.yul\":781:786   */\n      dup2\n        /* \"#utility.yul\":763:787   */\n      tag_192\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":758:761   */\n      dup3\n        /* \"#utility.yul\":751:788   */\n      mstore\n        /* \"#utility.yul\":676:794   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":800:1022   */\n    tag_23:\n        /* \"#utility.yul\":893:897   */\n      0x00\n        /* \"#utility.yul\":931:933   */\n      0x20\n        /* \"#utility.yul\":920:929   */\n      dup3\n        /* \"#utility.yul\":916:934   */\n      add\n        /* \"#utility.yul\":908:934   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1015   */\n      tag_247\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1001:1010   */\n      dup4\n        /* \"#utility.yul\":997:1014   */\n      add\n        /* \"#utility.yul\":988:994   */\n      dup5\n        /* \"#utility.yul\":944:1015   */\n      tag_193\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":800:1022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1109:1226   */\n    tag_195:\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1215:1216   */\n      0x00\n        /* \"#utility.yul\":1208:1220   */\n      revert\n        /* \"#utility.yul\":1355:1477   */\n    tag_197:\n        /* \"#utility.yul\":1428:1452   */\n      tag_252\n        /* \"#utility.yul\":1446:1451   */\n      dup2\n        /* \"#utility.yul\":1428:1452   */\n      tag_192\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":1421:1426   */\n      dup2\n        /* \"#utility.yul\":1418:1453   */\n      eq\n        /* \"#utility.yul\":1408:1471   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1467:1468   */\n      0x00\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1457:1469   */\n      revert\n        /* \"#utility.yul\":1408:1471   */\n    tag_253:\n        /* \"#utility.yul\":1355:1477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1483:1622   */\n    tag_198:\n        /* \"#utility.yul\":1529:1534   */\n      0x00\n        /* \"#utility.yul\":1567:1573   */\n      dup2\n        /* \"#utility.yul\":1554:1574   */\n      calldataload\n        /* \"#utility.yul\":1545:1574   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1616   */\n      tag_255\n        /* \"#utility.yul\":1610:1615   */\n      dup2\n        /* \"#utility.yul\":1583:1616   */\n      tag_197\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1483:1622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1628:2247   */\n    tag_26:\n        /* \"#utility.yul\":1705:1711   */\n      0x00\n        /* \"#utility.yul\":1713:1719   */\n      0x00\n        /* \"#utility.yul\":1721:1727   */\n      0x00\n        /* \"#utility.yul\":1770:1772   */\n      0x60\n        /* \"#utility.yul\":1758:1767   */\n      dup5\n        /* \"#utility.yul\":1749:1756   */\n      dup7\n        /* \"#utility.yul\":1745:1768   */\n      sub\n        /* \"#utility.yul\":1741:1773   */\n      slt\n        /* \"#utility.yul\":1738:1857   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":1776:1855   */\n      tag_258\n      tag_195\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1738:1857   */\n    tag_257:\n        /* \"#utility.yul\":1896:1897   */\n      0x00\n        /* \"#utility.yul\":1921:1974   */\n      tag_259\n        /* \"#utility.yul\":1966:1973   */\n      dup7\n        /* \"#utility.yul\":1957:1963   */\n      dup3\n        /* \"#utility.yul\":1946:1955   */\n      dup8\n        /* \"#utility.yul\":1942:1964   */\n      add\n        /* \"#utility.yul\":1921:1974   */\n      tag_198\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":1911:1974   */\n      swap4\n      pop\n        /* \"#utility.yul\":1867:1984   */\n      pop\n        /* \"#utility.yul\":2023:2025   */\n      0x20\n        /* \"#utility.yul\":2049:2102   */\n      tag_260\n        /* \"#utility.yul\":2094:2101   */\n      dup7\n        /* \"#utility.yul\":2085:2091   */\n      dup3\n        /* \"#utility.yul\":2074:2083   */\n      dup8\n        /* \"#utility.yul\":2070:2092   */\n      add\n        /* \"#utility.yul\":2049:2102   */\n      tag_198\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2039:2102   */\n      swap3\n      pop\n        /* \"#utility.yul\":1994:2112   */\n      pop\n        /* \"#utility.yul\":2151:2153   */\n      0x40\n        /* \"#utility.yul\":2177:2230   */\n      tag_261\n        /* \"#utility.yul\":2222:2229   */\n      dup7\n        /* \"#utility.yul\":2213:2219   */\n      dup3\n        /* \"#utility.yul\":2202:2211   */\n      dup8\n        /* \"#utility.yul\":2198:2220   */\n      add\n        /* \"#utility.yul\":2177:2230   */\n      tag_198\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2167:2230   */\n      swap2\n      pop\n        /* \"#utility.yul\":2122:2240   */\n      pop\n        /* \"#utility.yul\":1628:2247   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2253:2375   */\n    tag_199:\n        /* \"#utility.yul\":2326:2350   */\n      tag_263\n        /* \"#utility.yul\":2344:2349   */\n      dup2\n        /* \"#utility.yul\":2326:2350   */\n      tag_190\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2319:2324   */\n      dup2\n        /* \"#utility.yul\":2316:2351   */\n      eq\n        /* \"#utility.yul\":2306:2369   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2365:2366   */\n      0x00\n        /* \"#utility.yul\":2362:2363   */\n      0x00\n        /* \"#utility.yul\":2355:2367   */\n      revert\n        /* \"#utility.yul\":2306:2369   */\n    tag_264:\n        /* \"#utility.yul\":2253:2375   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2520   */\n    tag_200:\n        /* \"#utility.yul\":2427:2432   */\n      0x00\n        /* \"#utility.yul\":2465:2471   */\n      dup2\n        /* \"#utility.yul\":2452:2472   */\n      calldataload\n        /* \"#utility.yul\":2443:2472   */\n      swap1\n      pop\n        /* \"#utility.yul\":2481:2514   */\n      tag_266\n        /* \"#utility.yul\":2508:2513   */\n      dup2\n        /* \"#utility.yul\":2481:2514   */\n      tag_199\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2381:2520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2526:2855   */\n    tag_38:\n        /* \"#utility.yul\":2585:2591   */\n      0x00\n        /* \"#utility.yul\":2634:2636   */\n      0x20\n        /* \"#utility.yul\":2622:2631   */\n      dup3\n        /* \"#utility.yul\":2613:2620   */\n      dup5\n        /* \"#utility.yul\":2609:2632   */\n      sub\n        /* \"#utility.yul\":2605:2637   */\n      slt\n        /* \"#utility.yul\":2602:2721   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2640:2719   */\n      tag_269\n      tag_195\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2602:2721   */\n    tag_268:\n        /* \"#utility.yul\":2760:2761   */\n      0x00\n        /* \"#utility.yul\":2785:2838   */\n      tag_270\n        /* \"#utility.yul\":2830:2837   */\n      dup5\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup6\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_200\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2731:2848   */\n      pop\n        /* \"#utility.yul\":2526:2855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:3626   */\n    tag_45:\n        /* \"#utility.yul\":2947:2953   */\n      0x00\n        /* \"#utility.yul\":2955:2961   */\n      0x00\n        /* \"#utility.yul\":2963:2969   */\n      0x00\n        /* \"#utility.yul\":2971:2977   */\n      0x00\n        /* \"#utility.yul\":3020:3023   */\n      0x80\n        /* \"#utility.yul\":3008:3017   */\n      dup6\n        /* \"#utility.yul\":2999:3006   */\n      dup8\n        /* \"#utility.yul\":2995:3018   */\n      sub\n        /* \"#utility.yul\":2991:3024   */\n      slt\n        /* \"#utility.yul\":2988:3108   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3027:3106   */\n      tag_273\n      tag_195\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2988:3108   */\n    tag_272:\n        /* \"#utility.yul\":3147:3148   */\n      0x00\n        /* \"#utility.yul\":3172:3225   */\n      tag_274\n        /* \"#utility.yul\":3217:3224   */\n      dup8\n        /* \"#utility.yul\":3208:3214   */\n      dup3\n        /* \"#utility.yul\":3197:3206   */\n      dup9\n        /* \"#utility.yul\":3193:3215   */\n      add\n        /* \"#utility.yul\":3172:3225   */\n      tag_198\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3162:3225   */\n      swap5\n      pop\n        /* \"#utility.yul\":3118:3235   */\n      pop\n        /* \"#utility.yul\":3274:3276   */\n      0x20\n        /* \"#utility.yul\":3300:3353   */\n      tag_275\n        /* \"#utility.yul\":3345:3352   */\n      dup8\n        /* \"#utility.yul\":3336:3342   */\n      dup3\n        /* \"#utility.yul\":3325:3334   */\n      dup9\n        /* \"#utility.yul\":3321:3343   */\n      add\n        /* \"#utility.yul\":3300:3353   */\n      tag_200\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":3290:3353   */\n      swap4\n      pop\n        /* \"#utility.yul\":3245:3363   */\n      pop\n        /* \"#utility.yul\":3402:3404   */\n      0x40\n        /* \"#utility.yul\":3428:3481   */\n      tag_276\n        /* \"#utility.yul\":3473:3480   */\n      dup8\n        /* \"#utility.yul\":3464:3470   */\n      dup3\n        /* \"#utility.yul\":3453:3462   */\n      dup9\n        /* \"#utility.yul\":3449:3471   */\n      add\n        /* \"#utility.yul\":3428:3481   */\n      tag_198\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3418:3481   */\n      swap3\n      pop\n        /* \"#utility.yul\":3373:3491   */\n      pop\n        /* \"#utility.yul\":3530:3532   */\n      0x60\n        /* \"#utility.yul\":3556:3609   */\n      tag_277\n        /* \"#utility.yul\":3601:3608   */\n      dup8\n        /* \"#utility.yul\":3592:3598   */\n      dup3\n        /* \"#utility.yul\":3581:3590   */\n      dup9\n        /* \"#utility.yul\":3577:3599   */\n      add\n        /* \"#utility.yul\":3556:3609   */\n      tag_198\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3546:3609   */\n      swap2\n      pop\n        /* \"#utility.yul\":3501:3619   */\n      pop\n        /* \"#utility.yul\":2861:3626   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3632:3961   */\n    tag_49:\n        /* \"#utility.yul\":3691:3697   */\n      0x00\n        /* \"#utility.yul\":3740:3742   */\n      0x20\n        /* \"#utility.yul\":3728:3737   */\n      dup3\n        /* \"#utility.yul\":3719:3726   */\n      dup5\n        /* \"#utility.yul\":3715:3738   */\n      sub\n        /* \"#utility.yul\":3711:3743   */\n      slt\n        /* \"#utility.yul\":3708:3827   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":3746:3825   */\n      tag_280\n      tag_195\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3708:3827   */\n    tag_279:\n        /* \"#utility.yul\":3866:3867   */\n      0x00\n        /* \"#utility.yul\":3891:3944   */\n      tag_281\n        /* \"#utility.yul\":3936:3943   */\n      dup5\n        /* \"#utility.yul\":3927:3933   */\n      dup3\n        /* \"#utility.yul\":3916:3925   */\n      dup6\n        /* \"#utility.yul\":3912:3934   */\n      add\n        /* \"#utility.yul\":3891:3944   */\n      tag_198\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3881:3944   */\n      swap2\n      pop\n        /* \"#utility.yul\":3837:3954   */\n      pop\n        /* \"#utility.yul\":3632:3961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3967:4631   */\n    tag_52:\n        /* \"#utility.yul\":4172:4176   */\n      0x00\n        /* \"#utility.yul\":4210:4213   */\n      0xa0\n        /* \"#utility.yul\":4199:4208   */\n      dup3\n        /* \"#utility.yul\":4195:4214   */\n      add\n        /* \"#utility.yul\":4187:4214   */\n      swap1\n      pop\n        /* \"#utility.yul\":4224:4295   */\n      tag_283\n        /* \"#utility.yul\":4292:4293   */\n      0x00\n        /* \"#utility.yul\":4281:4290   */\n      dup4\n        /* \"#utility.yul\":4277:4294   */\n      add\n        /* \"#utility.yul\":4268:4274   */\n      dup9\n        /* \"#utility.yul\":4224:4295   */\n      tag_191\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4305:4377   */\n      tag_284\n        /* \"#utility.yul\":4373:4375   */\n      0x20\n        /* \"#utility.yul\":4362:4371   */\n      dup4\n        /* \"#utility.yul\":4358:4376   */\n      add\n        /* \"#utility.yul\":4349:4355   */\n      dup8\n        /* \"#utility.yul\":4305:4377   */\n      tag_193\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":4387:4459   */\n      tag_285\n        /* \"#utility.yul\":4455:4457   */\n      0x40\n        /* \"#utility.yul\":4444:4453   */\n      dup4\n        /* \"#utility.yul\":4440:4458   */\n      add\n        /* \"#utility.yul\":4431:4437   */\n      dup7\n        /* \"#utility.yul\":4387:4459   */\n      tag_193\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4469:4541   */\n      tag_286\n        /* \"#utility.yul\":4537:4539   */\n      0x60\n        /* \"#utility.yul\":4526:4535   */\n      dup4\n        /* \"#utility.yul\":4522:4540   */\n      add\n        /* \"#utility.yul\":4513:4519   */\n      dup6\n        /* \"#utility.yul\":4469:4541   */\n      tag_191\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4551:4624   */\n      tag_287\n        /* \"#utility.yul\":4619:4622   */\n      0x80\n        /* \"#utility.yul\":4608:4617   */\n      dup4\n        /* \"#utility.yul\":4604:4623   */\n      add\n        /* \"#utility.yul\":4595:4601   */\n      dup5\n        /* \"#utility.yul\":4551:4624   */\n      tag_193\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3967:4631   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4637:4806   */\n    tag_201:\n        /* \"#utility.yul\":4721:4732   */\n      0x00\n        /* \"#utility.yul\":4755:4761   */\n      dup3\n        /* \"#utility.yul\":4750:4753   */\n      dup3\n        /* \"#utility.yul\":4743:4762   */\n      mstore\n        /* \"#utility.yul\":4795:4799   */\n      0x20\n        /* \"#utility.yul\":4790:4793   */\n      dup3\n        /* \"#utility.yul\":4786:4800   */\n      add\n        /* \"#utility.yul\":4771:4800   */\n      swap1\n      pop\n        /* \"#utility.yul\":4637:4806   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4812:4984   */\n    tag_202:\n        /* \"#utility.yul\":4952:4976   */\n      0x4c697374696e6720646f6573206e6f7420657869737400000000000000000000\n        /* \"#utility.yul\":4948:4949   */\n      0x00\n        /* \"#utility.yul\":4940:4946   */\n      dup3\n        /* \"#utility.yul\":4936:4950   */\n      add\n        /* \"#utility.yul\":4929:4977   */\n      mstore\n        /* \"#utility.yul\":4812:4984   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4990:5356   */\n    tag_203:\n        /* \"#utility.yul\":5132:5135   */\n      0x00\n        /* \"#utility.yul\":5153:5220   */\n      tag_291\n        /* \"#utility.yul\":5217:5219   */\n      0x16\n        /* \"#utility.yul\":5212:5215   */\n      dup4\n        /* \"#utility.yul\":5153:5220   */\n      tag_201\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5146:5220   */\n      swap2\n      pop\n        /* \"#utility.yul\":5229:5322   */\n      tag_292\n        /* \"#utility.yul\":5318:5321   */\n      dup3\n        /* \"#utility.yul\":5229:5322   */\n      tag_202\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5347:5349   */\n      0x20\n        /* \"#utility.yul\":5342:5345   */\n      dup3\n        /* \"#utility.yul\":5338:5350   */\n      add\n        /* \"#utility.yul\":5331:5350   */\n      swap1\n      pop\n        /* \"#utility.yul\":4990:5356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5362:5781   */\n    tag_65:\n        /* \"#utility.yul\":5528:5532   */\n      0x00\n        /* \"#utility.yul\":5566:5568   */\n      0x20\n        /* \"#utility.yul\":5555:5564   */\n      dup3\n        /* \"#utility.yul\":5551:5569   */\n      add\n        /* \"#utility.yul\":5543:5569   */\n      swap1\n      pop\n        /* \"#utility.yul\":5615:5624   */\n      dup2\n        /* \"#utility.yul\":5609:5613   */\n      dup2\n        /* \"#utility.yul\":5605:5625   */\n      sub\n        /* \"#utility.yul\":5601:5602   */\n      0x00\n        /* \"#utility.yul\":5590:5599   */\n      dup4\n        /* \"#utility.yul\":5586:5603   */\n      add\n        /* \"#utility.yul\":5579:5626   */\n      mstore\n        /* \"#utility.yul\":5643:5774   */\n      tag_294\n        /* \"#utility.yul\":5769:5773   */\n      dup2\n        /* \"#utility.yul\":5643:5774   */\n      tag_203\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5635:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5362:5781   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5787:5956   */\n    tag_204:\n        /* \"#utility.yul\":5927:5948   */\n      0x4c697374696e6720686173206578706972656400000000000000000000000000\n        /* \"#utility.yul\":5923:5924   */\n      0x00\n        /* \"#utility.yul\":5915:5921   */\n      dup3\n        /* \"#utility.yul\":5911:5925   */\n      add\n        /* \"#utility.yul\":5904:5949   */\n      mstore\n        /* \"#utility.yul\":5787:5956   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5962:6328   */\n    tag_205:\n        /* \"#utility.yul\":6104:6107   */\n      0x00\n        /* \"#utility.yul\":6125:6192   */\n      tag_297\n        /* \"#utility.yul\":6189:6191   */\n      0x13\n        /* \"#utility.yul\":6184:6187   */\n      dup4\n        /* \"#utility.yul\":6125:6192   */\n      tag_201\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":6118:6192   */\n      swap2\n      pop\n        /* \"#utility.yul\":6201:6294   */\n      tag_298\n        /* \"#utility.yul\":6290:6293   */\n      dup3\n        /* \"#utility.yul\":6201:6294   */\n      tag_204\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6319:6321   */\n      0x20\n        /* \"#utility.yul\":6314:6317   */\n      dup3\n        /* \"#utility.yul\":6310:6322   */\n      add\n        /* \"#utility.yul\":6303:6322   */\n      swap1\n      pop\n        /* \"#utility.yul\":5962:6328   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6334:6753   */\n    tag_68:\n        /* \"#utility.yul\":6500:6504   */\n      0x00\n        /* \"#utility.yul\":6538:6540   */\n      0x20\n        /* \"#utility.yul\":6527:6536   */\n      dup3\n        /* \"#utility.yul\":6523:6541   */\n      add\n        /* \"#utility.yul\":6515:6541   */\n      swap1\n      pop\n        /* \"#utility.yul\":6587:6596   */\n      dup2\n        /* \"#utility.yul\":6581:6585   */\n      dup2\n        /* \"#utility.yul\":6577:6597   */\n      sub\n        /* \"#utility.yul\":6573:6574   */\n      0x00\n        /* \"#utility.yul\":6562:6571   */\n      dup4\n        /* \"#utility.yul\":6558:6575   */\n      add\n        /* \"#utility.yul\":6551:6598   */\n      mstore\n        /* \"#utility.yul\":6615:6746   */\n      tag_300\n        /* \"#utility.yul\":6741:6745   */\n      dup2\n        /* \"#utility.yul\":6615:6746   */\n      tag_205\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6607:6746   */\n      swap1\n      pop\n        /* \"#utility.yul\":6334:6753   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6759:6937   */\n    tag_206:\n        /* \"#utility.yul\":6899:6929   */\n      0x4e6f7420656e6f75676820746f6b656e7320696e206c697374696e6700000000\n        /* \"#utility.yul\":6895:6896   */\n      0x00\n        /* \"#utility.yul\":6887:6893   */\n      dup3\n        /* \"#utility.yul\":6883:6897   */\n      add\n        /* \"#utility.yul\":6876:6930   */\n      mstore\n        /* \"#utility.yul\":6759:6937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6943:7309   */\n    tag_207:\n        /* \"#utility.yul\":7085:7088   */\n      0x00\n        /* \"#utility.yul\":7106:7173   */\n      tag_303\n        /* \"#utility.yul\":7170:7172   */\n      0x1c\n        /* \"#utility.yul\":7165:7168   */\n      dup4\n        /* \"#utility.yul\":7106:7173   */\n      tag_201\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":7099:7173   */\n      swap2\n      pop\n        /* \"#utility.yul\":7182:7275   */\n      tag_304\n        /* \"#utility.yul\":7271:7274   */\n      dup3\n        /* \"#utility.yul\":7182:7275   */\n      tag_206\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7300:7302   */\n      0x20\n        /* \"#utility.yul\":7295:7298   */\n      dup3\n        /* \"#utility.yul\":7291:7303   */\n      add\n        /* \"#utility.yul\":7284:7303   */\n      swap1\n      pop\n        /* \"#utility.yul\":6943:7309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7315:7734   */\n    tag_71:\n        /* \"#utility.yul\":7481:7485   */\n      0x00\n        /* \"#utility.yul\":7519:7521   */\n      0x20\n        /* \"#utility.yul\":7508:7517   */\n      dup3\n        /* \"#utility.yul\":7504:7522   */\n      add\n        /* \"#utility.yul\":7496:7522   */\n      swap1\n      pop\n        /* \"#utility.yul\":7568:7577   */\n      dup2\n        /* \"#utility.yul\":7562:7566   */\n      dup2\n        /* \"#utility.yul\":7558:7578   */\n      sub\n        /* \"#utility.yul\":7554:7555   */\n      0x00\n        /* \"#utility.yul\":7543:7552   */\n      dup4\n        /* \"#utility.yul\":7539:7556   */\n      add\n        /* \"#utility.yul\":7532:7579   */\n      mstore\n        /* \"#utility.yul\":7596:7727   */\n      tag_306\n        /* \"#utility.yul\":7722:7726   */\n      dup2\n        /* \"#utility.yul\":7596:7727   */\n      tag_207\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7588:7727   */\n      swap1\n      pop\n        /* \"#utility.yul\":7315:7734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7740:7920   */\n    tag_208:\n        /* \"#utility.yul\":7788:7865   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7785:7786   */\n      0x00\n        /* \"#utility.yul\":7778:7866   */\n      mstore\n        /* \"#utility.yul\":7885:7889   */\n      0x11\n        /* \"#utility.yul\":7882:7883   */\n      0x04\n        /* \"#utility.yul\":7875:7890   */\n      mstore\n        /* \"#utility.yul\":7909:7913   */\n      0x24\n        /* \"#utility.yul\":7906:7907   */\n      0x00\n        /* \"#utility.yul\":7899:7914   */\n      revert\n        /* \"#utility.yul\":7926:8336   */\n    tag_73:\n        /* \"#utility.yul\":7966:7973   */\n      0x00\n        /* \"#utility.yul\":7989:8009   */\n      tag_309\n        /* \"#utility.yul\":8007:8008   */\n      dup3\n        /* \"#utility.yul\":7989:8009   */\n      tag_192\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":7984:8009   */\n      swap2\n      pop\n        /* \"#utility.yul\":8023:8043   */\n      tag_310\n        /* \"#utility.yul\":8041:8042   */\n      dup4\n        /* \"#utility.yul\":8023:8043   */\n      tag_192\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":8018:8043   */\n      swap3\n      pop\n        /* \"#utility.yul\":8078:8079   */\n      dup3\n        /* \"#utility.yul\":8075:8076   */\n      dup3\n        /* \"#utility.yul\":8071:8080   */\n      mul\n        /* \"#utility.yul\":8100:8130   */\n      tag_311\n        /* \"#utility.yul\":8118:8129   */\n      dup2\n        /* \"#utility.yul\":8100:8130   */\n      tag_192\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":8089:8130   */\n      swap2\n      pop\n        /* \"#utility.yul\":8279:8280   */\n      dup3\n        /* \"#utility.yul\":8270:8277   */\n      dup3\n        /* \"#utility.yul\":8266:8281   */\n      div\n        /* \"#utility.yul\":8263:8264   */\n      dup5\n        /* \"#utility.yul\":8260:8282   */\n      eq\n        /* \"#utility.yul\":8240:8241   */\n      dup4\n        /* \"#utility.yul\":8233:8242   */\n      iszero\n        /* \"#utility.yul\":8213:8296   */\n      or\n        /* \"#utility.yul\":8190:8329   */\n      tag_312\n      jumpi\n        /* \"#utility.yul\":8309:8327   */\n      tag_313\n      tag_208\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":8190:8329   */\n    tag_312:\n        /* \"#utility.yul\":7974:8336   */\n      pop\n        /* \"#utility.yul\":7926:8336   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8342:8522   */\n    tag_209:\n        /* \"#utility.yul\":8390:8467   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8387:8388   */\n      0x00\n        /* \"#utility.yul\":8380:8468   */\n      mstore\n        /* \"#utility.yul\":8487:8491   */\n      0x12\n        /* \"#utility.yul\":8484:8485   */\n      0x04\n        /* \"#utility.yul\":8477:8492   */\n      mstore\n        /* \"#utility.yul\":8511:8515   */\n      0x24\n        /* \"#utility.yul\":8508:8509   */\n      0x00\n        /* \"#utility.yul\":8501:8516   */\n      revert\n        /* \"#utility.yul\":8528:8713   */\n    tag_76:\n        /* \"#utility.yul\":8568:8569   */\n      0x00\n        /* \"#utility.yul\":8585:8605   */\n      tag_316\n        /* \"#utility.yul\":8603:8604   */\n      dup3\n        /* \"#utility.yul\":8585:8605   */\n      tag_192\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":8580:8605   */\n      swap2\n      pop\n        /* \"#utility.yul\":8619:8639   */\n      tag_317\n        /* \"#utility.yul\":8637:8638   */\n      dup4\n        /* \"#utility.yul\":8619:8639   */\n      tag_192\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8614:8639   */\n      swap3\n      pop\n        /* \"#utility.yul\":8658:8659   */\n      dup3\n        /* \"#utility.yul\":8648:8683   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":8663:8681   */\n      tag_319\n      tag_209\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":8648:8683   */\n    tag_318:\n        /* \"#utility.yul\":8705:8706   */\n      dup3\n        /* \"#utility.yul\":8702:8703   */\n      dup3\n        /* \"#utility.yul\":8698:8707   */\n      div\n        /* \"#utility.yul\":8693:8707   */\n      swap1\n      pop\n        /* \"#utility.yul\":8528:8713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:8910   */\n    tag_78:\n        /* \"#utility.yul\":8759:8762   */\n      0x00\n        /* \"#utility.yul\":8778:8798   */\n      tag_321\n        /* \"#utility.yul\":8796:8797   */\n      dup3\n        /* \"#utility.yul\":8778:8798   */\n      tag_192\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8773:8798   */\n      swap2\n      pop\n        /* \"#utility.yul\":8812:8832   */\n      tag_322\n        /* \"#utility.yul\":8830:8831   */\n      dup4\n        /* \"#utility.yul\":8812:8832   */\n      tag_192\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8807:8832   */\n      swap3\n      pop\n        /* \"#utility.yul\":8855:8856   */\n      dup3\n        /* \"#utility.yul\":8852:8853   */\n      dup3\n        /* \"#utility.yul\":8848:8857   */\n      add\n        /* \"#utility.yul\":8841:8857   */\n      swap1\n      pop\n        /* \"#utility.yul\":8876:8879   */\n      dup1\n        /* \"#utility.yul\":8873:8874   */\n      dup3\n        /* \"#utility.yul\":8870:8880   */\n      gt\n        /* \"#utility.yul\":8867:8903   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":8883:8901   */\n      tag_324\n      tag_208\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":8867:8903   */\n    tag_323:\n        /* \"#utility.yul\":8719:8910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8916:9090   */\n    tag_210:\n        /* \"#utility.yul\":9056:9082   */\n      0x496e636f7272656374207061796d656e7420616d6f756e740000000000000000\n        /* \"#utility.yul\":9052:9053   */\n      0x00\n        /* \"#utility.yul\":9044:9050   */\n      dup3\n        /* \"#utility.yul\":9040:9054   */\n      add\n        /* \"#utility.yul\":9033:9083   */\n      mstore\n        /* \"#utility.yul\":8916:9090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9096:9462   */\n    tag_211:\n        /* \"#utility.yul\":9238:9241   */\n      0x00\n        /* \"#utility.yul\":9259:9326   */\n      tag_327\n        /* \"#utility.yul\":9323:9325   */\n      0x18\n        /* \"#utility.yul\":9318:9321   */\n      dup4\n        /* \"#utility.yul\":9259:9326   */\n      tag_201\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9252:9326   */\n      swap2\n      pop\n        /* \"#utility.yul\":9335:9428   */\n      tag_328\n        /* \"#utility.yul\":9424:9427   */\n      dup3\n        /* \"#utility.yul\":9335:9428   */\n      tag_210\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9453:9455   */\n      0x20\n        /* \"#utility.yul\":9448:9451   */\n      dup3\n        /* \"#utility.yul\":9444:9456   */\n      add\n        /* \"#utility.yul\":9437:9456   */\n      swap1\n      pop\n        /* \"#utility.yul\":9096:9462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9468:9887   */\n    tag_81:\n        /* \"#utility.yul\":9634:9638   */\n      0x00\n        /* \"#utility.yul\":9672:9674   */\n      0x20\n        /* \"#utility.yul\":9661:9670   */\n      dup3\n        /* \"#utility.yul\":9657:9675   */\n      add\n        /* \"#utility.yul\":9649:9675   */\n      swap1\n      pop\n        /* \"#utility.yul\":9721:9730   */\n      dup2\n        /* \"#utility.yul\":9715:9719   */\n      dup2\n        /* \"#utility.yul\":9711:9731   */\n      sub\n        /* \"#utility.yul\":9707:9708   */\n      0x00\n        /* \"#utility.yul\":9696:9705   */\n      dup4\n        /* \"#utility.yul\":9692:9709   */\n      add\n        /* \"#utility.yul\":9685:9732   */\n      mstore\n        /* \"#utility.yul\":9749:9880   */\n      tag_330\n        /* \"#utility.yul\":9875:9879   */\n      dup2\n        /* \"#utility.yul\":9749:9880   */\n      tag_211\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9741:9880   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9893:10225   */\n    tag_83:\n        /* \"#utility.yul\":10014:10018   */\n      0x00\n        /* \"#utility.yul\":10052:10054   */\n      0x40\n        /* \"#utility.yul\":10041:10050   */\n      dup3\n        /* \"#utility.yul\":10037:10055   */\n      add\n        /* \"#utility.yul\":10029:10055   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10136   */\n      tag_332\n        /* \"#utility.yul\":10133:10134   */\n      0x00\n        /* \"#utility.yul\":10122:10131   */\n      dup4\n        /* \"#utility.yul\":10118:10135   */\n      add\n        /* \"#utility.yul\":10109:10115   */\n      dup6\n        /* \"#utility.yul\":10065:10136   */\n      tag_191\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10146:10218   */\n      tag_333\n        /* \"#utility.yul\":10214:10216   */\n      0x20\n        /* \"#utility.yul\":10203:10212   */\n      dup4\n        /* \"#utility.yul\":10199:10217   */\n      add\n        /* \"#utility.yul\":10190:10196   */\n      dup5\n        /* \"#utility.yul\":10146:10218   */\n      tag_191\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":9893:10225   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10231:10374   */\n    tag_212:\n        /* \"#utility.yul\":10288:10293   */\n      0x00\n        /* \"#utility.yul\":10319:10325   */\n      dup2\n        /* \"#utility.yul\":10313:10326   */\n      mload\n        /* \"#utility.yul\":10304:10326   */\n      swap1\n      pop\n        /* \"#utility.yul\":10335:10368   */\n      tag_335\n        /* \"#utility.yul\":10362:10367   */\n      dup2\n        /* \"#utility.yul\":10335:10368   */\n      tag_197\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10231:10374   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10380:10731   */\n    tag_87:\n        /* \"#utility.yul\":10450:10456   */\n      0x00\n        /* \"#utility.yul\":10499:10501   */\n      0x20\n        /* \"#utility.yul\":10487:10496   */\n      dup3\n        /* \"#utility.yul\":10478:10485   */\n      dup5\n        /* \"#utility.yul\":10474:10497   */\n      sub\n        /* \"#utility.yul\":10470:10502   */\n      slt\n        /* \"#utility.yul\":10467:10586   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":10505:10584   */\n      tag_338\n      tag_195\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10467:10586   */\n    tag_337:\n        /* \"#utility.yul\":10625:10626   */\n      0x00\n        /* \"#utility.yul\":10650:10714   */\n      tag_339\n        /* \"#utility.yul\":10706:10713   */\n      dup5\n        /* \"#utility.yul\":10697:10703   */\n      dup3\n        /* \"#utility.yul\":10686:10695   */\n      dup6\n        /* \"#utility.yul\":10682:10704   */\n      add\n        /* \"#utility.yul\":10650:10714   */\n      tag_212\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":10640:10714   */\n      swap2\n      pop\n        /* \"#utility.yul\":10596:10724   */\n      pop\n        /* \"#utility.yul\":10380:10731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10737:10918   */\n    tag_213:\n        /* \"#utility.yul\":10877:10910   */\n      0x5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f7700\n        /* \"#utility.yul\":10873:10874   */\n      0x00\n        /* \"#utility.yul\":10865:10871   */\n      dup3\n        /* \"#utility.yul\":10861:10875   */\n      add\n        /* \"#utility.yul\":10854:10911   */\n      mstore\n        /* \"#utility.yul\":10737:10918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11290   */\n    tag_214:\n        /* \"#utility.yul\":11066:11069   */\n      0x00\n        /* \"#utility.yul\":11087:11154   */\n      tag_342\n        /* \"#utility.yul\":11151:11153   */\n      0x1f\n        /* \"#utility.yul\":11146:11149   */\n      dup4\n        /* \"#utility.yul\":11087:11154   */\n      tag_201\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11080:11154   */\n      swap2\n      pop\n        /* \"#utility.yul\":11163:11256   */\n      tag_343\n        /* \"#utility.yul\":11252:11255   */\n      dup3\n        /* \"#utility.yul\":11163:11256   */\n      tag_213\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":11281:11283   */\n      0x20\n        /* \"#utility.yul\":11276:11279   */\n      dup3\n        /* \"#utility.yul\":11272:11284   */\n      add\n        /* \"#utility.yul\":11265:11284   */\n      swap1\n      pop\n        /* \"#utility.yul\":10924:11290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11296:11715   */\n    tag_90:\n        /* \"#utility.yul\":11462:11466   */\n      0x00\n        /* \"#utility.yul\":11500:11502   */\n      0x20\n        /* \"#utility.yul\":11489:11498   */\n      dup3\n        /* \"#utility.yul\":11485:11503   */\n      add\n        /* \"#utility.yul\":11477:11503   */\n      swap1\n      pop\n        /* \"#utility.yul\":11549:11558   */\n      dup2\n        /* \"#utility.yul\":11543:11547   */\n      dup2\n        /* \"#utility.yul\":11539:11559   */\n      sub\n        /* \"#utility.yul\":11535:11536   */\n      0x00\n        /* \"#utility.yul\":11524:11533   */\n      dup4\n        /* \"#utility.yul\":11520:11537   */\n      add\n        /* \"#utility.yul\":11513:11560   */\n      mstore\n        /* \"#utility.yul\":11577:11708   */\n      tag_345\n        /* \"#utility.yul\":11703:11707   */\n      dup2\n        /* \"#utility.yul\":11577:11708   */\n      tag_214\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":11569:11708   */\n      swap1\n      pop\n        /* \"#utility.yul\":11296:11715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11721:11915   */\n    tag_95:\n        /* \"#utility.yul\":11761:11765   */\n      0x00\n        /* \"#utility.yul\":11781:11801   */\n      tag_347\n        /* \"#utility.yul\":11799:11800   */\n      dup3\n        /* \"#utility.yul\":11781:11801   */\n      tag_192\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11776:11801   */\n      swap2\n      pop\n        /* \"#utility.yul\":11815:11835   */\n      tag_348\n        /* \"#utility.yul\":11833:11834   */\n      dup4\n        /* \"#utility.yul\":11815:11835   */\n      tag_192\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11810:11835   */\n      swap3\n      pop\n        /* \"#utility.yul\":11859:11860   */\n      dup3\n        /* \"#utility.yul\":11856:11857   */\n      dup3\n        /* \"#utility.yul\":11852:11861   */\n      sub\n        /* \"#utility.yul\":11844:11861   */\n      swap1\n      pop\n        /* \"#utility.yul\":11883:11884   */\n      dup2\n        /* \"#utility.yul\":11877:11881   */\n      dup2\n        /* \"#utility.yul\":11874:11885   */\n      gt\n        /* \"#utility.yul\":11871:11908   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":11888:11906   */\n      tag_350\n      tag_208\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11871:11908   */\n    tag_349:\n        /* \"#utility.yul\":11721:11915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11921:12011   */\n    tag_215:\n        /* \"#utility.yul\":11955:11962   */\n      0x00\n        /* \"#utility.yul\":11998:12003   */\n      dup2\n        /* \"#utility.yul\":11991:12004   */\n      iszero\n        /* \"#utility.yul\":11984:12005   */\n      iszero\n        /* \"#utility.yul\":11973:12005   */\n      swap1\n      pop\n        /* \"#utility.yul\":11921:12011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12017:12126   */\n    tag_216:\n        /* \"#utility.yul\":12098:12119   */\n      tag_353\n        /* \"#utility.yul\":12113:12118   */\n      dup2\n        /* \"#utility.yul\":12098:12119   */\n      tag_215\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":12093:12096   */\n      dup3\n        /* \"#utility.yul\":12086:12120   */\n      mstore\n        /* \"#utility.yul\":12017:12126   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12132:12673   */\n    tag_99:\n        /* \"#utility.yul\":12303:12307   */\n      0x00\n        /* \"#utility.yul\":12341:12344   */\n      0x80\n        /* \"#utility.yul\":12330:12339   */\n      dup3\n        /* \"#utility.yul\":12326:12345   */\n      add\n        /* \"#utility.yul\":12318:12345   */\n      swap1\n      pop\n        /* \"#utility.yul\":12355:12426   */\n      tag_355\n        /* \"#utility.yul\":12423:12424   */\n      0x00\n        /* \"#utility.yul\":12412:12421   */\n      dup4\n        /* \"#utility.yul\":12408:12425   */\n      add\n        /* \"#utility.yul\":12399:12405   */\n      dup8\n        /* \"#utility.yul\":12355:12426   */\n      tag_193\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":12436:12508   */\n      tag_356\n        /* \"#utility.yul\":12504:12506   */\n      0x20\n        /* \"#utility.yul\":12493:12502   */\n      dup4\n        /* \"#utility.yul\":12489:12507   */\n      add\n        /* \"#utility.yul\":12480:12486   */\n      dup7\n        /* \"#utility.yul\":12436:12508   */\n      tag_193\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":12518:12590   */\n      tag_357\n        /* \"#utility.yul\":12586:12588   */\n      0x40\n        /* \"#utility.yul\":12575:12584   */\n      dup4\n        /* \"#utility.yul\":12571:12589   */\n      add\n        /* \"#utility.yul\":12562:12568   */\n      dup6\n        /* \"#utility.yul\":12518:12590   */\n      tag_193\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":12600:12666   */\n      tag_358\n        /* \"#utility.yul\":12662:12664   */\n      0x60\n        /* \"#utility.yul\":12651:12660   */\n      dup4\n        /* \"#utility.yul\":12647:12665   */\n      add\n        /* \"#utility.yul\":12638:12644   */\n      dup5\n        /* \"#utility.yul\":12600:12666   */\n      tag_216\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":12132:12673   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12679:12844   */\n    tag_217:\n        /* \"#utility.yul\":12819:12836   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":12815:12816   */\n      0x00\n        /* \"#utility.yul\":12807:12813   */\n      dup3\n        /* \"#utility.yul\":12803:12817   */\n      add\n        /* \"#utility.yul\":12796:12837   */\n      mstore\n        /* \"#utility.yul\":12679:12844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12850:13216   */\n    tag_218:\n        /* \"#utility.yul\":12992:12995   */\n      0x00\n        /* \"#utility.yul\":13013:13080   */\n      tag_361\n        /* \"#utility.yul\":13077:13079   */\n      0x0f\n        /* \"#utility.yul\":13072:13075   */\n      dup4\n        /* \"#utility.yul\":13013:13080   */\n      tag_201\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":13006:13080   */\n      swap2\n      pop\n        /* \"#utility.yul\":13089:13182   */\n      tag_362\n        /* \"#utility.yul\":13178:13181   */\n      dup3\n        /* \"#utility.yul\":13089:13182   */\n      tag_217\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":13207:13209   */\n      0x20\n        /* \"#utility.yul\":13202:13205   */\n      dup3\n        /* \"#utility.yul\":13198:13210   */\n      add\n        /* \"#utility.yul\":13191:13210   */\n      swap1\n      pop\n        /* \"#utility.yul\":12850:13216   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13222:13641   */\n    tag_113:\n        /* \"#utility.yul\":13388:13392   */\n      0x00\n        /* \"#utility.yul\":13426:13428   */\n      0x20\n        /* \"#utility.yul\":13415:13424   */\n      dup3\n        /* \"#utility.yul\":13411:13429   */\n      add\n        /* \"#utility.yul\":13403:13429   */\n      swap1\n      pop\n        /* \"#utility.yul\":13475:13484   */\n      dup2\n        /* \"#utility.yul\":13469:13473   */\n      dup2\n        /* \"#utility.yul\":13465:13485   */\n      sub\n        /* \"#utility.yul\":13461:13462   */\n      0x00\n        /* \"#utility.yul\":13450:13459   */\n      dup4\n        /* \"#utility.yul\":13446:13463   */\n      add\n        /* \"#utility.yul\":13439:13486   */\n      mstore\n        /* \"#utility.yul\":13503:13634   */\n      tag_364\n        /* \"#utility.yul\":13629:13633   */\n      dup2\n        /* \"#utility.yul\":13503:13634   */\n      tag_218\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":13495:13634   */\n      swap1\n      pop\n        /* \"#utility.yul\":13222:13641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13647:13828   */\n    tag_219:\n        /* \"#utility.yul\":13787:13820   */\n      0x5072696365206d7573742062652067726561746572207468616e207a65726f00\n        /* \"#utility.yul\":13783:13784   */\n      0x00\n        /* \"#utility.yul\":13775:13781   */\n      dup3\n        /* \"#utility.yul\":13771:13785   */\n      add\n        /* \"#utility.yul\":13764:13821   */\n      mstore\n        /* \"#utility.yul\":13647:13828   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13834:14200   */\n    tag_220:\n        /* \"#utility.yul\":13976:13979   */\n      0x00\n        /* \"#utility.yul\":13997:14064   */\n      tag_367\n        /* \"#utility.yul\":14061:14063   */\n      0x1f\n        /* \"#utility.yul\":14056:14059   */\n      dup4\n        /* \"#utility.yul\":13997:14064   */\n      tag_201\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":13990:14064   */\n      swap2\n      pop\n        /* \"#utility.yul\":14073:14166   */\n      tag_368\n        /* \"#utility.yul\":14162:14165   */\n      dup3\n        /* \"#utility.yul\":14073:14166   */\n      tag_219\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":14191:14193   */\n      0x20\n        /* \"#utility.yul\":14186:14189   */\n      dup3\n        /* \"#utility.yul\":14182:14194   */\n      add\n        /* \"#utility.yul\":14175:14194   */\n      swap1\n      pop\n        /* \"#utility.yul\":13834:14200   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14206:14625   */\n    tag_118:\n        /* \"#utility.yul\":14372:14376   */\n      0x00\n        /* \"#utility.yul\":14410:14412   */\n      0x20\n        /* \"#utility.yul\":14399:14408   */\n      dup3\n        /* \"#utility.yul\":14395:14413   */\n      add\n        /* \"#utility.yul\":14387:14413   */\n      swap1\n      pop\n        /* \"#utility.yul\":14459:14468   */\n      dup2\n        /* \"#utility.yul\":14453:14457   */\n      dup2\n        /* \"#utility.yul\":14449:14469   */\n      sub\n        /* \"#utility.yul\":14445:14446   */\n      0x00\n        /* \"#utility.yul\":14434:14443   */\n      dup4\n        /* \"#utility.yul\":14430:14447   */\n      add\n        /* \"#utility.yul\":14423:14470   */\n      mstore\n        /* \"#utility.yul\":14487:14618   */\n      tag_370\n        /* \"#utility.yul\":14613:14617   */\n      dup2\n        /* \"#utility.yul\":14487:14618   */\n      tag_220\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":14479:14618   */\n      swap1\n      pop\n        /* \"#utility.yul\":14206:14625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14631:14813   */\n    tag_221:\n        /* \"#utility.yul\":14771:14805   */\n      0x546f6b656e73206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":14767:14768   */\n      0x00\n        /* \"#utility.yul\":14759:14765   */\n      dup3\n        /* \"#utility.yul\":14755:14769   */\n      add\n        /* \"#utility.yul\":14748:14806   */\n      mstore\n        /* \"#utility.yul\":14631:14813   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14819:15185   */\n    tag_222:\n        /* \"#utility.yul\":14961:14964   */\n      0x00\n        /* \"#utility.yul\":14982:15049   */\n      tag_373\n        /* \"#utility.yul\":15046:15048   */\n      0x20\n        /* \"#utility.yul\":15041:15044   */\n      dup4\n        /* \"#utility.yul\":14982:15049   */\n      tag_201\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":14975:15049   */\n      swap2\n      pop\n        /* \"#utility.yul\":15058:15151   */\n      tag_374\n        /* \"#utility.yul\":15147:15150   */\n      dup3\n        /* \"#utility.yul\":15058:15151   */\n      tag_221\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":15176:15178   */\n      0x20\n        /* \"#utility.yul\":15171:15174   */\n      dup3\n        /* \"#utility.yul\":15167:15179   */\n      add\n        /* \"#utility.yul\":15160:15179   */\n      swap1\n      pop\n        /* \"#utility.yul\":14819:15185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15191:15610   */\n    tag_121:\n        /* \"#utility.yul\":15357:15361   */\n      0x00\n        /* \"#utility.yul\":15395:15397   */\n      0x20\n        /* \"#utility.yul\":15384:15393   */\n      dup3\n        /* \"#utility.yul\":15380:15398   */\n      add\n        /* \"#utility.yul\":15372:15398   */\n      swap1\n      pop\n        /* \"#utility.yul\":15444:15453   */\n      dup2\n        /* \"#utility.yul\":15438:15442   */\n      dup2\n        /* \"#utility.yul\":15434:15454   */\n      sub\n        /* \"#utility.yul\":15430:15431   */\n      0x00\n        /* \"#utility.yul\":15419:15428   */\n      dup4\n        /* \"#utility.yul\":15415:15432   */\n      add\n        /* \"#utility.yul\":15408:15455   */\n      mstore\n        /* \"#utility.yul\":15472:15603   */\n      tag_376\n        /* \"#utility.yul\":15598:15602   */\n      dup2\n        /* \"#utility.yul\":15472:15603   */\n      tag_222\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":15464:15603   */\n      swap1\n      pop\n        /* \"#utility.yul\":15191:15610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15616:15837   */\n    tag_223:\n        /* \"#utility.yul\":15756:15790   */\n      0x4475726174696f6e206d7573742062652067726561746572207468616e207a65\n        /* \"#utility.yul\":15752:15753   */\n      0x00\n        /* \"#utility.yul\":15744:15750   */\n      dup3\n        /* \"#utility.yul\":15740:15754   */\n      add\n        /* \"#utility.yul\":15733:15791   */\n      mstore\n        /* \"#utility.yul\":15825:15829   */\n      0x726f000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15820:15822   */\n      0x20\n        /* \"#utility.yul\":15812:15818   */\n      dup3\n        /* \"#utility.yul\":15808:15823   */\n      add\n        /* \"#utility.yul\":15801:15830   */\n      mstore\n        /* \"#utility.yul\":15616:15837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15843:16209   */\n    tag_224:\n        /* \"#utility.yul\":15985:15988   */\n      0x00\n        /* \"#utility.yul\":16006:16073   */\n      tag_379\n        /* \"#utility.yul\":16070:16072   */\n      0x22\n        /* \"#utility.yul\":16065:16068   */\n      dup4\n        /* \"#utility.yul\":16006:16073   */\n      tag_201\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":15999:16073   */\n      swap2\n      pop\n        /* \"#utility.yul\":16082:16175   */\n      tag_380\n        /* \"#utility.yul\":16171:16174   */\n      dup3\n        /* \"#utility.yul\":16082:16175   */\n      tag_223\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":16200:16202   */\n      0x40\n        /* \"#utility.yul\":16195:16198   */\n      dup3\n        /* \"#utility.yul\":16191:16203   */\n      add\n        /* \"#utility.yul\":16184:16203   */\n      swap1\n      pop\n        /* \"#utility.yul\":15843:16209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16215:16634   */\n    tag_124:\n        /* \"#utility.yul\":16381:16385   */\n      0x00\n        /* \"#utility.yul\":16419:16421   */\n      0x20\n        /* \"#utility.yul\":16408:16417   */\n      dup3\n        /* \"#utility.yul\":16404:16422   */\n      add\n        /* \"#utility.yul\":16396:16422   */\n      swap1\n      pop\n        /* \"#utility.yul\":16468:16477   */\n      dup2\n        /* \"#utility.yul\":16462:16466   */\n      dup2\n        /* \"#utility.yul\":16458:16478   */\n      sub\n        /* \"#utility.yul\":16454:16455   */\n      0x00\n        /* \"#utility.yul\":16443:16452   */\n      dup4\n        /* \"#utility.yul\":16439:16456   */\n      add\n        /* \"#utility.yul\":16432:16479   */\n      mstore\n        /* \"#utility.yul\":16496:16627   */\n      tag_382\n        /* \"#utility.yul\":16622:16626   */\n      dup2\n        /* \"#utility.yul\":16496:16627   */\n      tag_224\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":16488:16627   */\n      swap1\n      pop\n        /* \"#utility.yul\":16215:16634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16640:16814   */\n    tag_225:\n        /* \"#utility.yul\":16780:16806   */\n      0x496e76616c696420636f6e747261637420616464726573730000000000000000\n        /* \"#utility.yul\":16776:16777   */\n      0x00\n        /* \"#utility.yul\":16768:16774   */\n      dup3\n        /* \"#utility.yul\":16764:16778   */\n      add\n        /* \"#utility.yul\":16757:16807   */\n      mstore\n        /* \"#utility.yul\":16640:16814   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16820:17186   */\n    tag_226:\n        /* \"#utility.yul\":16962:16965   */\n      0x00\n        /* \"#utility.yul\":16983:17050   */\n      tag_385\n        /* \"#utility.yul\":17047:17049   */\n      0x18\n        /* \"#utility.yul\":17042:17045   */\n      dup4\n        /* \"#utility.yul\":16983:17050   */\n      tag_201\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":16976:17050   */\n      swap2\n      pop\n        /* \"#utility.yul\":17059:17152   */\n      tag_386\n        /* \"#utility.yul\":17148:17151   */\n      dup3\n        /* \"#utility.yul\":17059:17152   */\n      tag_225\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":17177:17179   */\n      0x20\n        /* \"#utility.yul\":17172:17175   */\n      dup3\n        /* \"#utility.yul\":17168:17180   */\n      add\n        /* \"#utility.yul\":17161:17180   */\n      swap1\n      pop\n        /* \"#utility.yul\":16820:17186   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17192:17611   */\n    tag_127:\n        /* \"#utility.yul\":17358:17362   */\n      0x00\n        /* \"#utility.yul\":17396:17398   */\n      0x20\n        /* \"#utility.yul\":17385:17394   */\n      dup3\n        /* \"#utility.yul\":17381:17399   */\n      add\n        /* \"#utility.yul\":17373:17399   */\n      swap1\n      pop\n        /* \"#utility.yul\":17445:17454   */\n      dup2\n        /* \"#utility.yul\":17439:17443   */\n      dup2\n        /* \"#utility.yul\":17435:17455   */\n      sub\n        /* \"#utility.yul\":17431:17432   */\n      0x00\n        /* \"#utility.yul\":17420:17429   */\n      dup4\n        /* \"#utility.yul\":17416:17433   */\n      add\n        /* \"#utility.yul\":17409:17456   */\n      mstore\n        /* \"#utility.yul\":17473:17604   */\n      tag_388\n        /* \"#utility.yul\":17599:17603   */\n      dup2\n        /* \"#utility.yul\":17473:17604   */\n      tag_226\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":17465:17604   */\n      swap1\n      pop\n        /* \"#utility.yul\":17192:17611   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17617:17790   */\n    tag_227:\n        /* \"#utility.yul\":17757:17782   */\n      0x546f6b656e20616c6c6f77616e636520746f6f206c6f77000000000000000000\n        /* \"#utility.yul\":17753:17754   */\n      0x00\n        /* \"#utility.yul\":17745:17751   */\n      dup3\n        /* \"#utility.yul\":17741:17755   */\n      add\n        /* \"#utility.yul\":17734:17783   */\n      mstore\n        /* \"#utility.yul\":17617:17790   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17796:18162   */\n    tag_228:\n        /* \"#utility.yul\":17938:17941   */\n      0x00\n        /* \"#utility.yul\":17959:18026   */\n      tag_391\n        /* \"#utility.yul\":18023:18025   */\n      0x17\n        /* \"#utility.yul\":18018:18021   */\n      dup4\n        /* \"#utility.yul\":17959:18026   */\n      tag_201\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":17952:18026   */\n      swap2\n      pop\n        /* \"#utility.yul\":18035:18128   */\n      tag_392\n        /* \"#utility.yul\":18124:18127   */\n      dup3\n        /* \"#utility.yul\":18035:18128   */\n      tag_227\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":18153:18155   */\n      0x20\n        /* \"#utility.yul\":18148:18151   */\n      dup3\n        /* \"#utility.yul\":18144:18156   */\n      add\n        /* \"#utility.yul\":18137:18156   */\n      swap1\n      pop\n        /* \"#utility.yul\":17796:18162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18168:18587   */\n    tag_134:\n        /* \"#utility.yul\":18334:18338   */\n      0x00\n        /* \"#utility.yul\":18372:18374   */\n      0x20\n        /* \"#utility.yul\":18361:18370   */\n      dup3\n        /* \"#utility.yul\":18357:18375   */\n      add\n        /* \"#utility.yul\":18349:18375   */\n      swap1\n      pop\n        /* \"#utility.yul\":18421:18430   */\n      dup2\n        /* \"#utility.yul\":18415:18419   */\n      dup2\n        /* \"#utility.yul\":18411:18431   */\n      sub\n        /* \"#utility.yul\":18407:18408   */\n      0x00\n        /* \"#utility.yul\":18396:18405   */\n      dup4\n        /* \"#utility.yul\":18392:18409   */\n      add\n        /* \"#utility.yul\":18385:18432   */\n      mstore\n        /* \"#utility.yul\":18449:18580   */\n      tag_394\n        /* \"#utility.yul\":18575:18579   */\n      dup2\n        /* \"#utility.yul\":18449:18580   */\n      tag_228\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":18441:18580   */\n      swap1\n      pop\n        /* \"#utility.yul\":18168:18587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18593:18826   */\n    tag_137:\n        /* \"#utility.yul\":18632:18635   */\n      0x00\n        /* \"#utility.yul\":18655:18679   */\n      tag_396\n        /* \"#utility.yul\":18673:18678   */\n      dup3\n        /* \"#utility.yul\":18655:18679   */\n      tag_192\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":18646:18679   */\n      swap2\n      pop\n        /* \"#utility.yul\":18701:18767   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18694:18699   */\n      dup3\n        /* \"#utility.yul\":18691:18768   */\n      sub\n        /* \"#utility.yul\":18688:18791   */\n      tag_397\n      jumpi\n        /* \"#utility.yul\":18771:18789   */\n      tag_398\n      tag_208\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":18688:18791   */\n    tag_397:\n        /* \"#utility.yul\":18818:18819   */\n      0x01\n        /* \"#utility.yul\":18811:18816   */\n      dup3\n        /* \"#utility.yul\":18807:18820   */\n      add\n        /* \"#utility.yul\":18800:18820   */\n      swap1\n      pop\n        /* \"#utility.yul\":18593:18826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18832:19385   */\n    tag_141:\n        /* \"#utility.yul\":19009:19013   */\n      0x00\n        /* \"#utility.yul\":19047:19050   */\n      0x80\n        /* \"#utility.yul\":19036:19045   */\n      dup3\n        /* \"#utility.yul\":19032:19051   */\n      add\n        /* \"#utility.yul\":19024:19051   */\n      swap1\n      pop\n        /* \"#utility.yul\":19061:19132   */\n      tag_400\n        /* \"#utility.yul\":19129:19130   */\n      0x00\n        /* \"#utility.yul\":19118:19127   */\n      dup4\n        /* \"#utility.yul\":19114:19131   */\n      add\n        /* \"#utility.yul\":19105:19111   */\n      dup8\n        /* \"#utility.yul\":19061:19132   */\n      tag_193\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":19142:19214   */\n      tag_401\n        /* \"#utility.yul\":19210:19212   */\n      0x20\n        /* \"#utility.yul\":19199:19208   */\n      dup4\n        /* \"#utility.yul\":19195:19213   */\n      add\n        /* \"#utility.yul\":19186:19192   */\n      dup7\n        /* \"#utility.yul\":19142:19214   */\n      tag_193\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":19224:19296   */\n      tag_402\n        /* \"#utility.yul\":19292:19294   */\n      0x40\n        /* \"#utility.yul\":19281:19290   */\n      dup4\n        /* \"#utility.yul\":19277:19295   */\n      add\n        /* \"#utility.yul\":19268:19274   */\n      dup6\n        /* \"#utility.yul\":19224:19296   */\n      tag_193\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":19306:19378   */\n      tag_403\n        /* \"#utility.yul\":19374:19376   */\n      0x60\n        /* \"#utility.yul\":19363:19372   */\n      dup4\n        /* \"#utility.yul\":19359:19377   */\n      add\n        /* \"#utility.yul\":19350:19356   */\n      dup5\n        /* \"#utility.yul\":19306:19378   */\n      tag_193\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":18832:19385   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19391:19573   */\n    tag_229:\n        /* \"#utility.yul\":19531:19565   */\n      0x4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177\n        /* \"#utility.yul\":19527:19528   */\n      0x00\n        /* \"#utility.yul\":19519:19525   */\n      dup3\n        /* \"#utility.yul\":19515:19529   */\n      add\n        /* \"#utility.yul\":19508:19566   */\n      mstore\n        /* \"#utility.yul\":19391:19573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19579:19945   */\n    tag_230:\n        /* \"#utility.yul\":19721:19724   */\n      0x00\n        /* \"#utility.yul\":19742:19809   */\n      tag_406\n        /* \"#utility.yul\":19806:19808   */\n      0x20\n        /* \"#utility.yul\":19801:19804   */\n      dup4\n        /* \"#utility.yul\":19742:19809   */\n      tag_201\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":19735:19809   */\n      swap2\n      pop\n        /* \"#utility.yul\":19818:19911   */\n      tag_407\n        /* \"#utility.yul\":19907:19910   */\n      dup3\n        /* \"#utility.yul\":19818:19911   */\n      tag_229\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":19936:19938   */\n      0x20\n        /* \"#utility.yul\":19931:19934   */\n      dup3\n        /* \"#utility.yul\":19927:19939   */\n      add\n        /* \"#utility.yul\":19920:19939   */\n      swap1\n      pop\n        /* \"#utility.yul\":19579:19945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19951:20370   */\n    tag_147:\n        /* \"#utility.yul\":20117:20121   */\n      0x00\n        /* \"#utility.yul\":20155:20157   */\n      0x20\n        /* \"#utility.yul\":20144:20153   */\n      dup3\n        /* \"#utility.yul\":20140:20158   */\n      add\n        /* \"#utility.yul\":20132:20158   */\n      swap1\n      pop\n        /* \"#utility.yul\":20204:20213   */\n      dup2\n        /* \"#utility.yul\":20198:20202   */\n      dup2\n        /* \"#utility.yul\":20194:20214   */\n      sub\n        /* \"#utility.yul\":20190:20191   */\n      0x00\n        /* \"#utility.yul\":20179:20188   */\n      dup4\n        /* \"#utility.yul\":20175:20192   */\n      add\n        /* \"#utility.yul\":20168:20215   */\n      mstore\n        /* \"#utility.yul\":20232:20363   */\n      tag_409\n        /* \"#utility.yul\":20358:20362   */\n      dup2\n        /* \"#utility.yul\":20232:20363   */\n      tag_230\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":20224:20363   */\n      swap1\n      pop\n        /* \"#utility.yul\":19951:20370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20376:20547   */\n    tag_231:\n        /* \"#utility.yul\":20516:20539   */\n      0x4c697374696e6720686173206e6f7420656e6465640000000000000000000000\n        /* \"#utility.yul\":20512:20513   */\n      0x00\n        /* \"#utility.yul\":20504:20510   */\n      dup3\n        /* \"#utility.yul\":20500:20514   */\n      add\n        /* \"#utility.yul\":20493:20540   */\n      mstore\n        /* \"#utility.yul\":20376:20547   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20553:20919   */\n    tag_232:\n        /* \"#utility.yul\":20695:20698   */\n      0x00\n        /* \"#utility.yul\":20716:20783   */\n      tag_412\n        /* \"#utility.yul\":20780:20782   */\n      0x15\n        /* \"#utility.yul\":20775:20778   */\n      dup4\n        /* \"#utility.yul\":20716:20783   */\n      tag_201\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":20709:20783   */\n      swap2\n      pop\n        /* \"#utility.yul\":20792:20885   */\n      tag_413\n        /* \"#utility.yul\":20881:20884   */\n      dup3\n        /* \"#utility.yul\":20792:20885   */\n      tag_231\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":20910:20912   */\n      0x20\n        /* \"#utility.yul\":20905:20908   */\n      dup3\n        /* \"#utility.yul\":20901:20913   */\n      add\n        /* \"#utility.yul\":20894:20913   */\n      swap1\n      pop\n        /* \"#utility.yul\":20553:20919   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20925:21344   */\n    tag_150:\n        /* \"#utility.yul\":21091:21095   */\n      0x00\n        /* \"#utility.yul\":21129:21131   */\n      0x20\n        /* \"#utility.yul\":21118:21127   */\n      dup3\n        /* \"#utility.yul\":21114:21132   */\n      add\n        /* \"#utility.yul\":21106:21132   */\n      swap1\n      pop\n        /* \"#utility.yul\":21178:21187   */\n      dup2\n        /* \"#utility.yul\":21172:21176   */\n      dup2\n        /* \"#utility.yul\":21168:21188   */\n      sub\n        /* \"#utility.yul\":21164:21165   */\n      0x00\n        /* \"#utility.yul\":21153:21162   */\n      dup4\n        /* \"#utility.yul\":21149:21166   */\n      add\n        /* \"#utility.yul\":21142:21189   */\n      mstore\n        /* \"#utility.yul\":21206:21337   */\n      tag_415\n        /* \"#utility.yul\":21332:21336   */\n      dup2\n        /* \"#utility.yul\":21206:21337   */\n      tag_232\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":21198:21337   */\n      swap1\n      pop\n        /* \"#utility.yul\":20925:21344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21350:21521   */\n    tag_233:\n        /* \"#utility.yul\":21490:21513   */\n      0x4e6f20746f6b656e7320746f2077697468647261770000000000000000000000\n        /* \"#utility.yul\":21486:21487   */\n      0x00\n        /* \"#utility.yul\":21478:21484   */\n      dup3\n        /* \"#utility.yul\":21474:21488   */\n      add\n        /* \"#utility.yul\":21467:21514   */\n      mstore\n        /* \"#utility.yul\":21350:21521   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21527:21893   */\n    tag_234:\n        /* \"#utility.yul\":21669:21672   */\n      0x00\n        /* \"#utility.yul\":21690:21757   */\n      tag_418\n        /* \"#utility.yul\":21754:21756   */\n      0x15\n        /* \"#utility.yul\":21749:21752   */\n      dup4\n        /* \"#utility.yul\":21690:21757   */\n      tag_201\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":21683:21757   */\n      swap2\n      pop\n        /* \"#utility.yul\":21766:21859   */\n      tag_419\n        /* \"#utility.yul\":21855:21858   */\n      dup3\n        /* \"#utility.yul\":21766:21859   */\n      tag_233\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":21884:21886   */\n      0x20\n        /* \"#utility.yul\":21879:21882   */\n      dup3\n        /* \"#utility.yul\":21875:21887   */\n      add\n        /* \"#utility.yul\":21868:21887   */\n      swap1\n      pop\n        /* \"#utility.yul\":21527:21893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21899:22318   */\n    tag_153:\n        /* \"#utility.yul\":22065:22069   */\n      0x00\n        /* \"#utility.yul\":22103:22105   */\n      0x20\n        /* \"#utility.yul\":22092:22101   */\n      dup3\n        /* \"#utility.yul\":22088:22106   */\n      add\n        /* \"#utility.yul\":22080:22106   */\n      swap1\n      pop\n        /* \"#utility.yul\":22152:22161   */\n      dup2\n        /* \"#utility.yul\":22146:22150   */\n      dup2\n        /* \"#utility.yul\":22142:22162   */\n      sub\n        /* \"#utility.yul\":22138:22139   */\n      0x00\n        /* \"#utility.yul\":22127:22136   */\n      dup4\n        /* \"#utility.yul\":22123:22140   */\n      add\n        /* \"#utility.yul\":22116:22163   */\n      mstore\n        /* \"#utility.yul\":22180:22311   */\n      tag_421\n        /* \"#utility.yul\":22306:22310   */\n      dup2\n        /* \"#utility.yul\":22180:22311   */\n      tag_234\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":22172:22311   */\n      swap1\n      pop\n        /* \"#utility.yul\":21899:22318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22324:22766   */\n    tag_167:\n        /* \"#utility.yul\":22473:22477   */\n      0x00\n        /* \"#utility.yul\":22511:22513   */\n      0x60\n        /* \"#utility.yul\":22500:22509   */\n      dup3\n        /* \"#utility.yul\":22496:22514   */\n      add\n        /* \"#utility.yul\":22488:22514   */\n      swap1\n      pop\n        /* \"#utility.yul\":22524:22595   */\n      tag_423\n        /* \"#utility.yul\":22592:22593   */\n      0x00\n        /* \"#utility.yul\":22581:22590   */\n      dup4\n        /* \"#utility.yul\":22577:22594   */\n      add\n        /* \"#utility.yul\":22568:22574   */\n      dup7\n        /* \"#utility.yul\":22524:22595   */\n      tag_191\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":22605:22677   */\n      tag_424\n        /* \"#utility.yul\":22673:22675   */\n      0x20\n        /* \"#utility.yul\":22662:22671   */\n      dup4\n        /* \"#utility.yul\":22658:22676   */\n      add\n        /* \"#utility.yul\":22649:22655   */\n      dup6\n        /* \"#utility.yul\":22605:22677   */\n      tag_191\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":22687:22759   */\n      tag_425\n        /* \"#utility.yul\":22755:22757   */\n      0x40\n        /* \"#utility.yul\":22744:22753   */\n      dup4\n        /* \"#utility.yul\":22740:22758   */\n      add\n        /* \"#utility.yul\":22731:22737   */\n      dup5\n        /* \"#utility.yul\":22687:22759   */\n      tag_193\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":22324:22766   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22772:23104   */\n    tag_172:\n        /* \"#utility.yul\":22893:22897   */\n      0x00\n        /* \"#utility.yul\":22931:22933   */\n      0x40\n        /* \"#utility.yul\":22920:22929   */\n      dup3\n        /* \"#utility.yul\":22916:22934   */\n      add\n        /* \"#utility.yul\":22908:22934   */\n      swap1\n      pop\n        /* \"#utility.yul\":22944:23015   */\n      tag_427\n        /* \"#utility.yul\":23012:23013   */\n      0x00\n        /* \"#utility.yul\":23001:23010   */\n      dup4\n        /* \"#utility.yul\":22997:23014   */\n      add\n        /* \"#utility.yul\":22988:22994   */\n      dup6\n        /* \"#utility.yul\":22944:23015   */\n      tag_191\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":23025:23097   */\n      tag_428\n        /* \"#utility.yul\":23093:23095   */\n      0x20\n        /* \"#utility.yul\":23082:23091   */\n      dup4\n        /* \"#utility.yul\":23078:23096   */\n      add\n        /* \"#utility.yul\":23069:23075   */\n      dup5\n        /* \"#utility.yul\":23025:23097   */\n      tag_193\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":22772:23104   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b3cc67c450942aad31a55d9e6e8b9bbb96b7a4ce1585b261a2ec64600fa5c39464736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1454": {
									"entryPoint": null,
									"id": 1454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1536": {
									"entryPoint": null,
									"id": 1536,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 241,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:13",
										"nodeType": "YulBlock",
										"src": "0:590:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405273fcf8d2b098b3160654bbada1a8769483c71c288b60045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015610063575f5ffd5b503360015f819055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100dc575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100d391906101f3565b60405180910390fd5b6100eb816100f160201b60201c565b5061020c565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101dd826101b4565b9050919050565b6101ed816101d3565b82525050565b5f6020820190506102065f8301846101e4565b92915050565b611bde806102195f395ff3fe608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80637d60b6ce1161006f5780637d60b6ce146101545780638da5cb5b146101705780639ffae41b1461018e578063de74e57b146101aa578063f25713bf146101de578063f2fde38b146101fa576100b2565b806317c73ff0146100b65780631bf1de9b146100d457806324f56afa146100f257806327722e621461010e5780636c2c9c7d1461012c578063715018a61461014a575b5f5ffd5b6100be610216565b6040516100cb91906110eb565b60405180910390f35b6100dc61023b565b6040516100e9919061111c565b60405180910390f35b61010c60048036038101906101079190611163565b610240565b005b6101166105f0565b60405161012391906110eb565b60405180910390f35b610134610608565b604051610141919061111c565b60405180910390f35b61015261060e565b005b61016e600480360381019061016991906111dd565b610621565b005b6101786106da565b60405161018591906110eb565b60405180910390f35b6101a860048036038101906101a39190611208565b610702565b005b6101c460048036038101906101bf919061126c565b610ad5565b6040516101d5959493929190611297565b60405180910390f35b6101f860048036038101906101f3919061126c565b610b45565b005b610214600480360381019061020f91906111dd565b610cee565b005b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b610248610d72565b5f60025f8581526020019081526020015f2090505f8160020154116102a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029990611342565b60405180910390fd5b80600401544211156102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e0906113aa565b60405180910390fd5b8281600201541015610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790611412565b60405180910390fd5b5f838260010154610341919061145d565b90505f6064600a83610353919061145d565b61035d91906114cb565b90505f818361036c91906114fb565b90508085146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611578565b60405180910390fd5b5f735fdaf637aed59b2e6d384d9e84d8ac5cf03c66979050858173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610404929190611596565b602060405180830381865afa15801561041f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044391906115d1565b1015610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90611646565b60405180910390fd5b6104d23360045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b61052233866003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b86856002015f8282546105359190611664565b925050819055506105893388875f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e389092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fdca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf589898760016040516105d694939291906116b1565b60405180910390a250505050506105eb610eb7565b505050565b735fdaf637aed59b2e6d384d9e84d8ac5cf03c669781565b60035481565b610616610ec0565b61061f5f610f47565b565b610629610ec0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e9061173e565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8411610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906117a6565b60405180910390fd5b5f8211610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d9061180e565b60405180910390fd5b5f81116107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061189c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611904565b60405180910390fd5b5f839050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610876929190611596565b602060405180830381865afa158015610891573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108b591906115d1565b10156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061196c565b60405180910390fd5b6109233330858473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b60035f8154809291906109359061198a565b91905055506040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001834261099591906114fb565b81525060025f60035481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b60035488878742610ab691906114fb565b604051610ac694939291906119d1565b60405180910390a35050505050565b6002602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b610b4d610d72565b5f60025f8381526020019081526020015f209050806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990611a5e565b60405180910390fd5b80600401544211610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611ac6565b60405180910390fd5b5f816002015411610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7590611b2e565b60405180910390fd5b5f816002015490505f82600201819055505f825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610ce033838373ffffffffffffffffffffffffffffffffffffffff16610e389092919063ffffffff16565b505050610ceb610eb7565b50565b610cf6610ec0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d66575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d5d91906110eb565b60405180910390fd5b610d6f81610f47565b50565b60025f5403610dad576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b610e32848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610deb93929190611b4c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061100a565b50505050565b610eb2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e6b929190611b81565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061100a565b505050565b60015f81905550565b610ec86110a5565b73ffffffffffffffffffffffffffffffffffffffff16610ee66106da565b73ffffffffffffffffffffffffffffffffffffffff1614610f4557610f096110a5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f3c91906110eb565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f60205f8451602086015f885af180611029576040513d5f823e3d81fd5b3d92505f519150505f821461104257600181141561105d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109f57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161109691906110eb565b60405180910390fd5b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110d5826110ac565b9050919050565b6110e5816110cb565b82525050565b5f6020820190506110fe5f8301846110dc565b92915050565b5f819050919050565b61111681611104565b82525050565b5f60208201905061112f5f83018461110d565b92915050565b5f5ffd5b61114281611104565b811461114c575f5ffd5b50565b5f8135905061115d81611139565b92915050565b5f5f5f6060848603121561117a57611179611135565b5b5f6111878682870161114f565b93505060206111988682870161114f565b92505060406111a98682870161114f565b9150509250925092565b6111bc816110cb565b81146111c6575f5ffd5b50565b5f813590506111d7816111b3565b92915050565b5f602082840312156111f2576111f1611135565b5b5f6111ff848285016111c9565b91505092915050565b5f5f5f5f608085870312156112205761121f611135565b5b5f61122d8782880161114f565b945050602061123e878288016111c9565b935050604061124f8782880161114f565b92505060606112608782880161114f565b91505092959194509250565b5f6020828403121561128157611280611135565b5b5f61128e8482850161114f565b91505092915050565b5f60a0820190506112aa5f8301886110dc565b6112b7602083018761110d565b6112c4604083018661110d565b6112d160608301856110dc565b6112de608083018461110d565b9695505050505050565b5f82825260208201905092915050565b7f4c697374696e6720646f6573206e6f74206578697374000000000000000000005f82015250565b5f61132c6016836112e8565b9150611337826112f8565b602082019050919050565b5f6020820190508181035f83015261135981611320565b9050919050565b7f4c697374696e67206861732065787069726564000000000000000000000000005f82015250565b5f6113946013836112e8565b915061139f82611360565b602082019050919050565b5f6020820190508181035f8301526113c181611388565b9050919050565b7f4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67000000005f82015250565b5f6113fc601c836112e8565b9150611407826113c8565b602082019050919050565b5f6020820190508181035f830152611429816113f0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61146782611104565b915061147283611104565b925082820261148081611104565b9150828204841483151761149757611496611430565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114d582611104565b91506114e083611104565b9250826114f0576114ef61149e565b5b828204905092915050565b5f61150582611104565b915061151083611104565b925082820190508082111561152857611527611430565b5b92915050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f6115626018836112e8565b915061156d8261152e565b602082019050919050565b5f6020820190508181035f83015261158f81611556565b9050919050565b5f6040820190506115a95f8301856110dc565b6115b660208301846110dc565b9392505050565b5f815190506115cb81611139565b92915050565b5f602082840312156115e6576115e5611135565b5b5f6115f3848285016115bd565b91505092915050565b7f5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77005f82015250565b5f611630601f836112e8565b915061163b826115fc565b602082019050919050565b5f6020820190508181035f83015261165d81611624565b9050919050565b5f61166e82611104565b915061167983611104565b925082820390508181111561169157611690611430565b5b92915050565b5f8115159050919050565b6116ab81611697565b82525050565b5f6080820190506116c45f83018761110d565b6116d1602083018661110d565b6116de604083018561110d565b6116eb60608301846116a2565b95945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611728600f836112e8565b9150611733826116f4565b602082019050919050565b5f6020820190508181035f8301526117558161171c565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f611790601f836112e8565b915061179b8261175c565b602082019050919050565b5f6020820190508181035f8301526117bd81611784565b9050919050565b7f546f6b656e73206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f6117f86020836112e8565b9150611803826117c4565b602082019050919050565b5f6020820190508181035f830152611825816117ec565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f6118866022836112e8565b91506118918261182c565b604082019050919050565b5f6020820190508181035f8301526118b38161187a565b9050919050565b7f496e76616c696420636f6e7472616374206164647265737300000000000000005f82015250565b5f6118ee6018836112e8565b91506118f9826118ba565b602082019050919050565b5f6020820190508181035f83015261191b816118e2565b9050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f770000000000000000005f82015250565b5f6119566017836112e8565b915061196182611922565b602082019050919050565b5f6020820190508181035f8301526119838161194a565b9050919050565b5f61199482611104565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119c6576119c5611430565b5b600182019050919050565b5f6080820190506119e45f83018761110d565b6119f1602083018661110d565b6119fe604083018561110d565b611a0b606083018461110d565b95945050505050565b7f4f6e6c79206c697374696e672073656c6c65722063616e2077697468647261775f82015250565b5f611a486020836112e8565b9150611a5382611a14565b602082019050919050565b5f6020820190508181035f830152611a7581611a3c565b9050919050565b7f4c697374696e6720686173206e6f7420656e64656400000000000000000000005f82015250565b5f611ab06015836112e8565b9150611abb82611a7c565b602082019050919050565b5f6020820190508181035f830152611add81611aa4565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f611b186015836112e8565b9150611b2382611ae4565b602082019050919050565b5f6020820190508181035f830152611b4581611b0c565b9050919050565b5f606082019050611b5f5f8301866110dc565b611b6c60208301856110dc565b611b79604083018461110d565b949350505050565b5f604082019050611b945f8301856110dc565b611ba1602083018461110d565b939250505056fea2646970667358221220b3cc67c450942aad31a55d9e6e8b9bbb96b7a4ce1585b261a2ec64600fa5c39464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0xFCF8D2B098B3160654BBADA1A8769483C71C288B PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLER PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEB DUP2 PUSH2 0xF1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x20C JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DD DUP3 PUSH2 0x1B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ED DUP2 PUSH2 0x1D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x206 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BDE DUP1 PUSH2 0x219 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D60B6CE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x7D60B6CE EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF25713BF EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x24F56AFA EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x27722E62 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x60E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x248 PUSH2 0xD72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0x5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697 SWAP1 POP DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 CALLER PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x522 CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x589 CALLER DUP9 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5 DUP10 DUP10 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x5EB PUSH2 0xEB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x616 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x61F PUSH0 PUSH2 0xF47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x629 PUSH2 0xEC0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP1 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x876 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x923 CALLER ADDRESS DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x935 SWAP1 PUSH2 0x198A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B PUSH1 0x3 SLOAD DUP9 DUP8 DUP8 TIMESTAMP PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xB4D PUSH2 0xD72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2F SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC75 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xCE0 CALLER DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0xCEB PUSH2 0xEB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0xEC0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD66 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6F DUP2 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE32 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEB2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE6B SWAP3 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x100A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEC8 PUSH2 0x10A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE6 PUSH2 0x6DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF45 JUMPI PUSH2 0xF09 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1042 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x105D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x109F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E5 DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FE PUSH0 DUP4 ADD DUP5 PUSH2 0x10DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH0 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1142 DUP2 PUSH2 0x1104 JUMP JUMPDEST DUP2 EQ PUSH2 0x114C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115D DUP2 PUSH2 0x1139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1187 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1198 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11A9 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x11BC DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11FF DUP5 DUP3 DUP6 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x122D DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x123E DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x124F DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1260 DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x128E DUP5 DUP3 DUP6 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x12AA PUSH0 DUP4 ADD DUP9 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x12B7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x12C4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x12D1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x12DE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132C PUSH1 0x16 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1337 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1359 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1394 PUSH1 0x13 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13FC PUSH1 0x1C DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1407 DUP3 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1429 DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1467 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1480 DUP2 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14D5 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14F0 JUMPI PUSH2 0x14EF PUSH2 0x149E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1505 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1562 PUSH1 0x18 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x156D DUP3 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158F DUP2 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15CB DUP2 PUSH2 0x1139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F3 DUP5 DUP3 DUP6 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 PUSH1 0x1F DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x163B DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165D DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x166E DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1691 JUMPI PUSH2 0x1690 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AB DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16C4 PUSH0 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16D1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16EB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1728 PUSH1 0xF DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1733 DUP3 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1755 DUP2 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1790 PUSH1 0x1F DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP3 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BD DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 PUSH1 0x20 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1803 DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1825 DUP2 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0x22 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH1 0x18 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191B DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1956 PUSH1 0x17 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1961 DUP3 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1983 DUP2 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1994 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19E4 PUSH0 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x19F1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x19FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1A0B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A48 PUSH1 0x20 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A53 DUP3 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A75 DUP2 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH1 0x15 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADD DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B18 PUSH1 0x15 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B23 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B45 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B5F PUSH0 DUP4 ADD DUP7 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1B6C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1B79 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B94 PUSH0 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1BA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xCC PUSH8 0xC450942AAD31A55D SWAP15 PUSH15 0x8B9BBB96B7A4CE1585B261A2EC6460 0xF 0xA5 0xC3 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "309:3855:12:-:0;;;720:42;685:77;;;;;;;;;;;;;;;;;;;;397:38;;;;;;;;;;420:10;1857:1:10;2061:7;:21;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;309:3855:12;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;309:3855:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@COMMISSION_PERCENTAGE_1560": {
									"entryPoint": 571,
									"id": 1560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@COMMISSION_WALLET_1557": {
									"entryPoint": 534,
									"id": 1557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MELS_ADDRESS_1563": {
									"entryPoint": 1520,
									"id": 1563,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1360": {
									"entryPoint": 4106,
									"id": 1360,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3776,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1414": {
									"entryPoint": 4261,
									"id": 1414,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1489": {
									"entryPoint": 3767,
									"id": 1489,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1481": {
									"entryPoint": 3442,
									"id": 1481,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3911,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addListing_1698": {
									"entryPoint": 1794,
									"id": 1698,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@buyTokensWithERC20_1837": {
									"entryPoint": 576,
									"id": 1837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@listingCounter_1554": {
									"entryPoint": 1544,
									"id": 1554,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listings_1552": {
									"entryPoint": 2773,
									"id": 1552,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1754,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1550,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_1065": {
									"entryPoint": 3510,
									"id": 1065,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_1038": {
									"entryPoint": 3640,
									"id": 1038,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setCommissionWallet_1927": {
									"entryPoint": 1569,
									"id": 1927,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3310,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokensFromListing_1905": {
									"entryPoint": 2885,
									"id": 1905,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256t_uint256": {
									"entryPoint": 4616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5794,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5526,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6988,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4759,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6609,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5732,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5278,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc": {
									"entryPoint": 6780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0": {
									"entryPoint": 5980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d": {
									"entryPoint": 5422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68": {
									"entryPoint": 6330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6": {
									"entryPoint": 6434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95": {
									"entryPoint": 5064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538": {
									"entryPoint": 4960,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55": {
									"entryPoint": 4856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471": {
									"entryPoint": 6676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b": {
									"entryPoint": 6084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:23107:13",
										"nodeType": "YulBlock",
										"src": "0:23107:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "638:32:13",
													"nodeType": "YulBlock",
													"src": "638:32:13",
													"statements": [
														{
															"nativeSrc": "648:16:13",
															"nodeType": "YulAssignment",
															"src": "648:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "659:5:13",
																"nodeType": "YulIdentifier",
																"src": "659:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "648:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "593:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "620:5:13",
														"nodeType": "YulTypedName",
														"src": "620:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "630:7:13",
														"nodeType": "YulTypedName",
														"src": "630:7:13",
														"type": ""
													}
												],
												"src": "593:77:13"
											},
											{
												"body": {
													"nativeSrc": "741:53:13",
													"nodeType": "YulBlock",
													"src": "741:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "758:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "758:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "781:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "781:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "763:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "763:17:13"
																		},
																		"nativeSrc": "763:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "763:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "751:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "751:6:13"
																},
																"nativeSrc": "751:37:13",
																"nodeType": "YulFunctionCall",
																"src": "751:37:13"
															},
															"nativeSrc": "751:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "751:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "676:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "729:5:13",
														"nodeType": "YulTypedName",
														"src": "729:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "736:3:13",
														"nodeType": "YulTypedName",
														"src": "736:3:13",
														"type": ""
													}
												],
												"src": "676:118:13"
											},
											{
												"body": {
													"nativeSrc": "898:124:13",
													"nodeType": "YulBlock",
													"src": "898:124:13",
													"statements": [
														{
															"nativeSrc": "908:26:13",
															"nodeType": "YulAssignment",
															"src": "908:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "920:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "920:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "931:2:13",
																		"nodeType": "YulLiteral",
																		"src": "931:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "916:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "916:3:13"
																},
																"nativeSrc": "916:18:13",
																"nodeType": "YulFunctionCall",
																"src": "916:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "908:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "908:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "988:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "988:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1012:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:13"
																		},
																		"nativeSrc": "997:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "997:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "944:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "944:43:13"
																},
																"nativeSrc": "944:71:13",
																"nodeType": "YulFunctionCall",
																"src": "944:71:13"
															},
															"nativeSrc": "944:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "944:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "800:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "870:9:13",
														"nodeType": "YulTypedName",
														"src": "870:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "882:6:13",
														"nodeType": "YulTypedName",
														"src": "882:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "893:4:13",
														"nodeType": "YulTypedName",
														"src": "893:4:13",
														"type": ""
													}
												],
												"src": "800:222:13"
											},
											{
												"body": {
													"nativeSrc": "1068:35:13",
													"nodeType": "YulBlock",
													"src": "1068:35:13",
													"statements": [
														{
															"nativeSrc": "1078:19:13",
															"nodeType": "YulAssignment",
															"src": "1078:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1094:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1094:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1088:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1088:5:13"
																},
																"nativeSrc": "1088:9:13",
																"nodeType": "YulFunctionCall",
																"src": "1088:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1078:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1078:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1028:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1061:6:13",
														"nodeType": "YulTypedName",
														"src": "1061:6:13",
														"type": ""
													}
												],
												"src": "1028:75:13"
											},
											{
												"body": {
													"nativeSrc": "1198:28:13",
													"nodeType": "YulBlock",
													"src": "1198:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1215:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1215:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1218:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1218:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1208:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:13"
																},
																"nativeSrc": "1208:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1208:12:13"
															},
															"nativeSrc": "1208:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1208:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1109:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1109:117:13"
											},
											{
												"body": {
													"nativeSrc": "1321:28:13",
													"nodeType": "YulBlock",
													"src": "1321:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1338:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1338:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1331:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1331:6:13"
																},
																"nativeSrc": "1331:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1331:12:13"
															},
															"nativeSrc": "1331:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1331:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1232:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1232:117:13"
											},
											{
												"body": {
													"nativeSrc": "1398:79:13",
													"nodeType": "YulBlock",
													"src": "1398:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:16:13",
																"nodeType": "YulBlock",
																"src": "1455:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1467:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1467:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1457:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1457:6:13"
																			},
																			"nativeSrc": "1457:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1457:12:13"
																		},
																		"nativeSrc": "1457:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1457:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1421:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1421:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1446:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1446:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1428:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1428:17:13"
																				},
																				"nativeSrc": "1428:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1428:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1418:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1418:2:13"
																		},
																		"nativeSrc": "1418:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:13"
																},
																"nativeSrc": "1411:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1411:43:13"
															},
															"nativeSrc": "1408:63:13",
															"nodeType": "YulIf",
															"src": "1408:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1355:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1391:5:13",
														"nodeType": "YulTypedName",
														"src": "1391:5:13",
														"type": ""
													}
												],
												"src": "1355:122:13"
											},
											{
												"body": {
													"nativeSrc": "1535:87:13",
													"nodeType": "YulBlock",
													"src": "1535:87:13",
													"statements": [
														{
															"nativeSrc": "1545:29:13",
															"nodeType": "YulAssignment",
															"src": "1545:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1567:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1554:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:13"
																},
																"nativeSrc": "1554:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1554:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1545:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1610:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1610:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1583:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1583:26:13"
																},
																"nativeSrc": "1583:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1583:33:13"
															},
															"nativeSrc": "1583:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1583:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1483:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1513:6:13",
														"nodeType": "YulTypedName",
														"src": "1513:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1521:3:13",
														"nodeType": "YulTypedName",
														"src": "1521:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1529:5:13",
														"nodeType": "YulTypedName",
														"src": "1529:5:13",
														"type": ""
													}
												],
												"src": "1483:139:13"
											},
											{
												"body": {
													"nativeSrc": "1728:519:13",
													"nodeType": "YulBlock",
													"src": "1728:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1774:83:13",
																"nodeType": "YulBlock",
																"src": "1774:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1776:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1776:77:13"
																			},
																			"nativeSrc": "1776:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1776:79:13"
																		},
																		"nativeSrc": "1776:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1776:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1749:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1749:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1745:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1745:3:13"
																		},
																		"nativeSrc": "1745:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1745:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1770:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1741:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1741:3:13"
																},
																"nativeSrc": "1741:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1741:32:13"
															},
															"nativeSrc": "1738:119:13",
															"nodeType": "YulIf",
															"src": "1738:119:13"
														},
														{
															"nativeSrc": "1867:117:13",
															"nodeType": "YulBlock",
															"src": "1867:117:13",
															"statements": [
																{
																	"nativeSrc": "1882:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1882:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1896:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1896:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1886:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1886:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1911:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1911:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1946:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1946:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1957:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1957:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1942:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1942:3:13"
																				},
																				"nativeSrc": "1942:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1942:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1966:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1966:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1921:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1921:20:13"
																		},
																		"nativeSrc": "1921:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1921:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1911:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1911:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1994:118:13",
															"nodeType": "YulBlock",
															"src": "1994:118:13",
															"statements": [
																{
																	"nativeSrc": "2009:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2009:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2023:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2023:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2013:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2013:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2039:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2039:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2074:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2074:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2085:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2085:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2070:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2070:3:13"
																				},
																				"nativeSrc": "2070:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2070:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2094:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2094:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2049:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2049:20:13"
																		},
																		"nativeSrc": "2049:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2049:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2039:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2039:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2122:118:13",
															"nodeType": "YulBlock",
															"src": "2122:118:13",
															"statements": [
																{
																	"nativeSrc": "2137:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2137:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2151:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2151:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2141:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2141:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2167:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2167:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2202:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2202:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2213:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2198:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:13"
																				},
																				"nativeSrc": "2198:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2198:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2222:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2177:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2177:20:13"
																		},
																		"nativeSrc": "2177:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2177:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2167:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "1628:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1682:9:13",
														"nodeType": "YulTypedName",
														"src": "1682:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1693:7:13",
														"nodeType": "YulTypedName",
														"src": "1693:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1705:6:13",
														"nodeType": "YulTypedName",
														"src": "1705:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1713:6:13",
														"nodeType": "YulTypedName",
														"src": "1713:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1721:6:13",
														"nodeType": "YulTypedName",
														"src": "1721:6:13",
														"type": ""
													}
												],
												"src": "1628:619:13"
											},
											{
												"body": {
													"nativeSrc": "2296:79:13",
													"nodeType": "YulBlock",
													"src": "2296:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2353:16:13",
																"nodeType": "YulBlock",
																"src": "2353:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2362:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2362:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2365:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2365:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2355:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2355:6:13"
																			},
																			"nativeSrc": "2355:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2355:12:13"
																		},
																		"nativeSrc": "2355:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2355:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2319:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2319:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2344:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2344:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2326:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2326:17:13"
																				},
																				"nativeSrc": "2326:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2326:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2316:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2316:2:13"
																		},
																		"nativeSrc": "2316:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2316:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2309:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2309:6:13"
																},
																"nativeSrc": "2309:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2309:43:13"
															},
															"nativeSrc": "2306:63:13",
															"nodeType": "YulIf",
															"src": "2306:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2253:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2289:5:13",
														"nodeType": "YulTypedName",
														"src": "2289:5:13",
														"type": ""
													}
												],
												"src": "2253:122:13"
											},
											{
												"body": {
													"nativeSrc": "2433:87:13",
													"nodeType": "YulBlock",
													"src": "2433:87:13",
													"statements": [
														{
															"nativeSrc": "2443:29:13",
															"nodeType": "YulAssignment",
															"src": "2443:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2465:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2465:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2452:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2452:12:13"
																},
																"nativeSrc": "2452:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2452:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2443:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2443:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2508:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2508:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2481:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2481:26:13"
																},
																"nativeSrc": "2481:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2481:33:13"
															},
															"nativeSrc": "2481:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2481:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2381:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2411:6:13",
														"nodeType": "YulTypedName",
														"src": "2411:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2419:3:13",
														"nodeType": "YulTypedName",
														"src": "2419:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2427:5:13",
														"nodeType": "YulTypedName",
														"src": "2427:5:13",
														"type": ""
													}
												],
												"src": "2381:139:13"
											},
											{
												"body": {
													"nativeSrc": "2592:263:13",
													"nodeType": "YulBlock",
													"src": "2592:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2638:83:13",
																"nodeType": "YulBlock",
																"src": "2638:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2640:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2640:77:13"
																			},
																			"nativeSrc": "2640:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:79:13"
																		},
																		"nativeSrc": "2640:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2613:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2613:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2622:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2622:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2609:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:13"
																		},
																		"nativeSrc": "2609:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2609:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2634:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2605:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2605:3:13"
																},
																"nativeSrc": "2605:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2605:32:13"
															},
															"nativeSrc": "2602:119:13",
															"nodeType": "YulIf",
															"src": "2602:119:13"
														},
														{
															"nativeSrc": "2731:117:13",
															"nodeType": "YulBlock",
															"src": "2731:117:13",
															"statements": [
																{
																	"nativeSrc": "2746:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2746:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2760:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2760:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2750:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2750:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:13"
																				},
																				"nativeSrc": "2806:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2785:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:13"
																		},
																		"nativeSrc": "2785:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2775:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2526:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2562:9:13",
														"nodeType": "YulTypedName",
														"src": "2562:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2573:7:13",
														"nodeType": "YulTypedName",
														"src": "2573:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2585:6:13",
														"nodeType": "YulTypedName",
														"src": "2585:6:13",
														"type": ""
													}
												],
												"src": "2526:329:13"
											},
											{
												"body": {
													"nativeSrc": "2978:648:13",
													"nodeType": "YulBlock",
													"src": "2978:648:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3025:83:13",
																"nodeType": "YulBlock",
																"src": "3025:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3027:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3027:77:13"
																			},
																			"nativeSrc": "3027:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3027:79:13"
																		},
																		"nativeSrc": "3027:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3027:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2999:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2999:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3008:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2995:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2995:3:13"
																		},
																		"nativeSrc": "2995:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2995:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3020:3:13",
																		"nodeType": "YulLiteral",
																		"src": "3020:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2991:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2991:3:13"
																},
																"nativeSrc": "2991:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2991:33:13"
															},
															"nativeSrc": "2988:120:13",
															"nodeType": "YulIf",
															"src": "2988:120:13"
														},
														{
															"nativeSrc": "3118:117:13",
															"nodeType": "YulBlock",
															"src": "3118:117:13",
															"statements": [
																{
																	"nativeSrc": "3133:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3133:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3147:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3147:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3137:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3137:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3162:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3162:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3197:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3197:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3208:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3208:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3193:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3193:3:13"
																				},
																				"nativeSrc": "3193:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3193:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3217:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3217:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3172:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3172:20:13"
																		},
																		"nativeSrc": "3172:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3172:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3162:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3162:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3245:118:13",
															"nodeType": "YulBlock",
															"src": "3245:118:13",
															"statements": [
																{
																	"nativeSrc": "3260:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3260:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3274:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3274:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3264:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3264:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3290:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3290:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3325:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3325:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3336:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3336:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3321:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3321:3:13"
																				},
																				"nativeSrc": "3321:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3321:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3345:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3345:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3300:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3300:20:13"
																		},
																		"nativeSrc": "3300:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3300:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3290:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3290:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3373:118:13",
															"nodeType": "YulBlock",
															"src": "3373:118:13",
															"statements": [
																{
																	"nativeSrc": "3388:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3388:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3402:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3402:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3392:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3392:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3418:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3418:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:13"
																				},
																				"nativeSrc": "3449:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3428:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3428:20:13"
																		},
																		"nativeSrc": "3428:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3428:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3418:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3418:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3501:118:13",
															"nodeType": "YulBlock",
															"src": "3501:118:13",
															"statements": [
																{
																	"nativeSrc": "3516:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3530:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3530:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3520:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3546:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3546:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3581:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3581:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3592:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3592:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3577:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3577:3:13"
																				},
																				"nativeSrc": "3577:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3577:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3601:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3556:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3556:20:13"
																		},
																		"nativeSrc": "3556:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3556:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "3546:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3546:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256t_uint256",
												"nativeSrc": "2861:765:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2924:9:13",
														"nodeType": "YulTypedName",
														"src": "2924:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2935:7:13",
														"nodeType": "YulTypedName",
														"src": "2935:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2947:6:13",
														"nodeType": "YulTypedName",
														"src": "2947:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2955:6:13",
														"nodeType": "YulTypedName",
														"src": "2955:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2963:6:13",
														"nodeType": "YulTypedName",
														"src": "2963:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2971:6:13",
														"nodeType": "YulTypedName",
														"src": "2971:6:13",
														"type": ""
													}
												],
												"src": "2861:765:13"
											},
											{
												"body": {
													"nativeSrc": "3698:263:13",
													"nodeType": "YulBlock",
													"src": "3698:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3744:83:13",
																"nodeType": "YulBlock",
																"src": "3744:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3746:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3746:77:13"
																			},
																			"nativeSrc": "3746:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3746:79:13"
																		},
																		"nativeSrc": "3746:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3746:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3719:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3719:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3728:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3728:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3715:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3715:3:13"
																		},
																		"nativeSrc": "3715:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3715:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3740:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3740:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3711:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:13"
																},
																"nativeSrc": "3711:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3711:32:13"
															},
															"nativeSrc": "3708:119:13",
															"nodeType": "YulIf",
															"src": "3708:119:13"
														},
														{
															"nativeSrc": "3837:117:13",
															"nodeType": "YulBlock",
															"src": "3837:117:13",
															"statements": [
																{
																	"nativeSrc": "3852:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3852:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3866:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3866:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3856:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3856:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3881:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3881:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3916:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3916:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3927:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3927:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3912:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3912:3:13"
																				},
																				"nativeSrc": "3912:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3912:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3936:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3936:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3891:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3891:20:13"
																		},
																		"nativeSrc": "3891:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3891:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3881:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3881:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3632:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3668:9:13",
														"nodeType": "YulTypedName",
														"src": "3668:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3679:7:13",
														"nodeType": "YulTypedName",
														"src": "3679:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3691:6:13",
														"nodeType": "YulTypedName",
														"src": "3691:6:13",
														"type": ""
													}
												],
												"src": "3632:329:13"
											},
											{
												"body": {
													"nativeSrc": "4177:454:13",
													"nodeType": "YulBlock",
													"src": "4177:454:13",
													"statements": [
														{
															"nativeSrc": "4187:27:13",
															"nodeType": "YulAssignment",
															"src": "4187:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4199:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4199:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4210:3:13",
																		"nodeType": "YulLiteral",
																		"src": "4210:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4195:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4195:3:13"
																},
																"nativeSrc": "4195:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4195:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4187:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4187:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4268:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4268:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4281:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4281:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4292:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4292:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4277:3:13"
																		},
																		"nativeSrc": "4277:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4277:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4224:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4224:43:13"
																},
																"nativeSrc": "4224:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4224:71:13"
															},
															"nativeSrc": "4224:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4224:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4349:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4373:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4373:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4358:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:13"
																		},
																		"nativeSrc": "4358:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4358:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4305:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4305:43:13"
																},
																"nativeSrc": "4305:72:13",
																"nodeType": "YulFunctionCall",
																"src": "4305:72:13"
															},
															"nativeSrc": "4305:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "4305:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4431:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4431:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4444:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4444:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4455:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4455:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4440:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4440:3:13"
																		},
																		"nativeSrc": "4440:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4440:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4387:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4387:43:13"
																},
																"nativeSrc": "4387:72:13",
																"nodeType": "YulFunctionCall",
																"src": "4387:72:13"
															},
															"nativeSrc": "4387:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "4387:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4513:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4513:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4526:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4526:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4537:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4537:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4522:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4522:3:13"
																		},
																		"nativeSrc": "4522:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4522:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4469:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4469:43:13"
																},
																"nativeSrc": "4469:72:13",
																"nodeType": "YulFunctionCall",
																"src": "4469:72:13"
															},
															"nativeSrc": "4469:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "4469:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4595:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4595:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4608:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4608:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4619:3:13",
																				"nodeType": "YulLiteral",
																				"src": "4619:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4604:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4604:3:13"
																		},
																		"nativeSrc": "4604:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4604:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4551:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4551:43:13"
																},
																"nativeSrc": "4551:73:13",
																"nodeType": "YulFunctionCall",
																"src": "4551:73:13"
															},
															"nativeSrc": "4551:73:13",
															"nodeType": "YulExpressionStatement",
															"src": "4551:73:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3967:664:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4117:9:13",
														"nodeType": "YulTypedName",
														"src": "4117:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4129:6:13",
														"nodeType": "YulTypedName",
														"src": "4129:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4137:6:13",
														"nodeType": "YulTypedName",
														"src": "4137:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4145:6:13",
														"nodeType": "YulTypedName",
														"src": "4145:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4153:6:13",
														"nodeType": "YulTypedName",
														"src": "4153:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4161:6:13",
														"nodeType": "YulTypedName",
														"src": "4161:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4172:4:13",
														"nodeType": "YulTypedName",
														"src": "4172:4:13",
														"type": ""
													}
												],
												"src": "3967:664:13"
											},
											{
												"body": {
													"nativeSrc": "4733:73:13",
													"nodeType": "YulBlock",
													"src": "4733:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4750:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4750:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4755:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4755:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4743:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4743:6:13"
																},
																"nativeSrc": "4743:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4743:19:13"
															},
															"nativeSrc": "4743:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "4743:19:13"
														},
														{
															"nativeSrc": "4771:29:13",
															"nodeType": "YulAssignment",
															"src": "4771:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4790:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4790:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4795:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4795:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4786:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:13"
																},
																"nativeSrc": "4786:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4786:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "4771:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "4771:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "4637:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4705:3:13",
														"nodeType": "YulTypedName",
														"src": "4705:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4710:6:13",
														"nodeType": "YulTypedName",
														"src": "4710:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "4721:11:13",
														"nodeType": "YulTypedName",
														"src": "4721:11:13",
														"type": ""
													}
												],
												"src": "4637:169:13"
											},
											{
												"body": {
													"nativeSrc": "4918:66:13",
													"nodeType": "YulBlock",
													"src": "4918:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4940:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4940:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4948:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4948:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4936:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:13"
																		},
																		"nativeSrc": "4936:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:14:13"
																	},
																	{
																		"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "4952:24:13",
																		"nodeType": "YulLiteral",
																		"src": "4952:24:13",
																		"type": "",
																		"value": "Listing does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4929:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4929:6:13"
																},
																"nativeSrc": "4929:48:13",
																"nodeType": "YulFunctionCall",
																"src": "4929:48:13"
															},
															"nativeSrc": "4929:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "4929:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
												"nativeSrc": "4812:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4910:6:13",
														"nodeType": "YulTypedName",
														"src": "4910:6:13",
														"type": ""
													}
												],
												"src": "4812:172:13"
											},
											{
												"body": {
													"nativeSrc": "5136:220:13",
													"nodeType": "YulBlock",
													"src": "5136:220:13",
													"statements": [
														{
															"nativeSrc": "5146:74:13",
															"nodeType": "YulAssignment",
															"src": "5146:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5212:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5212:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5217:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5153:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5153:58:13"
																},
																"nativeSrc": "5153:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5153:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5146:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5146:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5318:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5318:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																	"nativeSrc": "5229:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "5229:88:13"
																},
																"nativeSrc": "5229:93:13",
																"nodeType": "YulFunctionCall",
																"src": "5229:93:13"
															},
															"nativeSrc": "5229:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "5229:93:13"
														},
														{
															"nativeSrc": "5331:19:13",
															"nodeType": "YulAssignment",
															"src": "5331:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5342:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5342:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5347:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5347:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5338:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5338:3:13"
																},
																"nativeSrc": "5338:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5338:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5331:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5331:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4990:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5124:3:13",
														"nodeType": "YulTypedName",
														"src": "5124:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5132:3:13",
														"nodeType": "YulTypedName",
														"src": "5132:3:13",
														"type": ""
													}
												],
												"src": "4990:366:13"
											},
											{
												"body": {
													"nativeSrc": "5533:248:13",
													"nodeType": "YulBlock",
													"src": "5533:248:13",
													"statements": [
														{
															"nativeSrc": "5543:26:13",
															"nodeType": "YulAssignment",
															"src": "5543:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5555:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5555:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5566:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5566:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5551:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:13"
																},
																"nativeSrc": "5551:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5551:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5543:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5543:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5590:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5590:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5601:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5601:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5586:3:13"
																		},
																		"nativeSrc": "5586:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5586:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5609:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5609:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5615:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5615:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5605:3:13"
																		},
																		"nativeSrc": "5605:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5605:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5579:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:13"
																},
																"nativeSrc": "5579:47:13",
																"nodeType": "YulFunctionCall",
																"src": "5579:47:13"
															},
															"nativeSrc": "5579:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "5579:47:13"
														},
														{
															"nativeSrc": "5635:139:13",
															"nodeType": "YulAssignment",
															"src": "5635:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5769:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5769:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5643:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "5643:124:13"
																},
																"nativeSrc": "5643:131:13",
																"nodeType": "YulFunctionCall",
																"src": "5643:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5635:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5635:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5362:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5513:9:13",
														"nodeType": "YulTypedName",
														"src": "5513:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5528:4:13",
														"nodeType": "YulTypedName",
														"src": "5528:4:13",
														"type": ""
													}
												],
												"src": "5362:419:13"
											},
											{
												"body": {
													"nativeSrc": "5893:63:13",
													"nodeType": "YulBlock",
													"src": "5893:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5915:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5923:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5923:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5911:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5911:3:13"
																		},
																		"nativeSrc": "5911:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5911:14:13"
																	},
																	{
																		"hexValue": "4c697374696e67206861732065787069726564",
																		"kind": "string",
																		"nativeSrc": "5927:21:13",
																		"nodeType": "YulLiteral",
																		"src": "5927:21:13",
																		"type": "",
																		"value": "Listing has expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5904:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:13"
																},
																"nativeSrc": "5904:45:13",
																"nodeType": "YulFunctionCall",
																"src": "5904:45:13"
															},
															"nativeSrc": "5904:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "5904:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
												"nativeSrc": "5787:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5885:6:13",
														"nodeType": "YulTypedName",
														"src": "5885:6:13",
														"type": ""
													}
												],
												"src": "5787:169:13"
											},
											{
												"body": {
													"nativeSrc": "6108:220:13",
													"nodeType": "YulBlock",
													"src": "6108:220:13",
													"statements": [
														{
															"nativeSrc": "6118:74:13",
															"nodeType": "YulAssignment",
															"src": "6118:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6184:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6184:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6189:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6189:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6125:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "6125:58:13"
																},
																"nativeSrc": "6125:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6125:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6290:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6290:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																	"nativeSrc": "6201:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "6201:88:13"
																},
																"nativeSrc": "6201:93:13",
																"nodeType": "YulFunctionCall",
																"src": "6201:93:13"
															},
															"nativeSrc": "6201:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "6201:93:13"
														},
														{
															"nativeSrc": "6303:19:13",
															"nodeType": "YulAssignment",
															"src": "6303:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6314:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6314:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6319:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6319:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6310:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6310:3:13"
																},
																"nativeSrc": "6310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6310:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6303:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6303:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5962:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6096:3:13",
														"nodeType": "YulTypedName",
														"src": "6096:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6104:3:13",
														"nodeType": "YulTypedName",
														"src": "6104:3:13",
														"type": ""
													}
												],
												"src": "5962:366:13"
											},
											{
												"body": {
													"nativeSrc": "6505:248:13",
													"nodeType": "YulBlock",
													"src": "6505:248:13",
													"statements": [
														{
															"nativeSrc": "6515:26:13",
															"nodeType": "YulAssignment",
															"src": "6515:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6527:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6527:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6538:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6538:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6523:3:13"
																},
																"nativeSrc": "6523:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6523:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6515:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6515:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6562:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6562:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6573:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6573:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6558:3:13"
																		},
																		"nativeSrc": "6558:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6558:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6581:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6581:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6587:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6587:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6577:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6577:3:13"
																		},
																		"nativeSrc": "6577:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6577:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6551:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6551:6:13"
																},
																"nativeSrc": "6551:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6551:47:13"
															},
															"nativeSrc": "6551:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6551:47:13"
														},
														{
															"nativeSrc": "6607:139:13",
															"nodeType": "YulAssignment",
															"src": "6607:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6741:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6741:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6615:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "6615:124:13"
																},
																"nativeSrc": "6615:131:13",
																"nodeType": "YulFunctionCall",
																"src": "6615:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6607:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6607:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6334:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6485:9:13",
														"nodeType": "YulTypedName",
														"src": "6485:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6500:4:13",
														"nodeType": "YulTypedName",
														"src": "6500:4:13",
														"type": ""
													}
												],
												"src": "6334:419:13"
											},
											{
												"body": {
													"nativeSrc": "6865:72:13",
													"nodeType": "YulBlock",
													"src": "6865:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6887:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6887:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6895:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6895:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6883:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6883:3:13"
																		},
																		"nativeSrc": "6883:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6883:14:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67",
																		"kind": "string",
																		"nativeSrc": "6899:30:13",
																		"nodeType": "YulLiteral",
																		"src": "6899:30:13",
																		"type": "",
																		"value": "Not enough tokens in listing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6876:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6876:6:13"
																},
																"nativeSrc": "6876:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6876:54:13"
															},
															"nativeSrc": "6876:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "6876:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
												"nativeSrc": "6759:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6857:6:13",
														"nodeType": "YulTypedName",
														"src": "6857:6:13",
														"type": ""
													}
												],
												"src": "6759:178:13"
											},
											{
												"body": {
													"nativeSrc": "7089:220:13",
													"nodeType": "YulBlock",
													"src": "7089:220:13",
													"statements": [
														{
															"nativeSrc": "7099:74:13",
															"nodeType": "YulAssignment",
															"src": "7099:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7165:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7165:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7170:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7170:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7106:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7106:58:13"
																},
																"nativeSrc": "7106:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7106:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7099:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7099:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7271:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7271:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																	"nativeSrc": "7182:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7182:88:13"
																},
																"nativeSrc": "7182:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7182:93:13"
															},
															"nativeSrc": "7182:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7182:93:13"
														},
														{
															"nativeSrc": "7284:19:13",
															"nodeType": "YulAssignment",
															"src": "7284:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7295:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7295:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7300:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7300:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7291:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7291:3:13"
																},
																"nativeSrc": "7291:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7291:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7284:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6943:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7077:3:13",
														"nodeType": "YulTypedName",
														"src": "7077:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7085:3:13",
														"nodeType": "YulTypedName",
														"src": "7085:3:13",
														"type": ""
													}
												],
												"src": "6943:366:13"
											},
											{
												"body": {
													"nativeSrc": "7486:248:13",
													"nodeType": "YulBlock",
													"src": "7486:248:13",
													"statements": [
														{
															"nativeSrc": "7496:26:13",
															"nodeType": "YulAssignment",
															"src": "7496:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7508:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7508:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7519:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7504:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7504:3:13"
																},
																"nativeSrc": "7504:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7504:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7496:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7496:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7543:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7543:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7554:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7554:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7539:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7539:3:13"
																		},
																		"nativeSrc": "7539:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7539:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7562:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7562:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7568:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7568:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7558:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:13"
																		},
																		"nativeSrc": "7558:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7558:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7532:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:13"
																},
																"nativeSrc": "7532:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7532:47:13"
															},
															"nativeSrc": "7532:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7532:47:13"
														},
														{
															"nativeSrc": "7588:139:13",
															"nodeType": "YulAssignment",
															"src": "7588:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7722:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7722:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7596:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "7596:124:13"
																},
																"nativeSrc": "7596:131:13",
																"nodeType": "YulFunctionCall",
																"src": "7596:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7588:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7588:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7315:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7466:9:13",
														"nodeType": "YulTypedName",
														"src": "7466:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7481:4:13",
														"nodeType": "YulTypedName",
														"src": "7481:4:13",
														"type": ""
													}
												],
												"src": "7315:419:13"
											},
											{
												"body": {
													"nativeSrc": "7768:152:13",
													"nodeType": "YulBlock",
													"src": "7768:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7785:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7785:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7788:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7788:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7778:6:13"
																},
																"nativeSrc": "7778:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7778:88:13"
															},
															"nativeSrc": "7778:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7778:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7882:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7882:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7885:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7885:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:13"
																},
																"nativeSrc": "7875:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7875:15:13"
															},
															"nativeSrc": "7875:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7875:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7906:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7906:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7909:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7909:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7899:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7899:6:13"
																},
																"nativeSrc": "7899:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7899:15:13"
															},
															"nativeSrc": "7899:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7899:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7740:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7740:180:13"
											},
											{
												"body": {
													"nativeSrc": "7974:362:13",
													"nodeType": "YulBlock",
													"src": "7974:362:13",
													"statements": [
														{
															"nativeSrc": "7984:25:13",
															"nodeType": "YulAssignment",
															"src": "7984:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8007:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8007:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7989:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7989:17:13"
																},
																"nativeSrc": "7989:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7989:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7984:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "7984:1:13"
																}
															]
														},
														{
															"nativeSrc": "8018:25:13",
															"nodeType": "YulAssignment",
															"src": "8018:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8041:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8041:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8023:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8023:17:13"
																},
																"nativeSrc": "8023:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8023:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8018:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8018:1:13"
																}
															]
														},
														{
															"nativeSrc": "8052:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8052:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8075:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8075:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8078:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8078:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8071:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8071:3:13"
																},
																"nativeSrc": "8071:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8071:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "8056:11:13",
																	"nodeType": "YulTypedName",
																	"src": "8056:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8089:41:13",
															"nodeType": "YulAssignment",
															"src": "8089:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "8118:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "8118:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8100:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8100:17:13"
																},
																"nativeSrc": "8100:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8100:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "8089:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8089:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8307:22:13",
																"nodeType": "YulBlock",
																"src": "8307:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8309:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8309:16:13"
																			},
																			"nativeSrc": "8309:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8309:18:13"
																		},
																		"nativeSrc": "8309:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8309:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "8240:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8240:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8233:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8233:6:13"
																				},
																				"nativeSrc": "8233:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8233:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "8263:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "8263:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "8270:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "8270:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "8279:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "8279:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "8266:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "8266:3:13"
																						},
																						"nativeSrc": "8266:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "8266:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "8260:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "8260:2:13"
																				},
																				"nativeSrc": "8260:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8260:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "8213:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8213:2:13"
																		},
																		"nativeSrc": "8213:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8213:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8193:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8193:6:13"
																},
																"nativeSrc": "8193:113:13",
																"nodeType": "YulFunctionCall",
																"src": "8193:113:13"
															},
															"nativeSrc": "8190:139:13",
															"nodeType": "YulIf",
															"src": "8190:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7926:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7957:1:13",
														"nodeType": "YulTypedName",
														"src": "7957:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7960:1:13",
														"nodeType": "YulTypedName",
														"src": "7960:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7966:7:13",
														"nodeType": "YulTypedName",
														"src": "7966:7:13",
														"type": ""
													}
												],
												"src": "7926:410:13"
											},
											{
												"body": {
													"nativeSrc": "8370:152:13",
													"nodeType": "YulBlock",
													"src": "8370:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8387:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8387:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8390:77:13",
																		"nodeType": "YulLiteral",
																		"src": "8390:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8380:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:13"
																},
																"nativeSrc": "8380:88:13",
																"nodeType": "YulFunctionCall",
																"src": "8380:88:13"
															},
															"nativeSrc": "8380:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "8380:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8484:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8484:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8487:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8487:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8477:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8477:6:13"
																},
																"nativeSrc": "8477:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8477:15:13"
															},
															"nativeSrc": "8477:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8477:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8508:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8508:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8511:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8511:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8501:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:13"
																},
																"nativeSrc": "8501:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8501:15:13"
															},
															"nativeSrc": "8501:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8501:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "8342:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8342:180:13"
											},
											{
												"body": {
													"nativeSrc": "8570:143:13",
													"nodeType": "YulBlock",
													"src": "8570:143:13",
													"statements": [
														{
															"nativeSrc": "8580:25:13",
															"nodeType": "YulAssignment",
															"src": "8580:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8603:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8603:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8585:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8585:17:13"
																},
																"nativeSrc": "8585:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8585:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8580:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8580:1:13"
																}
															]
														},
														{
															"nativeSrc": "8614:25:13",
															"nodeType": "YulAssignment",
															"src": "8614:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8637:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8637:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8619:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8619:17:13"
																},
																"nativeSrc": "8619:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8619:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8614:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8614:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8661:22:13",
																"nodeType": "YulBlock",
																"src": "8661:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "8663:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8663:16:13"
																			},
																			"nativeSrc": "8663:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8663:18:13"
																		},
																		"nativeSrc": "8663:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8663:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8658:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8658:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8651:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8651:6:13"
																},
																"nativeSrc": "8651:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8651:9:13"
															},
															"nativeSrc": "8648:35:13",
															"nodeType": "YulIf",
															"src": "8648:35:13"
														},
														{
															"nativeSrc": "8693:14:13",
															"nodeType": "YulAssignment",
															"src": "8693:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8702:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8702:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8705:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8705:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8698:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8698:3:13"
																},
																"nativeSrc": "8698:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8698:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "8693:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8693:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "8528:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8559:1:13",
														"nodeType": "YulTypedName",
														"src": "8559:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8562:1:13",
														"nodeType": "YulTypedName",
														"src": "8562:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "8568:1:13",
														"nodeType": "YulTypedName",
														"src": "8568:1:13",
														"type": ""
													}
												],
												"src": "8528:185:13"
											},
											{
												"body": {
													"nativeSrc": "8763:147:13",
													"nodeType": "YulBlock",
													"src": "8763:147:13",
													"statements": [
														{
															"nativeSrc": "8773:25:13",
															"nodeType": "YulAssignment",
															"src": "8773:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8796:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8796:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8778:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8778:17:13"
																},
																"nativeSrc": "8778:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8778:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8773:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8773:1:13"
																}
															]
														},
														{
															"nativeSrc": "8807:25:13",
															"nodeType": "YulAssignment",
															"src": "8807:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8830:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8830:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8812:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "8812:17:13"
																},
																"nativeSrc": "8812:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8812:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8807:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "8807:1:13"
																}
															]
														},
														{
															"nativeSrc": "8841:16:13",
															"nodeType": "YulAssignment",
															"src": "8841:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8852:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8852:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8855:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8855:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8848:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8848:3:13"
																},
																"nativeSrc": "8848:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8848:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8841:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8841:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8881:22:13",
																"nodeType": "YulBlock",
																"src": "8881:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8883:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8883:16:13"
																			},
																			"nativeSrc": "8883:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8883:18:13"
																		},
																		"nativeSrc": "8883:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8883:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8873:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8873:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8876:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8870:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8870:2:13"
																},
																"nativeSrc": "8870:10:13",
																"nodeType": "YulFunctionCall",
																"src": "8870:10:13"
															},
															"nativeSrc": "8867:36:13",
															"nodeType": "YulIf",
															"src": "8867:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8719:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8750:1:13",
														"nodeType": "YulTypedName",
														"src": "8750:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8753:1:13",
														"nodeType": "YulTypedName",
														"src": "8753:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8759:3:13",
														"nodeType": "YulTypedName",
														"src": "8759:3:13",
														"type": ""
													}
												],
												"src": "8719:191:13"
											},
											{
												"body": {
													"nativeSrc": "9022:68:13",
													"nodeType": "YulBlock",
													"src": "9022:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9044:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9044:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9052:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9052:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9040:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9040:3:13"
																		},
																		"nativeSrc": "9040:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9040:14:13"
																	},
																	{
																		"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "9056:26:13",
																		"nodeType": "YulLiteral",
																		"src": "9056:26:13",
																		"type": "",
																		"value": "Incorrect payment amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9033:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9033:6:13"
																},
																"nativeSrc": "9033:50:13",
																"nodeType": "YulFunctionCall",
																"src": "9033:50:13"
															},
															"nativeSrc": "9033:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "9033:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
												"nativeSrc": "8916:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9014:6:13",
														"nodeType": "YulTypedName",
														"src": "9014:6:13",
														"type": ""
													}
												],
												"src": "8916:174:13"
											},
											{
												"body": {
													"nativeSrc": "9242:220:13",
													"nodeType": "YulBlock",
													"src": "9242:220:13",
													"statements": [
														{
															"nativeSrc": "9252:74:13",
															"nodeType": "YulAssignment",
															"src": "9252:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9318:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9318:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9323:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9323:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9259:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9259:58:13"
																},
																"nativeSrc": "9259:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9259:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9252:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9252:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9424:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9424:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																	"nativeSrc": "9335:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "9335:88:13"
																},
																"nativeSrc": "9335:93:13",
																"nodeType": "YulFunctionCall",
																"src": "9335:93:13"
															},
															"nativeSrc": "9335:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "9335:93:13"
														},
														{
															"nativeSrc": "9437:19:13",
															"nodeType": "YulAssignment",
															"src": "9437:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9448:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9448:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9453:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9453:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9444:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:13"
																},
																"nativeSrc": "9444:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9444:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9437:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9437:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9096:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9230:3:13",
														"nodeType": "YulTypedName",
														"src": "9230:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9238:3:13",
														"nodeType": "YulTypedName",
														"src": "9238:3:13",
														"type": ""
													}
												],
												"src": "9096:366:13"
											},
											{
												"body": {
													"nativeSrc": "9639:248:13",
													"nodeType": "YulBlock",
													"src": "9639:248:13",
													"statements": [
														{
															"nativeSrc": "9649:26:13",
															"nodeType": "YulAssignment",
															"src": "9649:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9661:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9661:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9672:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9672:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9657:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9657:3:13"
																},
																"nativeSrc": "9657:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9657:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9649:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9649:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9696:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9696:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9707:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9707:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:13"
																		},
																		"nativeSrc": "9692:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9692:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9715:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9715:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9721:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9721:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9711:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9711:3:13"
																		},
																		"nativeSrc": "9711:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9711:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:13"
																},
																"nativeSrc": "9685:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9685:47:13"
															},
															"nativeSrc": "9685:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9685:47:13"
														},
														{
															"nativeSrc": "9741:139:13",
															"nodeType": "YulAssignment",
															"src": "9741:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9875:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9875:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9749:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9749:124:13"
																},
																"nativeSrc": "9749:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9749:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9741:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9741:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9468:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9619:9:13",
														"nodeType": "YulTypedName",
														"src": "9619:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9634:4:13",
														"nodeType": "YulTypedName",
														"src": "9634:4:13",
														"type": ""
													}
												],
												"src": "9468:419:13"
											},
											{
												"body": {
													"nativeSrc": "10019:206:13",
													"nodeType": "YulBlock",
													"src": "10019:206:13",
													"statements": [
														{
															"nativeSrc": "10029:26:13",
															"nodeType": "YulAssignment",
															"src": "10029:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10041:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10041:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10052:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10052:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10037:3:13"
																},
																"nativeSrc": "10037:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10037:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10029:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10029:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10109:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10109:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10122:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10133:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10133:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10118:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10118:3:13"
																		},
																		"nativeSrc": "10118:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10118:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10065:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10065:43:13"
																},
																"nativeSrc": "10065:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10065:71:13"
															},
															"nativeSrc": "10065:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10065:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10190:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10190:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10203:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10203:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10214:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10214:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10199:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10199:3:13"
																		},
																		"nativeSrc": "10199:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10199:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10146:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10146:43:13"
																},
																"nativeSrc": "10146:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10146:72:13"
															},
															"nativeSrc": "10146:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10146:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9893:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9983:9:13",
														"nodeType": "YulTypedName",
														"src": "9983:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9995:6:13",
														"nodeType": "YulTypedName",
														"src": "9995:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10003:6:13",
														"nodeType": "YulTypedName",
														"src": "10003:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10014:4:13",
														"nodeType": "YulTypedName",
														"src": "10014:4:13",
														"type": ""
													}
												],
												"src": "9893:332:13"
											},
											{
												"body": {
													"nativeSrc": "10294:80:13",
													"nodeType": "YulBlock",
													"src": "10294:80:13",
													"statements": [
														{
															"nativeSrc": "10304:22:13",
															"nodeType": "YulAssignment",
															"src": "10304:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10319:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10319:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10313:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10313:5:13"
																},
																"nativeSrc": "10313:13:13",
																"nodeType": "YulFunctionCall",
																"src": "10313:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10304:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "10304:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10362:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10362:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "10335:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "10335:26:13"
																},
																"nativeSrc": "10335:33:13",
																"nodeType": "YulFunctionCall",
																"src": "10335:33:13"
															},
															"nativeSrc": "10335:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "10335:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "10231:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10272:6:13",
														"nodeType": "YulTypedName",
														"src": "10272:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10280:3:13",
														"nodeType": "YulTypedName",
														"src": "10280:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10288:5:13",
														"nodeType": "YulTypedName",
														"src": "10288:5:13",
														"type": ""
													}
												],
												"src": "10231:143:13"
											},
											{
												"body": {
													"nativeSrc": "10457:274:13",
													"nodeType": "YulBlock",
													"src": "10457:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10503:83:13",
																"nodeType": "YulBlock",
																"src": "10503:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10505:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10505:77:13"
																			},
																			"nativeSrc": "10505:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10505:79:13"
																		},
																		"nativeSrc": "10505:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10505:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10478:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10478:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10487:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10487:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10474:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10474:3:13"
																		},
																		"nativeSrc": "10474:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10474:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10499:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10499:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10470:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:13"
																},
																"nativeSrc": "10470:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10470:32:13"
															},
															"nativeSrc": "10467:119:13",
															"nodeType": "YulIf",
															"src": "10467:119:13"
														},
														{
															"nativeSrc": "10596:128:13",
															"nodeType": "YulBlock",
															"src": "10596:128:13",
															"statements": [
																{
																	"nativeSrc": "10611:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10611:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10625:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10625:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10615:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10615:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10640:74:13",
																	"nodeType": "YulAssignment",
																	"src": "10640:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10686:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10686:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10697:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10697:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10682:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10682:3:13"
																				},
																				"nativeSrc": "10682:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10682:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10706:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10706:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10650:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "10650:31:13"
																		},
																		"nativeSrc": "10650:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10650:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10640:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10640:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "10380:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10427:9:13",
														"nodeType": "YulTypedName",
														"src": "10427:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10438:7:13",
														"nodeType": "YulTypedName",
														"src": "10438:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10450:6:13",
														"nodeType": "YulTypedName",
														"src": "10450:6:13",
														"type": ""
													}
												],
												"src": "10380:351:13"
											},
											{
												"body": {
													"nativeSrc": "10843:75:13",
													"nodeType": "YulBlock",
													"src": "10843:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10865:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10865:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10873:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10873:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10861:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10861:3:13"
																		},
																		"nativeSrc": "10861:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10861:14:13"
																	},
																	{
																		"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "10877:33:13",
																		"nodeType": "YulLiteral",
																		"src": "10877:33:13",
																		"type": "",
																		"value": "Payment token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10854:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10854:6:13"
																},
																"nativeSrc": "10854:57:13",
																"nodeType": "YulFunctionCall",
																"src": "10854:57:13"
															},
															"nativeSrc": "10854:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "10854:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
												"nativeSrc": "10737:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10835:6:13",
														"nodeType": "YulTypedName",
														"src": "10835:6:13",
														"type": ""
													}
												],
												"src": "10737:181:13"
											},
											{
												"body": {
													"nativeSrc": "11070:220:13",
													"nodeType": "YulBlock",
													"src": "11070:220:13",
													"statements": [
														{
															"nativeSrc": "11080:74:13",
															"nodeType": "YulAssignment",
															"src": "11080:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11146:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11146:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11151:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11151:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11087:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11087:58:13"
																},
																"nativeSrc": "11087:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11087:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11080:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11252:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11252:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																	"nativeSrc": "11163:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11163:88:13"
																},
																"nativeSrc": "11163:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11163:93:13"
															},
															"nativeSrc": "11163:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11163:93:13"
														},
														{
															"nativeSrc": "11265:19:13",
															"nodeType": "YulAssignment",
															"src": "11265:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11276:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11276:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11281:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11281:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11272:3:13"
																},
																"nativeSrc": "11272:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11272:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11265:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11265:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10924:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11058:3:13",
														"nodeType": "YulTypedName",
														"src": "11058:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11066:3:13",
														"nodeType": "YulTypedName",
														"src": "11066:3:13",
														"type": ""
													}
												],
												"src": "10924:366:13"
											},
											{
												"body": {
													"nativeSrc": "11467:248:13",
													"nodeType": "YulBlock",
													"src": "11467:248:13",
													"statements": [
														{
															"nativeSrc": "11477:26:13",
															"nodeType": "YulAssignment",
															"src": "11477:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11489:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11489:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11500:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11500:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11485:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11485:3:13"
																},
																"nativeSrc": "11485:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11485:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11477:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11477:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11524:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11524:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11535:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11535:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11520:3:13"
																		},
																		"nativeSrc": "11520:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11520:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11543:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11543:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11549:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11549:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11539:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11539:3:13"
																		},
																		"nativeSrc": "11539:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11539:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11513:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11513:6:13"
																},
																"nativeSrc": "11513:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11513:47:13"
															},
															"nativeSrc": "11513:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11513:47:13"
														},
														{
															"nativeSrc": "11569:139:13",
															"nodeType": "YulAssignment",
															"src": "11569:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11703:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11703:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11577:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11577:124:13"
																},
																"nativeSrc": "11577:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11577:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11569:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11569:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11296:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11447:9:13",
														"nodeType": "YulTypedName",
														"src": "11447:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11462:4:13",
														"nodeType": "YulTypedName",
														"src": "11462:4:13",
														"type": ""
													}
												],
												"src": "11296:419:13"
											},
											{
												"body": {
													"nativeSrc": "11766:149:13",
													"nodeType": "YulBlock",
													"src": "11766:149:13",
													"statements": [
														{
															"nativeSrc": "11776:25:13",
															"nodeType": "YulAssignment",
															"src": "11776:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11799:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11799:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11781:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11781:17:13"
																},
																"nativeSrc": "11781:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11781:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11776:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11776:1:13"
																}
															]
														},
														{
															"nativeSrc": "11810:25:13",
															"nodeType": "YulAssignment",
															"src": "11810:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11833:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11833:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11815:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11815:17:13"
																},
																"nativeSrc": "11815:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11815:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11810:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11810:1:13"
																}
															]
														},
														{
															"nativeSrc": "11844:17:13",
															"nodeType": "YulAssignment",
															"src": "11844:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11856:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11856:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11859:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11859:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11852:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11852:3:13"
																},
																"nativeSrc": "11852:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11852:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11844:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11844:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11886:22:13",
																"nodeType": "YulBlock",
																"src": "11886:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11888:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11888:16:13"
																			},
																			"nativeSrc": "11888:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11888:18:13"
																		},
																		"nativeSrc": "11888:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11888:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11877:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11877:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11883:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11883:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11874:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11874:2:13"
																},
																"nativeSrc": "11874:11:13",
																"nodeType": "YulFunctionCall",
																"src": "11874:11:13"
															},
															"nativeSrc": "11871:37:13",
															"nodeType": "YulIf",
															"src": "11871:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11721:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11752:1:13",
														"nodeType": "YulTypedName",
														"src": "11752:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11755:1:13",
														"nodeType": "YulTypedName",
														"src": "11755:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11761:4:13",
														"nodeType": "YulTypedName",
														"src": "11761:4:13",
														"type": ""
													}
												],
												"src": "11721:194:13"
											},
											{
												"body": {
													"nativeSrc": "11963:48:13",
													"nodeType": "YulBlock",
													"src": "11963:48:13",
													"statements": [
														{
															"nativeSrc": "11973:32:13",
															"nodeType": "YulAssignment",
															"src": "11973:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11998:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "11998:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "11991:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11991:6:13"
																		},
																		"nativeSrc": "11991:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11991:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11984:6:13"
																},
																"nativeSrc": "11984:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11984:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11973:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11973:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "11921:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11945:5:13",
														"nodeType": "YulTypedName",
														"src": "11945:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11955:7:13",
														"nodeType": "YulTypedName",
														"src": "11955:7:13",
														"type": ""
													}
												],
												"src": "11921:90:13"
											},
											{
												"body": {
													"nativeSrc": "12076:50:13",
													"nodeType": "YulBlock",
													"src": "12076:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12093:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12093:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12113:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12113:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "12098:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "12098:14:13"
																		},
																		"nativeSrc": "12098:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12098:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12086:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12086:6:13"
																},
																"nativeSrc": "12086:34:13",
																"nodeType": "YulFunctionCall",
																"src": "12086:34:13"
															},
															"nativeSrc": "12086:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "12086:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "12017:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12064:5:13",
														"nodeType": "YulTypedName",
														"src": "12064:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12071:3:13",
														"nodeType": "YulTypedName",
														"src": "12071:3:13",
														"type": ""
													}
												],
												"src": "12017:109:13"
											},
											{
												"body": {
													"nativeSrc": "12308:365:13",
													"nodeType": "YulBlock",
													"src": "12308:365:13",
													"statements": [
														{
															"nativeSrc": "12318:27:13",
															"nodeType": "YulAssignment",
															"src": "12318:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12330:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12330:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12341:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12341:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12326:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:13"
																},
																"nativeSrc": "12326:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12326:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12318:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12318:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12399:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12399:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12412:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12412:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12423:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12423:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12408:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12408:3:13"
																		},
																		"nativeSrc": "12408:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12408:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12355:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12355:43:13"
																},
																"nativeSrc": "12355:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12355:71:13"
															},
															"nativeSrc": "12355:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12355:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12480:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12480:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12493:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12493:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12504:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12504:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12489:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12489:3:13"
																		},
																		"nativeSrc": "12489:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12489:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12436:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12436:43:13"
																},
																"nativeSrc": "12436:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12436:72:13"
															},
															"nativeSrc": "12436:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12436:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12562:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12562:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12586:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12586:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12571:3:13"
																		},
																		"nativeSrc": "12571:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12571:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12518:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12518:43:13"
																},
																"nativeSrc": "12518:72:13",
																"nodeType": "YulFunctionCall",
																"src": "12518:72:13"
															},
															"nativeSrc": "12518:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "12518:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12638:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12638:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12651:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12651:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12662:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12662:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12647:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12647:3:13"
																		},
																		"nativeSrc": "12647:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12647:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "12600:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "12600:37:13"
																},
																"nativeSrc": "12600:66:13",
																"nodeType": "YulFunctionCall",
																"src": "12600:66:13"
															},
															"nativeSrc": "12600:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "12600:66:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "12132:541:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12256:9:13",
														"nodeType": "YulTypedName",
														"src": "12256:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12268:6:13",
														"nodeType": "YulTypedName",
														"src": "12268:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12276:6:13",
														"nodeType": "YulTypedName",
														"src": "12276:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12284:6:13",
														"nodeType": "YulTypedName",
														"src": "12284:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12292:6:13",
														"nodeType": "YulTypedName",
														"src": "12292:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12303:4:13",
														"nodeType": "YulTypedName",
														"src": "12303:4:13",
														"type": ""
													}
												],
												"src": "12132:541:13"
											},
											{
												"body": {
													"nativeSrc": "12785:59:13",
													"nodeType": "YulBlock",
													"src": "12785:59:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12807:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12807:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12815:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12815:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12803:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12803:3:13"
																		},
																		"nativeSrc": "12803:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12803:14:13"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "12819:17:13",
																		"nodeType": "YulLiteral",
																		"src": "12819:17:13",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12796:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12796:6:13"
																},
																"nativeSrc": "12796:41:13",
																"nodeType": "YulFunctionCall",
																"src": "12796:41:13"
															},
															"nativeSrc": "12796:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "12796:41:13"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "12679:165:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12777:6:13",
														"nodeType": "YulTypedName",
														"src": "12777:6:13",
														"type": ""
													}
												],
												"src": "12679:165:13"
											},
											{
												"body": {
													"nativeSrc": "12996:220:13",
													"nodeType": "YulBlock",
													"src": "12996:220:13",
													"statements": [
														{
															"nativeSrc": "13006:74:13",
															"nodeType": "YulAssignment",
															"src": "13006:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13072:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13072:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13077:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13077:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13013:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13013:58:13"
																},
																"nativeSrc": "13013:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13013:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13006:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13006:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13178:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "13089:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13089:88:13"
																},
																"nativeSrc": "13089:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13089:93:13"
															},
															"nativeSrc": "13089:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13089:93:13"
														},
														{
															"nativeSrc": "13191:19:13",
															"nodeType": "YulAssignment",
															"src": "13191:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13202:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13202:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13207:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13207:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13198:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13198:3:13"
																},
																"nativeSrc": "13198:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13198:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13191:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13191:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12850:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12984:3:13",
														"nodeType": "YulTypedName",
														"src": "12984:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12992:3:13",
														"nodeType": "YulTypedName",
														"src": "12992:3:13",
														"type": ""
													}
												],
												"src": "12850:366:13"
											},
											{
												"body": {
													"nativeSrc": "13393:248:13",
													"nodeType": "YulBlock",
													"src": "13393:248:13",
													"statements": [
														{
															"nativeSrc": "13403:26:13",
															"nodeType": "YulAssignment",
															"src": "13403:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13415:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13415:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13426:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13426:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13411:3:13"
																},
																"nativeSrc": "13411:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13411:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13403:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13403:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13450:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13450:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13461:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13461:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13446:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13446:3:13"
																		},
																		"nativeSrc": "13446:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13446:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13469:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13469:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13475:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13475:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13465:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13465:3:13"
																		},
																		"nativeSrc": "13465:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13465:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13439:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13439:6:13"
																},
																"nativeSrc": "13439:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13439:47:13"
															},
															"nativeSrc": "13439:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13439:47:13"
														},
														{
															"nativeSrc": "13495:139:13",
															"nodeType": "YulAssignment",
															"src": "13495:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13629:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13629:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13503:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13503:124:13"
																},
																"nativeSrc": "13503:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13503:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13495:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13495:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13222:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13373:9:13",
														"nodeType": "YulTypedName",
														"src": "13373:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13388:4:13",
														"nodeType": "YulTypedName",
														"src": "13388:4:13",
														"type": ""
													}
												],
												"src": "13222:419:13"
											},
											{
												"body": {
													"nativeSrc": "13753:75:13",
													"nodeType": "YulBlock",
													"src": "13753:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13775:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13775:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13783:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13783:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13771:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13771:3:13"
																		},
																		"nativeSrc": "13771:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13771:14:13"
																	},
																	{
																		"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "13787:33:13",
																		"nodeType": "YulLiteral",
																		"src": "13787:33:13",
																		"type": "",
																		"value": "Price must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13764:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13764:6:13"
																},
																"nativeSrc": "13764:57:13",
																"nodeType": "YulFunctionCall",
																"src": "13764:57:13"
															},
															"nativeSrc": "13764:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "13764:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
												"nativeSrc": "13647:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13745:6:13",
														"nodeType": "YulTypedName",
														"src": "13745:6:13",
														"type": ""
													}
												],
												"src": "13647:181:13"
											},
											{
												"body": {
													"nativeSrc": "13980:220:13",
													"nodeType": "YulBlock",
													"src": "13980:220:13",
													"statements": [
														{
															"nativeSrc": "13990:74:13",
															"nodeType": "YulAssignment",
															"src": "13990:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14056:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14056:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14061:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14061:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13997:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "13997:58:13"
																},
																"nativeSrc": "13997:67:13",
																"nodeType": "YulFunctionCall",
																"src": "13997:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13990:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13990:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14162:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14162:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																	"nativeSrc": "14073:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "14073:88:13"
																},
																"nativeSrc": "14073:93:13",
																"nodeType": "YulFunctionCall",
																"src": "14073:93:13"
															},
															"nativeSrc": "14073:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "14073:93:13"
														},
														{
															"nativeSrc": "14175:19:13",
															"nodeType": "YulAssignment",
															"src": "14175:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14186:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14186:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14191:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14191:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14182:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14182:3:13"
																},
																"nativeSrc": "14182:12:13",
																"nodeType": "YulFunctionCall",
																"src": "14182:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14175:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14175:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13834:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13968:3:13",
														"nodeType": "YulTypedName",
														"src": "13968:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13976:3:13",
														"nodeType": "YulTypedName",
														"src": "13976:3:13",
														"type": ""
													}
												],
												"src": "13834:366:13"
											},
											{
												"body": {
													"nativeSrc": "14377:248:13",
													"nodeType": "YulBlock",
													"src": "14377:248:13",
													"statements": [
														{
															"nativeSrc": "14387:26:13",
															"nodeType": "YulAssignment",
															"src": "14387:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14399:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14399:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14410:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14410:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14395:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14395:3:13"
																},
																"nativeSrc": "14395:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14395:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14387:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14387:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14434:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14434:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14445:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14445:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14430:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14430:3:13"
																		},
																		"nativeSrc": "14430:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14430:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14453:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "14453:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14459:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14459:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14449:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14449:3:13"
																		},
																		"nativeSrc": "14449:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14449:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14423:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14423:6:13"
																},
																"nativeSrc": "14423:47:13",
																"nodeType": "YulFunctionCall",
																"src": "14423:47:13"
															},
															"nativeSrc": "14423:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "14423:47:13"
														},
														{
															"nativeSrc": "14479:139:13",
															"nodeType": "YulAssignment",
															"src": "14479:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14613:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14613:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14487:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "14487:124:13"
																},
																"nativeSrc": "14487:131:13",
																"nodeType": "YulFunctionCall",
																"src": "14487:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14479:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14206:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14357:9:13",
														"nodeType": "YulTypedName",
														"src": "14357:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14372:4:13",
														"nodeType": "YulTypedName",
														"src": "14372:4:13",
														"type": ""
													}
												],
												"src": "14206:419:13"
											},
											{
												"body": {
													"nativeSrc": "14737:76:13",
													"nodeType": "YulBlock",
													"src": "14737:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14759:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14759:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14767:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14767:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14755:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14755:3:13"
																		},
																		"nativeSrc": "14755:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14755:14:13"
																	},
																	{
																		"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "14771:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14771:34:13",
																		"type": "",
																		"value": "Tokens must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14748:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14748:6:13"
																},
																"nativeSrc": "14748:58:13",
																"nodeType": "YulFunctionCall",
																"src": "14748:58:13"
															},
															"nativeSrc": "14748:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "14748:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
												"nativeSrc": "14631:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14729:6:13",
														"nodeType": "YulTypedName",
														"src": "14729:6:13",
														"type": ""
													}
												],
												"src": "14631:182:13"
											},
											{
												"body": {
													"nativeSrc": "14965:220:13",
													"nodeType": "YulBlock",
													"src": "14965:220:13",
													"statements": [
														{
															"nativeSrc": "14975:74:13",
															"nodeType": "YulAssignment",
															"src": "14975:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15041:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15041:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15046:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15046:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14982:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "14982:58:13"
																},
																"nativeSrc": "14982:67:13",
																"nodeType": "YulFunctionCall",
																"src": "14982:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14975:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14975:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15147:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15147:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																	"nativeSrc": "15058:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "15058:88:13"
																},
																"nativeSrc": "15058:93:13",
																"nodeType": "YulFunctionCall",
																"src": "15058:93:13"
															},
															"nativeSrc": "15058:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "15058:93:13"
														},
														{
															"nativeSrc": "15160:19:13",
															"nodeType": "YulAssignment",
															"src": "15160:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15171:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15176:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15176:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15167:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15167:3:13"
																},
																"nativeSrc": "15167:12:13",
																"nodeType": "YulFunctionCall",
																"src": "15167:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15160:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15160:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14819:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14953:3:13",
														"nodeType": "YulTypedName",
														"src": "14953:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14961:3:13",
														"nodeType": "YulTypedName",
														"src": "14961:3:13",
														"type": ""
													}
												],
												"src": "14819:366:13"
											},
											{
												"body": {
													"nativeSrc": "15362:248:13",
													"nodeType": "YulBlock",
													"src": "15362:248:13",
													"statements": [
														{
															"nativeSrc": "15372:26:13",
															"nodeType": "YulAssignment",
															"src": "15372:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15384:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15384:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15395:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15395:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15380:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15380:3:13"
																},
																"nativeSrc": "15380:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15380:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15372:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15372:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15419:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15419:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15430:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15430:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15415:3:13"
																		},
																		"nativeSrc": "15415:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15415:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15438:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15438:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15444:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15444:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15434:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15434:3:13"
																		},
																		"nativeSrc": "15434:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15434:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15408:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15408:6:13"
																},
																"nativeSrc": "15408:47:13",
																"nodeType": "YulFunctionCall",
																"src": "15408:47:13"
															},
															"nativeSrc": "15408:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "15408:47:13"
														},
														{
															"nativeSrc": "15464:139:13",
															"nodeType": "YulAssignment",
															"src": "15464:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15598:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15598:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15472:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "15472:124:13"
																},
																"nativeSrc": "15472:131:13",
																"nodeType": "YulFunctionCall",
																"src": "15472:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15464:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15464:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15191:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15342:9:13",
														"nodeType": "YulTypedName",
														"src": "15342:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15357:4:13",
														"nodeType": "YulTypedName",
														"src": "15357:4:13",
														"type": ""
													}
												],
												"src": "15191:419:13"
											},
											{
												"body": {
													"nativeSrc": "15722:115:13",
													"nodeType": "YulBlock",
													"src": "15722:115:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15744:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15744:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15752:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15752:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15740:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15740:3:13"
																		},
																		"nativeSrc": "15740:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15740:14:13"
																	},
																	{
																		"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65",
																		"kind": "string",
																		"nativeSrc": "15756:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15756:34:13",
																		"type": "",
																		"value": "Duration must be greater than ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15733:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15733:6:13"
																},
																"nativeSrc": "15733:58:13",
																"nodeType": "YulFunctionCall",
																"src": "15733:58:13"
															},
															"nativeSrc": "15733:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "15733:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "15812:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15820:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15820:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15808:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15808:3:13"
																		},
																		"nativeSrc": "15808:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15808:15:13"
																	},
																	{
																		"hexValue": "726f",
																		"kind": "string",
																		"nativeSrc": "15825:4:13",
																		"nodeType": "YulLiteral",
																		"src": "15825:4:13",
																		"type": "",
																		"value": "ro"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15801:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15801:6:13"
																},
																"nativeSrc": "15801:29:13",
																"nodeType": "YulFunctionCall",
																"src": "15801:29:13"
															},
															"nativeSrc": "15801:29:13",
															"nodeType": "YulExpressionStatement",
															"src": "15801:29:13"
														}
													]
												},
												"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
												"nativeSrc": "15616:221:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15714:6:13",
														"nodeType": "YulTypedName",
														"src": "15714:6:13",
														"type": ""
													}
												],
												"src": "15616:221:13"
											},
											{
												"body": {
													"nativeSrc": "15989:220:13",
													"nodeType": "YulBlock",
													"src": "15989:220:13",
													"statements": [
														{
															"nativeSrc": "15999:74:13",
															"nodeType": "YulAssignment",
															"src": "15999:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16065:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16065:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16070:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16070:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16006:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16006:58:13"
																},
																"nativeSrc": "16006:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16006:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15999:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15999:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16171:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16171:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																	"nativeSrc": "16082:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "16082:88:13"
																},
																"nativeSrc": "16082:93:13",
																"nodeType": "YulFunctionCall",
																"src": "16082:93:13"
															},
															"nativeSrc": "16082:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "16082:93:13"
														},
														{
															"nativeSrc": "16184:19:13",
															"nodeType": "YulAssignment",
															"src": "16184:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16195:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "16195:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16200:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16200:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16191:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16191:3:13"
																},
																"nativeSrc": "16191:12:13",
																"nodeType": "YulFunctionCall",
																"src": "16191:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16184:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16184:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15843:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15977:3:13",
														"nodeType": "YulTypedName",
														"src": "15977:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15985:3:13",
														"nodeType": "YulTypedName",
														"src": "15985:3:13",
														"type": ""
													}
												],
												"src": "15843:366:13"
											},
											{
												"body": {
													"nativeSrc": "16386:248:13",
													"nodeType": "YulBlock",
													"src": "16386:248:13",
													"statements": [
														{
															"nativeSrc": "16396:26:13",
															"nodeType": "YulAssignment",
															"src": "16396:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16408:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16408:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16419:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16419:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16404:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16404:3:13"
																},
																"nativeSrc": "16404:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16404:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16396:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16396:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16443:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16443:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16454:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16454:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16439:3:13"
																		},
																		"nativeSrc": "16439:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16439:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16462:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "16462:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16468:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16468:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16458:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16458:3:13"
																		},
																		"nativeSrc": "16458:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16458:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16432:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16432:6:13"
																},
																"nativeSrc": "16432:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16432:47:13"
															},
															"nativeSrc": "16432:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16432:47:13"
														},
														{
															"nativeSrc": "16488:139:13",
															"nodeType": "YulAssignment",
															"src": "16488:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16622:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "16622:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16496:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "16496:124:13"
																},
																"nativeSrc": "16496:131:13",
																"nodeType": "YulFunctionCall",
																"src": "16496:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16488:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16488:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16215:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16366:9:13",
														"nodeType": "YulTypedName",
														"src": "16366:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16381:4:13",
														"nodeType": "YulTypedName",
														"src": "16381:4:13",
														"type": ""
													}
												],
												"src": "16215:419:13"
											},
											{
												"body": {
													"nativeSrc": "16746:68:13",
													"nodeType": "YulBlock",
													"src": "16746:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16768:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16768:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16776:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16776:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16764:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16764:3:13"
																		},
																		"nativeSrc": "16764:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16764:14:13"
																	},
																	{
																		"hexValue": "496e76616c696420636f6e74726163742061646472657373",
																		"kind": "string",
																		"nativeSrc": "16780:26:13",
																		"nodeType": "YulLiteral",
																		"src": "16780:26:13",
																		"type": "",
																		"value": "Invalid contract address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16757:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16757:6:13"
																},
																"nativeSrc": "16757:50:13",
																"nodeType": "YulFunctionCall",
																"src": "16757:50:13"
															},
															"nativeSrc": "16757:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "16757:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
												"nativeSrc": "16640:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16738:6:13",
														"nodeType": "YulTypedName",
														"src": "16738:6:13",
														"type": ""
													}
												],
												"src": "16640:174:13"
											},
											{
												"body": {
													"nativeSrc": "16966:220:13",
													"nodeType": "YulBlock",
													"src": "16966:220:13",
													"statements": [
														{
															"nativeSrc": "16976:74:13",
															"nodeType": "YulAssignment",
															"src": "16976:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17042:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17042:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17047:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17047:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16983:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "16983:58:13"
																},
																"nativeSrc": "16983:67:13",
																"nodeType": "YulFunctionCall",
																"src": "16983:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16976:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16976:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17148:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17148:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																	"nativeSrc": "17059:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "17059:88:13"
																},
																"nativeSrc": "17059:93:13",
																"nodeType": "YulFunctionCall",
																"src": "17059:93:13"
															},
															"nativeSrc": "17059:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "17059:93:13"
														},
														{
															"nativeSrc": "17161:19:13",
															"nodeType": "YulAssignment",
															"src": "17161:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "17172:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17177:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17177:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17168:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17168:3:13"
																},
																"nativeSrc": "17168:12:13",
																"nodeType": "YulFunctionCall",
																"src": "17168:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17161:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17161:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16820:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16954:3:13",
														"nodeType": "YulTypedName",
														"src": "16954:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16962:3:13",
														"nodeType": "YulTypedName",
														"src": "16962:3:13",
														"type": ""
													}
												],
												"src": "16820:366:13"
											},
											{
												"body": {
													"nativeSrc": "17363:248:13",
													"nodeType": "YulBlock",
													"src": "17363:248:13",
													"statements": [
														{
															"nativeSrc": "17373:26:13",
															"nodeType": "YulAssignment",
															"src": "17373:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17385:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17385:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17396:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17396:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17381:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17381:3:13"
																},
																"nativeSrc": "17381:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17381:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17373:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17373:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17420:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17420:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17431:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17431:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17416:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17416:3:13"
																		},
																		"nativeSrc": "17416:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17416:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17439:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "17439:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17445:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17445:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17435:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17435:3:13"
																		},
																		"nativeSrc": "17435:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17435:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17409:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17409:6:13"
																},
																"nativeSrc": "17409:47:13",
																"nodeType": "YulFunctionCall",
																"src": "17409:47:13"
															},
															"nativeSrc": "17409:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "17409:47:13"
														},
														{
															"nativeSrc": "17465:139:13",
															"nodeType": "YulAssignment",
															"src": "17465:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17599:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "17599:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17473:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "17473:124:13"
																},
																"nativeSrc": "17473:131:13",
																"nodeType": "YulFunctionCall",
																"src": "17473:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17465:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17465:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17192:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17343:9:13",
														"nodeType": "YulTypedName",
														"src": "17343:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17358:4:13",
														"nodeType": "YulTypedName",
														"src": "17358:4:13",
														"type": ""
													}
												],
												"src": "17192:419:13"
											},
											{
												"body": {
													"nativeSrc": "17723:67:13",
													"nodeType": "YulBlock",
													"src": "17723:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17745:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17745:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17753:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17753:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17741:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17741:3:13"
																		},
																		"nativeSrc": "17741:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17741:14:13"
																	},
																	{
																		"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
																		"kind": "string",
																		"nativeSrc": "17757:25:13",
																		"nodeType": "YulLiteral",
																		"src": "17757:25:13",
																		"type": "",
																		"value": "Token allowance too low"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17734:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17734:6:13"
																},
																"nativeSrc": "17734:49:13",
																"nodeType": "YulFunctionCall",
																"src": "17734:49:13"
															},
															"nativeSrc": "17734:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "17734:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
												"nativeSrc": "17617:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17715:6:13",
														"nodeType": "YulTypedName",
														"src": "17715:6:13",
														"type": ""
													}
												],
												"src": "17617:173:13"
											},
											{
												"body": {
													"nativeSrc": "17942:220:13",
													"nodeType": "YulBlock",
													"src": "17942:220:13",
													"statements": [
														{
															"nativeSrc": "17952:74:13",
															"nodeType": "YulAssignment",
															"src": "17952:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18018:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18018:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18023:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18023:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17959:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "17959:58:13"
																},
																"nativeSrc": "17959:67:13",
																"nodeType": "YulFunctionCall",
																"src": "17959:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17952:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18124:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18124:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																	"nativeSrc": "18035:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18035:88:13"
																},
																"nativeSrc": "18035:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18035:93:13"
															},
															"nativeSrc": "18035:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18035:93:13"
														},
														{
															"nativeSrc": "18137:19:13",
															"nodeType": "YulAssignment",
															"src": "18137:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18148:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18148:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18153:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18153:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18144:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18144:3:13"
																},
																"nativeSrc": "18144:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18144:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18137:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18137:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17796:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17930:3:13",
														"nodeType": "YulTypedName",
														"src": "17930:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17938:3:13",
														"nodeType": "YulTypedName",
														"src": "17938:3:13",
														"type": ""
													}
												],
												"src": "17796:366:13"
											},
											{
												"body": {
													"nativeSrc": "18339:248:13",
													"nodeType": "YulBlock",
													"src": "18339:248:13",
													"statements": [
														{
															"nativeSrc": "18349:26:13",
															"nodeType": "YulAssignment",
															"src": "18349:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18361:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18361:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18372:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18372:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18357:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18357:3:13"
																},
																"nativeSrc": "18357:18:13",
																"nodeType": "YulFunctionCall",
																"src": "18357:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18349:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18349:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18396:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18396:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18407:1:13",
																				"nodeType": "YulLiteral",
																				"src": "18407:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18392:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18392:3:13"
																		},
																		"nativeSrc": "18392:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18392:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18415:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "18415:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18421:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "18421:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18411:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18411:3:13"
																		},
																		"nativeSrc": "18411:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18411:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18385:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18385:6:13"
																},
																"nativeSrc": "18385:47:13",
																"nodeType": "YulFunctionCall",
																"src": "18385:47:13"
															},
															"nativeSrc": "18385:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "18385:47:13"
														},
														{
															"nativeSrc": "18441:139:13",
															"nodeType": "YulAssignment",
															"src": "18441:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18575:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18575:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18449:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "18449:124:13"
																},
																"nativeSrc": "18449:131:13",
																"nodeType": "YulFunctionCall",
																"src": "18449:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18441:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18441:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18168:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18319:9:13",
														"nodeType": "YulTypedName",
														"src": "18319:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18334:4:13",
														"nodeType": "YulTypedName",
														"src": "18334:4:13",
														"type": ""
													}
												],
												"src": "18168:419:13"
											},
											{
												"body": {
													"nativeSrc": "18636:190:13",
													"nodeType": "YulBlock",
													"src": "18636:190:13",
													"statements": [
														{
															"nativeSrc": "18646:33:13",
															"nodeType": "YulAssignment",
															"src": "18646:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18673:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18673:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18655:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18655:17:13"
																},
																"nativeSrc": "18655:24:13",
																"nodeType": "YulFunctionCall",
																"src": "18655:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18646:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18646:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18769:22:13",
																"nodeType": "YulBlock",
																"src": "18769:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18771:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18771:16:13"
																			},
																			"nativeSrc": "18771:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18771:18:13"
																		},
																		"nativeSrc": "18771:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18771:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18694:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18694:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18701:66:13",
																		"nodeType": "YulLiteral",
																		"src": "18701:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18691:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18691:2:13"
																},
																"nativeSrc": "18691:77:13",
																"nodeType": "YulFunctionCall",
																"src": "18691:77:13"
															},
															"nativeSrc": "18688:103:13",
															"nodeType": "YulIf",
															"src": "18688:103:13"
														},
														{
															"nativeSrc": "18800:20:13",
															"nodeType": "YulAssignment",
															"src": "18800:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18811:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "18811:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18818:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18818:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18807:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18807:3:13"
																},
																"nativeSrc": "18807:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18807:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18800:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18800:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18593:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18622:5:13",
														"nodeType": "YulTypedName",
														"src": "18622:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18632:3:13",
														"nodeType": "YulTypedName",
														"src": "18632:3:13",
														"type": ""
													}
												],
												"src": "18593:233:13"
											},
											{
												"body": {
													"nativeSrc": "19014:371:13",
													"nodeType": "YulBlock",
													"src": "19014:371:13",
													"statements": [
														{
															"nativeSrc": "19024:27:13",
															"nodeType": "YulAssignment",
															"src": "19024:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19036:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19036:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19047:3:13",
																		"nodeType": "YulLiteral",
																		"src": "19047:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19032:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19032:3:13"
																},
																"nativeSrc": "19032:19:13",
																"nodeType": "YulFunctionCall",
																"src": "19032:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19024:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "19024:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19105:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19105:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19118:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19118:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19129:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19129:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19114:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19114:3:13"
																		},
																		"nativeSrc": "19114:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19114:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19061:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19061:43:13"
																},
																"nativeSrc": "19061:71:13",
																"nodeType": "YulFunctionCall",
																"src": "19061:71:13"
															},
															"nativeSrc": "19061:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "19061:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19186:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19186:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19199:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19199:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19210:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19210:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19195:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19195:3:13"
																		},
																		"nativeSrc": "19195:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19195:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19142:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19142:43:13"
																},
																"nativeSrc": "19142:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19142:72:13"
															},
															"nativeSrc": "19142:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19142:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "19268:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19268:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19281:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19281:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19292:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19292:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19277:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19277:3:13"
																		},
																		"nativeSrc": "19277:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19277:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19224:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19224:43:13"
																},
																"nativeSrc": "19224:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19224:72:13"
															},
															"nativeSrc": "19224:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19224:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "19350:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19350:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19363:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19363:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19374:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19374:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19359:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19359:3:13"
																		},
																		"nativeSrc": "19359:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19359:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19306:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "19306:43:13"
																},
																"nativeSrc": "19306:72:13",
																"nodeType": "YulFunctionCall",
																"src": "19306:72:13"
															},
															"nativeSrc": "19306:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "19306:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "18832:553:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18962:9:13",
														"nodeType": "YulTypedName",
														"src": "18962:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18974:6:13",
														"nodeType": "YulTypedName",
														"src": "18974:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18982:6:13",
														"nodeType": "YulTypedName",
														"src": "18982:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18990:6:13",
														"nodeType": "YulTypedName",
														"src": "18990:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18998:6:13",
														"nodeType": "YulTypedName",
														"src": "18998:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19009:4:13",
														"nodeType": "YulTypedName",
														"src": "19009:4:13",
														"type": ""
													}
												],
												"src": "18832:553:13"
											},
											{
												"body": {
													"nativeSrc": "19497:76:13",
													"nodeType": "YulBlock",
													"src": "19497:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19519:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19527:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19527:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19515:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19515:3:13"
																		},
																		"nativeSrc": "19515:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19515:14:13"
																	},
																	{
																		"hexValue": "4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177",
																		"kind": "string",
																		"nativeSrc": "19531:34:13",
																		"nodeType": "YulLiteral",
																		"src": "19531:34:13",
																		"type": "",
																		"value": "Only listing seller can withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19508:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19508:6:13"
																},
																"nativeSrc": "19508:58:13",
																"nodeType": "YulFunctionCall",
																"src": "19508:58:13"
															},
															"nativeSrc": "19508:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "19508:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
												"nativeSrc": "19391:182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19489:6:13",
														"nodeType": "YulTypedName",
														"src": "19489:6:13",
														"type": ""
													}
												],
												"src": "19391:182:13"
											},
											{
												"body": {
													"nativeSrc": "19725:220:13",
													"nodeType": "YulBlock",
													"src": "19725:220:13",
													"statements": [
														{
															"nativeSrc": "19735:74:13",
															"nodeType": "YulAssignment",
															"src": "19735:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19801:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19801:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19806:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19806:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19742:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "19742:58:13"
																},
																"nativeSrc": "19742:67:13",
																"nodeType": "YulFunctionCall",
																"src": "19742:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19735:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19735:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19907:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19907:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																	"nativeSrc": "19818:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "19818:88:13"
																},
																"nativeSrc": "19818:93:13",
																"nodeType": "YulFunctionCall",
																"src": "19818:93:13"
															},
															"nativeSrc": "19818:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "19818:93:13"
														},
														{
															"nativeSrc": "19920:19:13",
															"nodeType": "YulAssignment",
															"src": "19920:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19931:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19931:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19936:2:13",
																		"nodeType": "YulLiteral",
																		"src": "19936:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19927:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19927:3:13"
																},
																"nativeSrc": "19927:12:13",
																"nodeType": "YulFunctionCall",
																"src": "19927:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19920:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19920:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19579:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19713:3:13",
														"nodeType": "YulTypedName",
														"src": "19713:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19721:3:13",
														"nodeType": "YulTypedName",
														"src": "19721:3:13",
														"type": ""
													}
												],
												"src": "19579:366:13"
											},
											{
												"body": {
													"nativeSrc": "20122:248:13",
													"nodeType": "YulBlock",
													"src": "20122:248:13",
													"statements": [
														{
															"nativeSrc": "20132:26:13",
															"nodeType": "YulAssignment",
															"src": "20132:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20144:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20144:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20155:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20155:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20140:3:13"
																},
																"nativeSrc": "20140:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20140:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20132:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20132:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20179:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20179:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20190:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20190:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20175:3:13"
																		},
																		"nativeSrc": "20175:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20175:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20198:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "20198:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20204:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20204:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20194:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20194:3:13"
																		},
																		"nativeSrc": "20194:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20194:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20168:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20168:6:13"
																},
																"nativeSrc": "20168:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20168:47:13"
															},
															"nativeSrc": "20168:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20168:47:13"
														},
														{
															"nativeSrc": "20224:139:13",
															"nodeType": "YulAssignment",
															"src": "20224:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20358:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "20358:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20232:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "20232:124:13"
																},
																"nativeSrc": "20232:131:13",
																"nodeType": "YulFunctionCall",
																"src": "20232:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20224:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20224:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19951:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20102:9:13",
														"nodeType": "YulTypedName",
														"src": "20102:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20117:4:13",
														"nodeType": "YulTypedName",
														"src": "20117:4:13",
														"type": ""
													}
												],
												"src": "19951:419:13"
											},
											{
												"body": {
													"nativeSrc": "20482:65:13",
													"nodeType": "YulBlock",
													"src": "20482:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20504:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20504:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20512:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20512:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20500:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20500:3:13"
																		},
																		"nativeSrc": "20500:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20500:14:13"
																	},
																	{
																		"hexValue": "4c697374696e6720686173206e6f7420656e646564",
																		"kind": "string",
																		"nativeSrc": "20516:23:13",
																		"nodeType": "YulLiteral",
																		"src": "20516:23:13",
																		"type": "",
																		"value": "Listing has not ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20493:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20493:6:13"
																},
																"nativeSrc": "20493:47:13",
																"nodeType": "YulFunctionCall",
																"src": "20493:47:13"
															},
															"nativeSrc": "20493:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "20493:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
												"nativeSrc": "20376:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20474:6:13",
														"nodeType": "YulTypedName",
														"src": "20474:6:13",
														"type": ""
													}
												],
												"src": "20376:171:13"
											},
											{
												"body": {
													"nativeSrc": "20699:220:13",
													"nodeType": "YulBlock",
													"src": "20699:220:13",
													"statements": [
														{
															"nativeSrc": "20709:74:13",
															"nodeType": "YulAssignment",
															"src": "20709:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20775:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20775:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20780:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20780:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20716:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "20716:58:13"
																},
																"nativeSrc": "20716:67:13",
																"nodeType": "YulFunctionCall",
																"src": "20716:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20709:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20709:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20881:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20881:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																	"nativeSrc": "20792:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "20792:88:13"
																},
																"nativeSrc": "20792:93:13",
																"nodeType": "YulFunctionCall",
																"src": "20792:93:13"
															},
															"nativeSrc": "20792:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "20792:93:13"
														},
														{
															"nativeSrc": "20894:19:13",
															"nodeType": "YulAssignment",
															"src": "20894:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "20905:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20910:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20910:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20901:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20901:3:13"
																},
																"nativeSrc": "20901:12:13",
																"nodeType": "YulFunctionCall",
																"src": "20901:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20894:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20894:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20553:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20687:3:13",
														"nodeType": "YulTypedName",
														"src": "20687:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20695:3:13",
														"nodeType": "YulTypedName",
														"src": "20695:3:13",
														"type": ""
													}
												],
												"src": "20553:366:13"
											},
											{
												"body": {
													"nativeSrc": "21096:248:13",
													"nodeType": "YulBlock",
													"src": "21096:248:13",
													"statements": [
														{
															"nativeSrc": "21106:26:13",
															"nodeType": "YulAssignment",
															"src": "21106:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21118:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "21118:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21129:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21129:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21114:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21114:3:13"
																},
																"nativeSrc": "21114:18:13",
																"nodeType": "YulFunctionCall",
																"src": "21114:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21106:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21106:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21153:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21153:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21164:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21164:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21149:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21149:3:13"
																		},
																		"nativeSrc": "21149:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21149:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21172:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "21172:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21178:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21178:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21168:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21168:3:13"
																		},
																		"nativeSrc": "21168:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21168:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21142:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21142:6:13"
																},
																"nativeSrc": "21142:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21142:47:13"
															},
															"nativeSrc": "21142:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21142:47:13"
														},
														{
															"nativeSrc": "21198:139:13",
															"nodeType": "YulAssignment",
															"src": "21198:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21332:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "21332:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21206:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "21206:124:13"
																},
																"nativeSrc": "21206:131:13",
																"nodeType": "YulFunctionCall",
																"src": "21206:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21198:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "21198:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20925:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21076:9:13",
														"nodeType": "YulTypedName",
														"src": "21076:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21091:4:13",
														"nodeType": "YulTypedName",
														"src": "21091:4:13",
														"type": ""
													}
												],
												"src": "20925:419:13"
											},
											{
												"body": {
													"nativeSrc": "21456:65:13",
													"nodeType": "YulBlock",
													"src": "21456:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21478:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "21478:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21486:1:13",
																				"nodeType": "YulLiteral",
																				"src": "21486:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21474:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21474:3:13"
																		},
																		"nativeSrc": "21474:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21474:14:13"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "21490:23:13",
																		"nodeType": "YulLiteral",
																		"src": "21490:23:13",
																		"type": "",
																		"value": "No tokens to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21467:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "21467:6:13"
																},
																"nativeSrc": "21467:47:13",
																"nodeType": "YulFunctionCall",
																"src": "21467:47:13"
															},
															"nativeSrc": "21467:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "21467:47:13"
														}
													]
												},
												"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
												"nativeSrc": "21350:171:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21448:6:13",
														"nodeType": "YulTypedName",
														"src": "21448:6:13",
														"type": ""
													}
												],
												"src": "21350:171:13"
											},
											{
												"body": {
													"nativeSrc": "21673:220:13",
													"nodeType": "YulBlock",
													"src": "21673:220:13",
													"statements": [
														{
															"nativeSrc": "21683:74:13",
															"nodeType": "YulAssignment",
															"src": "21683:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21749:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21749:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21754:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21754:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21690:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "21690:58:13"
																},
																"nativeSrc": "21690:67:13",
																"nodeType": "YulFunctionCall",
																"src": "21690:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21683:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21683:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21855:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21855:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																	"nativeSrc": "21766:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "21766:88:13"
																},
																"nativeSrc": "21766:93:13",
																"nodeType": "YulFunctionCall",
																"src": "21766:93:13"
															},
															"nativeSrc": "21766:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "21766:93:13"
														},
														{
															"nativeSrc": "21868:19:13",
															"nodeType": "YulAssignment",
															"src": "21868:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21879:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "21879:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21884:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21884:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21875:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21875:3:13"
																},
																"nativeSrc": "21875:12:13",
																"nodeType": "YulFunctionCall",
																"src": "21875:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21868:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21868:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21527:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21661:3:13",
														"nodeType": "YulTypedName",
														"src": "21661:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21669:3:13",
														"nodeType": "YulTypedName",
														"src": "21669:3:13",
														"type": ""
													}
												],
												"src": "21527:366:13"
											},
											{
												"body": {
													"nativeSrc": "22070:248:13",
													"nodeType": "YulBlock",
													"src": "22070:248:13",
													"statements": [
														{
															"nativeSrc": "22080:26:13",
															"nodeType": "YulAssignment",
															"src": "22080:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22092:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22092:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22103:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22103:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22088:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22088:3:13"
																},
																"nativeSrc": "22088:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22088:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22080:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22127:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22127:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22138:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22138:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22123:3:13"
																		},
																		"nativeSrc": "22123:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22123:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22146:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "22146:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22152:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22152:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22142:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22142:3:13"
																		},
																		"nativeSrc": "22142:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22142:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22116:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22116:6:13"
																},
																"nativeSrc": "22116:47:13",
																"nodeType": "YulFunctionCall",
																"src": "22116:47:13"
															},
															"nativeSrc": "22116:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "22116:47:13"
														},
														{
															"nativeSrc": "22172:139:13",
															"nodeType": "YulAssignment",
															"src": "22172:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22306:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "22306:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22180:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "22180:124:13"
																},
																"nativeSrc": "22180:131:13",
																"nodeType": "YulFunctionCall",
																"src": "22180:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22172:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22172:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21899:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22050:9:13",
														"nodeType": "YulTypedName",
														"src": "22050:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22065:4:13",
														"nodeType": "YulTypedName",
														"src": "22065:4:13",
														"type": ""
													}
												],
												"src": "21899:419:13"
											},
											{
												"body": {
													"nativeSrc": "22478:288:13",
													"nodeType": "YulBlock",
													"src": "22478:288:13",
													"statements": [
														{
															"nativeSrc": "22488:26:13",
															"nodeType": "YulAssignment",
															"src": "22488:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22500:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22500:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22511:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22511:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22496:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22496:3:13"
																},
																"nativeSrc": "22496:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22496:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22488:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22488:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22568:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22568:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22581:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22581:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22592:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22592:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22577:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22577:3:13"
																		},
																		"nativeSrc": "22577:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22577:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22524:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22524:43:13"
																},
																"nativeSrc": "22524:71:13",
																"nodeType": "YulFunctionCall",
																"src": "22524:71:13"
															},
															"nativeSrc": "22524:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "22524:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22649:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22649:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22662:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22662:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22673:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22673:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22658:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22658:3:13"
																		},
																		"nativeSrc": "22658:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22658:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22605:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22605:43:13"
																},
																"nativeSrc": "22605:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22605:72:13"
															},
															"nativeSrc": "22605:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22605:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22731:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22731:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22744:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "22744:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22755:2:13",
																				"nodeType": "YulLiteral",
																				"src": "22755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22740:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22740:3:13"
																		},
																		"nativeSrc": "22740:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22740:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22687:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22687:43:13"
																},
																"nativeSrc": "22687:72:13",
																"nodeType": "YulFunctionCall",
																"src": "22687:72:13"
															},
															"nativeSrc": "22687:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "22687:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22324:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22434:9:13",
														"nodeType": "YulTypedName",
														"src": "22434:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22446:6:13",
														"nodeType": "YulTypedName",
														"src": "22446:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22454:6:13",
														"nodeType": "YulTypedName",
														"src": "22454:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22462:6:13",
														"nodeType": "YulTypedName",
														"src": "22462:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22473:4:13",
														"nodeType": "YulTypedName",
														"src": "22473:4:13",
														"type": ""
													}
												],
												"src": "22324:442:13"
											},
											{
												"body": {
													"nativeSrc": "22898:206:13",
													"nodeType": "YulBlock",
													"src": "22898:206:13",
													"statements": [
														{
															"nativeSrc": "22908:26:13",
															"nodeType": "YulAssignment",
															"src": "22908:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22920:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "22920:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22931:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22931:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22916:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22916:3:13"
																},
																"nativeSrc": "22916:18:13",
																"nodeType": "YulFunctionCall",
																"src": "22916:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22908:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "22908:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22988:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22988:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23001:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23001:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23012:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23012:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22997:3:13"
																		},
																		"nativeSrc": "22997:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22997:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22944:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "22944:43:13"
																},
																"nativeSrc": "22944:71:13",
																"nodeType": "YulFunctionCall",
																"src": "22944:71:13"
															},
															"nativeSrc": "22944:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "22944:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23069:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23069:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23082:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23082:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23093:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23093:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23078:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23078:3:13"
																		},
																		"nativeSrc": "23078:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23078:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23025:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23025:43:13"
																},
																"nativeSrc": "23025:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23025:72:13"
															},
															"nativeSrc": "23025:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23025:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22772:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22862:9:13",
														"nodeType": "YulTypedName",
														"src": "22862:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22874:6:13",
														"nodeType": "YulTypedName",
														"src": "22874:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22882:6:13",
														"nodeType": "YulTypedName",
														"src": "22882:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22893:4:13",
														"nodeType": "YulTypedName",
														"src": "22893:4:13",
														"type": ""
													}
												],
												"src": "22772:332:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_address_t_uint256__to_t_address_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing has expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough tokens in listing\")\n\n    }\n\n    function abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Incorrect payment amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(memPtr) {\n\n        mstore(add(memPtr, 0), \"Payment token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tokens must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Duration must be greater than ze\")\n\n        mstore(add(memPtr, 32), \"ro\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid contract address\")\n\n    }\n\n    function abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Token allowance too low\")\n\n    }\n\n    function abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only listing seller can withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Listing has not ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100b2575f3560e01c80637d60b6ce1161006f5780637d60b6ce146101545780638da5cb5b146101705780639ffae41b1461018e578063de74e57b146101aa578063f25713bf146101de578063f2fde38b146101fa576100b2565b806317c73ff0146100b65780631bf1de9b146100d457806324f56afa146100f257806327722e621461010e5780636c2c9c7d1461012c578063715018a61461014a575b5f5ffd5b6100be610216565b6040516100cb91906110eb565b60405180910390f35b6100dc61023b565b6040516100e9919061111c565b60405180910390f35b61010c60048036038101906101079190611163565b610240565b005b6101166105f0565b60405161012391906110eb565b60405180910390f35b610134610608565b604051610141919061111c565b60405180910390f35b61015261060e565b005b61016e600480360381019061016991906111dd565b610621565b005b6101786106da565b60405161018591906110eb565b60405180910390f35b6101a860048036038101906101a39190611208565b610702565b005b6101c460048036038101906101bf919061126c565b610ad5565b6040516101d5959493929190611297565b60405180910390f35b6101f860048036038101906101f3919061126c565b610b45565b005b610214600480360381019061020f91906111dd565b610cee565b005b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a81565b610248610d72565b5f60025f8581526020019081526020015f2090505f8160020154116102a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029990611342565b60405180910390fd5b80600401544211156102e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e0906113aa565b60405180910390fd5b8281600201541015610330576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032790611412565b60405180910390fd5b5f838260010154610341919061145d565b90505f6064600a83610353919061145d565b61035d91906114cb565b90505f818361036c91906114fb565b90508085146103b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103a790611578565b60405180910390fd5b5f735fdaf637aed59b2e6d384d9e84d8ac5cf03c66979050858173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610404929190611596565b602060405180830381865afa15801561041f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061044391906115d1565b1015610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b90611646565b60405180910390fd5b6104d23360045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b61052233866003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b86856002015f8282546105359190611664565b925050819055506105893388875f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e389092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fdca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf589898760016040516105d694939291906116b1565b60405180910390a250505050506105eb610eb7565b505050565b735fdaf637aed59b2e6d384d9e84d8ac5cf03c669781565b60035481565b610616610ec0565b61061f5f610f47565b565b610629610ec0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068e9061173e565b60405180910390fd5b8060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f8411610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073b906117a6565b60405180910390fd5b5f8211610786576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077d9061180e565b60405180910390fd5b5f81116107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061189c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610836576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082d90611904565b60405180910390fd5b5f839050828173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401610876929190611596565b602060405180830381865afa158015610891573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108b591906115d1565b10156108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed9061196c565b60405180910390fd5b6109233330858473ffffffffffffffffffffffffffffffffffffffff16610db6909392919063ffffffff16565b60035f8154809291906109359061198a565b91905055506040518060a001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001834261099591906114fb565b81525060025f60035481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b60035488878742610ab691906114fb565b604051610ac694939291906119d1565b60405180910390a35050505050565b6002602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015490806002015490806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b610b4d610d72565b5f60025f8381526020019081526020015f209050806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be990611a5e565b60405180910390fd5b80600401544211610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f90611ac6565b60405180910390fd5b5f816002015411610c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7590611b2e565b60405180910390fd5b5f816002015490505f82600201819055505f825f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610ce033838373ffffffffffffffffffffffffffffffffffffffff16610e389092919063ffffffff16565b505050610ceb610eb7565b50565b610cf6610ec0565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d66575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d5d91906110eb565b60405180910390fd5b610d6f81610f47565b50565b60025f5403610dad576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b610e32848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610deb93929190611b4c565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061100a565b50505050565b610eb2838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e6b929190611b81565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061100a565b505050565b60015f81905550565b610ec86110a5565b73ffffffffffffffffffffffffffffffffffffffff16610ee66106da565b73ffffffffffffffffffffffffffffffffffffffff1614610f4557610f096110a5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610f3c91906110eb565b60405180910390fd5b565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f60205f8451602086015f885af180611029576040513d5f823e3d81fd5b3d92505f519150505f821461104257600181141561105d565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561109f57836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161109691906110eb565b60405180910390fd5b50505050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110d5826110ac565b9050919050565b6110e5816110cb565b82525050565b5f6020820190506110fe5f8301846110dc565b92915050565b5f819050919050565b61111681611104565b82525050565b5f60208201905061112f5f83018461110d565b92915050565b5f5ffd5b61114281611104565b811461114c575f5ffd5b50565b5f8135905061115d81611139565b92915050565b5f5f5f6060848603121561117a57611179611135565b5b5f6111878682870161114f565b93505060206111988682870161114f565b92505060406111a98682870161114f565b9150509250925092565b6111bc816110cb565b81146111c6575f5ffd5b50565b5f813590506111d7816111b3565b92915050565b5f602082840312156111f2576111f1611135565b5b5f6111ff848285016111c9565b91505092915050565b5f5f5f5f608085870312156112205761121f611135565b5b5f61122d8782880161114f565b945050602061123e878288016111c9565b935050604061124f8782880161114f565b92505060606112608782880161114f565b91505092959194509250565b5f6020828403121561128157611280611135565b5b5f61128e8482850161114f565b91505092915050565b5f60a0820190506112aa5f8301886110dc565b6112b7602083018761110d565b6112c4604083018661110d565b6112d160608301856110dc565b6112de608083018461110d565b9695505050505050565b5f82825260208201905092915050565b7f4c697374696e6720646f6573206e6f74206578697374000000000000000000005f82015250565b5f61132c6016836112e8565b9150611337826112f8565b602082019050919050565b5f6020820190508181035f83015261135981611320565b9050919050565b7f4c697374696e67206861732065787069726564000000000000000000000000005f82015250565b5f6113946013836112e8565b915061139f82611360565b602082019050919050565b5f6020820190508181035f8301526113c181611388565b9050919050565b7f4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67000000005f82015250565b5f6113fc601c836112e8565b9150611407826113c8565b602082019050919050565b5f6020820190508181035f830152611429816113f0565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61146782611104565b915061147283611104565b925082820261148081611104565b9150828204841483151761149757611496611430565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6114d582611104565b91506114e083611104565b9250826114f0576114ef61149e565b5b828204905092915050565b5f61150582611104565b915061151083611104565b925082820190508082111561152857611527611430565b5b92915050565b7f496e636f7272656374207061796d656e7420616d6f756e7400000000000000005f82015250565b5f6115626018836112e8565b915061156d8261152e565b602082019050919050565b5f6020820190508181035f83015261158f81611556565b9050919050565b5f6040820190506115a95f8301856110dc565b6115b660208301846110dc565b9392505050565b5f815190506115cb81611139565b92915050565b5f602082840312156115e6576115e5611135565b5b5f6115f3848285016115bd565b91505092915050565b7f5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77005f82015250565b5f611630601f836112e8565b915061163b826115fc565b602082019050919050565b5f6020820190508181035f83015261165d81611624565b9050919050565b5f61166e82611104565b915061167983611104565b925082820390508181111561169157611690611430565b5b92915050565b5f8115159050919050565b6116ab81611697565b82525050565b5f6080820190506116c45f83018761110d565b6116d1602083018661110d565b6116de604083018561110d565b6116eb60608301846116a2565b95945050505050565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f611728600f836112e8565b9150611733826116f4565b602082019050919050565b5f6020820190508181035f8301526117558161171c565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e207a65726f005f82015250565b5f611790601f836112e8565b915061179b8261175c565b602082019050919050565b5f6020820190508181035f8301526117bd81611784565b9050919050565b7f546f6b656e73206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f6117f86020836112e8565b9150611803826117c4565b602082019050919050565b5f6020820190508181035f830152611825816117ec565b9050919050565b7f4475726174696f6e206d7573742062652067726561746572207468616e207a655f8201527f726f000000000000000000000000000000000000000000000000000000000000602082015250565b5f6118866022836112e8565b91506118918261182c565b604082019050919050565b5f6020820190508181035f8301526118b38161187a565b9050919050565b7f496e76616c696420636f6e7472616374206164647265737300000000000000005f82015250565b5f6118ee6018836112e8565b91506118f9826118ba565b602082019050919050565b5f6020820190508181035f83015261191b816118e2565b9050919050565b7f546f6b656e20616c6c6f77616e636520746f6f206c6f770000000000000000005f82015250565b5f6119566017836112e8565b915061196182611922565b602082019050919050565b5f6020820190508181035f8301526119838161194a565b9050919050565b5f61199482611104565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119c6576119c5611430565b5b600182019050919050565b5f6080820190506119e45f83018761110d565b6119f1602083018661110d565b6119fe604083018561110d565b611a0b606083018461110d565b95945050505050565b7f4f6e6c79206c697374696e672073656c6c65722063616e2077697468647261775f82015250565b5f611a486020836112e8565b9150611a5382611a14565b602082019050919050565b5f6020820190508181035f830152611a7581611a3c565b9050919050565b7f4c697374696e6720686173206e6f7420656e64656400000000000000000000005f82015250565b5f611ab06015836112e8565b9150611abb82611a7c565b602082019050919050565b5f6020820190508181035f830152611add81611aa4565b9050919050565b7f4e6f20746f6b656e7320746f20776974686472617700000000000000000000005f82015250565b5f611b186015836112e8565b9150611b2382611ae4565b602082019050919050565b5f6020820190508181035f830152611b4581611b0c565b9050919050565b5f606082019050611b5f5f8301866110dc565b611b6c60208301856110dc565b611b79604083018461110d565b949350505050565b5f604082019050611b945f8301856110dc565b611ba1602083018461110d565b939250505056fea2646970667358221220b3cc67c450942aad31a55d9e6e8b9bbb96b7a4ce1585b261a2ec64600fa5c39464736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D60B6CE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x7D60B6CE EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x170 JUMPI DUP1 PUSH4 0x9FFAE41B EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF25713BF EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x17C73FF0 EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x1BF1DE9B EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x24F56AFA EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x27722E62 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x6C2C9C7D EQ PUSH2 0x12C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDC PUSH2 0x23B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x107 SWAP2 SWAP1 PUSH2 0x1163 JUMP JUMPDEST PUSH2 0x240 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x116 PUSH2 0x5F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH2 0x608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x111C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x60E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x16E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x621 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x178 PUSH2 0x6DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x185 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1208 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1297 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x126C JUMP JUMPDEST PUSH2 0xB45 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH2 0x248 PUSH2 0xD72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0x2A2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x299 SWAP1 PUSH2 0x1342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E0 SWAP1 PUSH2 0x13AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x330 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x327 SWAP1 PUSH2 0x1412 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x64 PUSH1 0xA DUP4 PUSH2 0x353 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x14CB JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST SWAP1 POP DUP1 DUP6 EQ PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0x5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697 SWAP1 POP DUP6 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x41F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST LT ISZERO PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D2 CALLER PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x522 CALLER DUP7 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 DUP6 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x1664 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x589 CALLER DUP9 DUP8 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5 DUP10 DUP10 DUP8 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x5D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP PUSH2 0x5EB PUSH2 0xEB7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0x5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x616 PUSH2 0xEC0 JUMP JUMPDEST PUSH2 0x61F PUSH0 PUSH2 0xF47 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x629 PUSH2 0xEC0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x697 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x68E SWAP1 PUSH2 0x173E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP5 GT PUSH2 0x744 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x73B SWAP1 PUSH2 0x17A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x77D SWAP1 PUSH2 0x180E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x7C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BF SWAP1 PUSH2 0x189C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x836 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82D SWAP1 PUSH2 0x1904 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 SWAP1 POP DUP3 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x876 SWAP3 SWAP2 SWAP1 PUSH2 0x1596 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x891 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x15D1 JUMP JUMPDEST LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x196C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x923 CALLER ADDRESS DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDB6 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x935 SWAP1 PUSH2 0x198A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 TIMESTAMP PUSH2 0x995 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST DUP2 MSTORE POP PUSH1 0x2 PUSH0 PUSH1 0x3 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B PUSH1 0x3 SLOAD DUP9 DUP8 DUP8 TIMESTAMP PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x14FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xB4D PUSH2 0xD72 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBE9 SWAP1 PUSH2 0x1A5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD SLOAD TIMESTAMP GT PUSH2 0xC38 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC2F SWAP1 PUSH2 0x1AC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD GT PUSH2 0xC7E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC75 SWAP1 PUSH2 0x1B2E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH2 0xCE0 CALLER DUP4 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE38 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP PUSH2 0xCEB PUSH2 0xEB7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCF6 PUSH2 0xEC0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD66 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD6F DUP2 PUSH2 0xF47 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE32 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xDEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x100A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEB2 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE6B SWAP3 SWAP2 SWAP1 PUSH2 0x1B81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x100A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xEC8 PUSH2 0x10A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEE6 PUSH2 0x6DA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF45 JUMPI PUSH2 0xF09 PUSH2 0x10A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1042 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x105D JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x109F JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1096 SWAP2 SWAP1 PUSH2 0x10EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10D5 DUP3 PUSH2 0x10AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E5 DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10FE PUSH0 DUP4 ADD DUP5 PUSH2 0x10DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1116 DUP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112F PUSH0 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1142 DUP2 PUSH2 0x1104 JUMP JUMPDEST DUP2 EQ PUSH2 0x114C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x115D DUP2 PUSH2 0x1139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x117A JUMPI PUSH2 0x1179 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1187 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1198 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11A9 DUP7 DUP3 DUP8 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x11BC DUP2 PUSH2 0x10CB JUMP JUMPDEST DUP2 EQ PUSH2 0x11C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D7 DUP2 PUSH2 0x11B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F2 JUMPI PUSH2 0x11F1 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11FF DUP5 DUP3 DUP6 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1220 JUMPI PUSH2 0x121F PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x122D DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x123E DUP8 DUP3 DUP9 ADD PUSH2 0x11C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x124F DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1260 DUP8 DUP3 DUP9 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1281 JUMPI PUSH2 0x1280 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x128E DUP5 DUP3 DUP6 ADD PUSH2 0x114F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x12AA PUSH0 DUP4 ADD DUP9 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x12B7 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x12C4 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x12D1 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x12DE PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4C697374696E6720646F6573206E6F7420657869737400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x132C PUSH1 0x16 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1337 DUP3 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1359 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206578706972656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1394 PUSH1 0x13 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x139F DUP3 PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C1 DUP2 PUSH2 0x1388 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x13FC PUSH1 0x1C DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1407 DUP3 PUSH2 0x13C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1429 DUP2 PUSH2 0x13F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1467 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1472 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1480 DUP2 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1497 JUMPI PUSH2 0x1496 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x14D5 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E0 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14F0 JUMPI PUSH2 0x14EF PUSH2 0x149E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1505 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1510 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1528 JUMPI PUSH2 0x1527 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E636F7272656374207061796D656E7420616D6F756E740000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1562 PUSH1 0x18 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x156D DUP3 PUSH2 0x152E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x158F DUP2 PUSH2 0x1556 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15A9 PUSH0 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x15B6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10DC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x15CB DUP2 PUSH2 0x1139 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x1135 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15F3 DUP5 DUP3 DUP6 ADD PUSH2 0x15BD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1630 PUSH1 0x1F DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x163B DUP3 PUSH2 0x15FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x165D DUP2 PUSH2 0x1624 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x166E DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH2 0x1679 DUP4 PUSH2 0x1104 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1691 JUMPI PUSH2 0x1690 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16AB DUP2 PUSH2 0x1697 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16C4 PUSH0 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16D1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16DE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x16EB PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16A2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1728 PUSH1 0xF DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1733 DUP3 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1755 DUP2 PUSH2 0x171C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5072696365206D7573742062652067726561746572207468616E207A65726F00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1790 PUSH1 0x1F DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x179B DUP3 PUSH2 0x175C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17BD DUP2 PUSH2 0x1784 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E73206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17F8 PUSH1 0x20 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1803 DUP3 PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1825 DUP2 PUSH2 0x17EC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4475726174696F6E206D7573742062652067726561746572207468616E207A65 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1886 PUSH1 0x22 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1891 DUP3 PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18B3 DUP2 PUSH2 0x187A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6E747261637420616464726573730000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18EE PUSH1 0x18 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F9 DUP3 PUSH2 0x18BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x191B DUP2 PUSH2 0x18E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1956 PUSH1 0x17 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1961 DUP3 PUSH2 0x1922 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1983 DUP2 PUSH2 0x194A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1994 DUP3 PUSH2 0x1104 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x19C6 JUMPI PUSH2 0x19C5 PUSH2 0x1430 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x19E4 PUSH0 DUP4 ADD DUP8 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x19F1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x19FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1A0B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A48 PUSH1 0x20 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A53 DUP3 PUSH2 0x1A14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A75 DUP2 PUSH2 0x1A3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4C697374696E6720686173206E6F7420656E6465640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AB0 PUSH1 0x15 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ABB DUP3 PUSH2 0x1A7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1ADD DUP2 PUSH2 0x1AA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E7320746F2077697468647261770000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1B18 PUSH1 0x15 DUP4 PUSH2 0x12E8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B23 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B45 DUP2 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1B5F PUSH0 DUP4 ADD DUP7 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1B6C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1B79 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B94 PUSH0 DUP4 ADD DUP6 PUSH2 0x10DC JUMP JUMPDEST PUSH2 0x1BA1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x110D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 0xCC PUSH8 0xC450942AAD31A55D SWAP15 PUSH15 0x8B9BBB96B7A4CE1585B261A2EC6460 0xF 0xA5 0xC3 SWAP5 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "309:3855:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;768:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2170:1239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;824:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;3987:174:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1185:979:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;601:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3415:566;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;685:77:12;;;;;;;;;;;;;:::o;768:50::-;816:2;768:50;:::o;2170:1239::-;2500:21:10;:19;:21::i;:::-;2323:23:12::1;2349:8;:19;2358:9;2349:19;;;;;;;;;;;2323:45;;2403:1;2386:7;:14;;;:18;2378:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2468:7;:18;;;2449:15;:37;;2441:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;2546:11;2528:7;:14;;;:29;;2520:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2601:18;2638:11;2622:7;:13;;;:27;;;;:::i;:::-;2601:48;;2659:18;2719:3;816:2;2681:10;:34;;;;:::i;:::-;2680:42;;;;:::i;:::-;2659:63;;2732:26;2774:10;2761;:23;;;;:::i;:::-;2732:52;;2819:18;2802:13;:35;2794:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;2877:18;863:42;2877:40;;2988:13;2935:12;:22;;;2958:10;2978:4;2935:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:66;;2927:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;3048:72;3078:10;3090:17;;;;;;;;;;;3109:10;3048:12;:29;;;;:72;;;;;;:::i;:::-;3130:69;3160:10;3172:7;:14;;;;;;;;;;;;3188:10;3130:12;:29;;;;:69;;;;;;:::i;:::-;3228:11;3210:7;:14;;;:29;;;;;;;:::i;:::-;;;;;;;;3249:68;3293:10;3305:11;3255:7;:23;;;;;;;;;;;;3249:43;;;;:68;;;;;:::i;:::-;3360:10;3333:69;;;3349:9;3372:11;3385:10;3397:4;3333:69;;;;;;;;;:::i;:::-;;;;;;;;2313:1096;;;;;2542:20:10::0;:18;:20::i;:::-;2170:1239:12;;;:::o;824:81::-;863:42;824:81;:::o;650:29::-;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3987:174:12:-;1531:13:0;:11;:13::i;:::-;4093:1:12::1;4072:23;;:9;:23;;::::0;4064:51:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;4145:9;4125:17;;:29;;;;;;;;;;;;;;;;;;3987:174:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1185:979:12:-;1314:1;1306:5;:9;1298:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;1378:1;1369:6;:10;1361:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1445:1;1434:8;:12;1426:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1530:1;1503:29;;:15;:29;;;1495:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1572:11;1592:15;1572:36;;1672:6;1626:5;:15;;;1642:10;1662:4;1626:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;1618:88;;;;;;;;;;;;:::i;:::-;;;;;;;;;1717:57;1740:10;1760:4;1767:6;1717:5;:22;;;;:57;;;;;;:::i;:::-;1785:14;;:16;;;;;;;;;:::i;:::-;;;;;;1838:203;;;;;;;;1877:15;1838:203;;;;;;1913:5;1838:203;;;;1940:6;1838:203;;;;1968:10;1838:203;;;;;;2022:8;2004:15;:26;;;;:::i;:::-;1838:203;;;1811:8;:24;1820:14;;1811:24;;;;;;;;;;;:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:15;2057:100;;2086:10;2057:100;;;2070:14;;2115:5;2122:6;2148:8;2130:15;:26;;;;:::i;:::-;2057:100;;;;;;;;;:::i;:::-;;;;;;;;1288:876;1185:979;;;;:::o;601:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3415:566::-;2500:21:10;:19;:21::i;:::-;3501:23:12::1;3527:8;:19;3536:9;3527:19;;;;;;;;;;;3501:45;;3578:7;:14;;;;;;;;;;;;3564:28;;:10;:28;;;3556:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3665:7;:18;;;3647:15;:36;3639:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;3744:1;3727:7;:14;;;:18;3719:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3782:29;3814:7;:14;;;3782:46;;3855:1;3838:7;:14;;:18;;;;3867:11;3887:7;:23;;;;;;;;;;;;3867:44;;3921:53;3940:10;3952:21;3921:5;:18;;;;:53;;;;;:::i;:::-;3491:490;;;2542:20:10::0;:18;:20::i;:::-;3415:566:12;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2575:307:10:-;1899:1;2702:7;;:18;2698:86;;2743:30;;;;;;;;;;;;;;2698:86;1899:1;2858:7;:17;;;;2575:307::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1219:160::-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2888:208:10:-;1857:1;3068:7;:21;;;;2888:208::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7686:720:8:-;7766:18;7794:19;7932:4;7929:1;7922:4;7916:11;7909:4;7903;7899:15;7896:1;7889:5;7882;7877:60;7989:7;7979:176;;8033:4;8027:11;8078:16;8075:1;8070:3;8055:40;8124:16;8119:3;8112:29;7979:176;8182:16;8168:30;;8232:1;8226:8;8211:23;;7848:396;8272:1;8258:10;:15;:68;;8325:1;8310:11;:16;;8258:68;;;8306:1;8284:5;8276:26;;;:31;8258:68;8254:146;;;8382:5;8349:40;;;;;;;;;;;:::i;:::-;;;;;;;;8254:146;7756:650;;7686:720;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:77::-;630:7;659:5;648:16;;593:77;;;:::o;676:118::-;763:24;781:5;763:24;:::i;:::-;758:3;751:37;676:118;;:::o;800:222::-;893:4;931:2;920:9;916:18;908:26;;944:71;1012:1;1001:9;997:17;988:6;944:71;:::i;:::-;800:222;;;;:::o;1109:117::-;1218:1;1215;1208:12;1355:122;1428:24;1446:5;1428:24;:::i;:::-;1421:5;1418:35;1408:63;;1467:1;1464;1457:12;1408:63;1355:122;:::o;1483:139::-;1529:5;1567:6;1554:20;1545:29;;1583:33;1610:5;1583:33;:::i;:::-;1483:139;;;;:::o;1628:619::-;1705:6;1713;1721;1770:2;1758:9;1749:7;1745:23;1741:32;1738:119;;;1776:79;;:::i;:::-;1738:119;1896:1;1921:53;1966:7;1957:6;1946:9;1942:22;1921:53;:::i;:::-;1911:63;;1867:117;2023:2;2049:53;2094:7;2085:6;2074:9;2070:22;2049:53;:::i;:::-;2039:63;;1994:118;2151:2;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2122:118;1628:619;;;;;:::o;2253:122::-;2326:24;2344:5;2326:24;:::i;:::-;2319:5;2316:35;2306:63;;2365:1;2362;2355:12;2306:63;2253:122;:::o;2381:139::-;2427:5;2465:6;2452:20;2443:29;;2481:33;2508:5;2481:33;:::i;:::-;2381:139;;;;:::o;2526:329::-;2585:6;2634:2;2622:9;2613:7;2609:23;2605:32;2602:119;;;2640:79;;:::i;:::-;2602:119;2760:1;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2731:117;2526:329;;;;:::o;2861:765::-;2947:6;2955;2963;2971;3020:3;3008:9;2999:7;2995:23;2991:33;2988:120;;;3027:79;;:::i;:::-;2988:120;3147:1;3172:53;3217:7;3208:6;3197:9;3193:22;3172:53;:::i;:::-;3162:63;;3118:117;3274:2;3300:53;3345:7;3336:6;3325:9;3321:22;3300:53;:::i;:::-;3290:63;;3245:118;3402:2;3428:53;3473:7;3464:6;3453:9;3449:22;3428:53;:::i;:::-;3418:63;;3373:118;3530:2;3556:53;3601:7;3592:6;3581:9;3577:22;3556:53;:::i;:::-;3546:63;;3501:118;2861:765;;;;;;;:::o;3632:329::-;3691:6;3740:2;3728:9;3719:7;3715:23;3711:32;3708:119;;;3746:79;;:::i;:::-;3708:119;3866:1;3891:53;3936:7;3927:6;3916:9;3912:22;3891:53;:::i;:::-;3881:63;;3837:117;3632:329;;;;:::o;3967:664::-;4172:4;4210:3;4199:9;4195:19;4187:27;;4224:71;4292:1;4281:9;4277:17;4268:6;4224:71;:::i;:::-;4305:72;4373:2;4362:9;4358:18;4349:6;4305:72;:::i;:::-;4387;4455:2;4444:9;4440:18;4431:6;4387:72;:::i;:::-;4469;4537:2;4526:9;4522:18;4513:6;4469:72;:::i;:::-;4551:73;4619:3;4608:9;4604:19;4595:6;4551:73;:::i;:::-;3967:664;;;;;;;;:::o;4637:169::-;4721:11;4755:6;4750:3;4743:19;4795:4;4790:3;4786:14;4771:29;;4637:169;;;;:::o;4812:172::-;4952:24;4948:1;4940:6;4936:14;4929:48;4812:172;:::o;4990:366::-;5132:3;5153:67;5217:2;5212:3;5153:67;:::i;:::-;5146:74;;5229:93;5318:3;5229:93;:::i;:::-;5347:2;5342:3;5338:12;5331:19;;4990:366;;;:::o;5362:419::-;5528:4;5566:2;5555:9;5551:18;5543:26;;5615:9;5609:4;5605:20;5601:1;5590:9;5586:17;5579:47;5643:131;5769:4;5643:131;:::i;:::-;5635:139;;5362:419;;;:::o;5787:169::-;5927:21;5923:1;5915:6;5911:14;5904:45;5787:169;:::o;5962:366::-;6104:3;6125:67;6189:2;6184:3;6125:67;:::i;:::-;6118:74;;6201:93;6290:3;6201:93;:::i;:::-;6319:2;6314:3;6310:12;6303:19;;5962:366;;;:::o;6334:419::-;6500:4;6538:2;6527:9;6523:18;6515:26;;6587:9;6581:4;6577:20;6573:1;6562:9;6558:17;6551:47;6615:131;6741:4;6615:131;:::i;:::-;6607:139;;6334:419;;;:::o;6759:178::-;6899:30;6895:1;6887:6;6883:14;6876:54;6759:178;:::o;6943:366::-;7085:3;7106:67;7170:2;7165:3;7106:67;:::i;:::-;7099:74;;7182:93;7271:3;7182:93;:::i;:::-;7300:2;7295:3;7291:12;7284:19;;6943:366;;;:::o;7315:419::-;7481:4;7519:2;7508:9;7504:18;7496:26;;7568:9;7562:4;7558:20;7554:1;7543:9;7539:17;7532:47;7596:131;7722:4;7596:131;:::i;:::-;7588:139;;7315:419;;;:::o;7740:180::-;7788:77;7785:1;7778:88;7885:4;7882:1;7875:15;7909:4;7906:1;7899:15;7926:410;7966:7;7989:20;8007:1;7989:20;:::i;:::-;7984:25;;8023:20;8041:1;8023:20;:::i;:::-;8018:25;;8078:1;8075;8071:9;8100:30;8118:11;8100:30;:::i;:::-;8089:41;;8279:1;8270:7;8266:15;8263:1;8260:22;8240:1;8233:9;8213:83;8190:139;;8309:18;;:::i;:::-;8190:139;7974:362;7926:410;;;;:::o;8342:180::-;8390:77;8387:1;8380:88;8487:4;8484:1;8477:15;8511:4;8508:1;8501:15;8528:185;8568:1;8585:20;8603:1;8585:20;:::i;:::-;8580:25;;8619:20;8637:1;8619:20;:::i;:::-;8614:25;;8658:1;8648:35;;8663:18;;:::i;:::-;8648:35;8705:1;8702;8698:9;8693:14;;8528:185;;;;:::o;8719:191::-;8759:3;8778:20;8796:1;8778:20;:::i;:::-;8773:25;;8812:20;8830:1;8812:20;:::i;:::-;8807:25;;8855:1;8852;8848:9;8841:16;;8876:3;8873:1;8870:10;8867:36;;;8883:18;;:::i;:::-;8867:36;8719:191;;;;:::o;8916:174::-;9056:26;9052:1;9044:6;9040:14;9033:50;8916:174;:::o;9096:366::-;9238:3;9259:67;9323:2;9318:3;9259:67;:::i;:::-;9252:74;;9335:93;9424:3;9335:93;:::i;:::-;9453:2;9448:3;9444:12;9437:19;;9096:366;;;:::o;9468:419::-;9634:4;9672:2;9661:9;9657:18;9649:26;;9721:9;9715:4;9711:20;9707:1;9696:9;9692:17;9685:47;9749:131;9875:4;9749:131;:::i;:::-;9741:139;;9468:419;;;:::o;9893:332::-;10014:4;10052:2;10041:9;10037:18;10029:26;;10065:71;10133:1;10122:9;10118:17;10109:6;10065:71;:::i;:::-;10146:72;10214:2;10203:9;10199:18;10190:6;10146:72;:::i;:::-;9893:332;;;;;:::o;10231:143::-;10288:5;10319:6;10313:13;10304:22;;10335:33;10362:5;10335:33;:::i;:::-;10231:143;;;;:::o;10380:351::-;10450:6;10499:2;10487:9;10478:7;10474:23;10470:32;10467:119;;;10505:79;;:::i;:::-;10467:119;10625:1;10650:64;10706:7;10697:6;10686:9;10682:22;10650:64;:::i;:::-;10640:74;;10596:128;10380:351;;;;:::o;10737:181::-;10877:33;10873:1;10865:6;10861:14;10854:57;10737:181;:::o;10924:366::-;11066:3;11087:67;11151:2;11146:3;11087:67;:::i;:::-;11080:74;;11163:93;11252:3;11163:93;:::i;:::-;11281:2;11276:3;11272:12;11265:19;;10924:366;;;:::o;11296:419::-;11462:4;11500:2;11489:9;11485:18;11477:26;;11549:9;11543:4;11539:20;11535:1;11524:9;11520:17;11513:47;11577:131;11703:4;11577:131;:::i;:::-;11569:139;;11296:419;;;:::o;11721:194::-;11761:4;11781:20;11799:1;11781:20;:::i;:::-;11776:25;;11815:20;11833:1;11815:20;:::i;:::-;11810:25;;11859:1;11856;11852:9;11844:17;;11883:1;11877:4;11874:11;11871:37;;;11888:18;;:::i;:::-;11871:37;11721:194;;;;:::o;11921:90::-;11955:7;11998:5;11991:13;11984:21;11973:32;;11921:90;;;:::o;12017:109::-;12098:21;12113:5;12098:21;:::i;:::-;12093:3;12086:34;12017:109;;:::o;12132:541::-;12303:4;12341:3;12330:9;12326:19;12318:27;;12355:71;12423:1;12412:9;12408:17;12399:6;12355:71;:::i;:::-;12436:72;12504:2;12493:9;12489:18;12480:6;12436:72;:::i;:::-;12518;12586:2;12575:9;12571:18;12562:6;12518:72;:::i;:::-;12600:66;12662:2;12651:9;12647:18;12638:6;12600:66;:::i;:::-;12132:541;;;;;;;:::o;12679:165::-;12819:17;12815:1;12807:6;12803:14;12796:41;12679:165;:::o;12850:366::-;12992:3;13013:67;13077:2;13072:3;13013:67;:::i;:::-;13006:74;;13089:93;13178:3;13089:93;:::i;:::-;13207:2;13202:3;13198:12;13191:19;;12850:366;;;:::o;13222:419::-;13388:4;13426:2;13415:9;13411:18;13403:26;;13475:9;13469:4;13465:20;13461:1;13450:9;13446:17;13439:47;13503:131;13629:4;13503:131;:::i;:::-;13495:139;;13222:419;;;:::o;13647:181::-;13787:33;13783:1;13775:6;13771:14;13764:57;13647:181;:::o;13834:366::-;13976:3;13997:67;14061:2;14056:3;13997:67;:::i;:::-;13990:74;;14073:93;14162:3;14073:93;:::i;:::-;14191:2;14186:3;14182:12;14175:19;;13834:366;;;:::o;14206:419::-;14372:4;14410:2;14399:9;14395:18;14387:26;;14459:9;14453:4;14449:20;14445:1;14434:9;14430:17;14423:47;14487:131;14613:4;14487:131;:::i;:::-;14479:139;;14206:419;;;:::o;14631:182::-;14771:34;14767:1;14759:6;14755:14;14748:58;14631:182;:::o;14819:366::-;14961:3;14982:67;15046:2;15041:3;14982:67;:::i;:::-;14975:74;;15058:93;15147:3;15058:93;:::i;:::-;15176:2;15171:3;15167:12;15160:19;;14819:366;;;:::o;15191:419::-;15357:4;15395:2;15384:9;15380:18;15372:26;;15444:9;15438:4;15434:20;15430:1;15419:9;15415:17;15408:47;15472:131;15598:4;15472:131;:::i;:::-;15464:139;;15191:419;;;:::o;15616:221::-;15756:34;15752:1;15744:6;15740:14;15733:58;15825:4;15820:2;15812:6;15808:15;15801:29;15616:221;:::o;15843:366::-;15985:3;16006:67;16070:2;16065:3;16006:67;:::i;:::-;15999:74;;16082:93;16171:3;16082:93;:::i;:::-;16200:2;16195:3;16191:12;16184:19;;15843:366;;;:::o;16215:419::-;16381:4;16419:2;16408:9;16404:18;16396:26;;16468:9;16462:4;16458:20;16454:1;16443:9;16439:17;16432:47;16496:131;16622:4;16496:131;:::i;:::-;16488:139;;16215:419;;;:::o;16640:174::-;16780:26;16776:1;16768:6;16764:14;16757:50;16640:174;:::o;16820:366::-;16962:3;16983:67;17047:2;17042:3;16983:67;:::i;:::-;16976:74;;17059:93;17148:3;17059:93;:::i;:::-;17177:2;17172:3;17168:12;17161:19;;16820:366;;;:::o;17192:419::-;17358:4;17396:2;17385:9;17381:18;17373:26;;17445:9;17439:4;17435:20;17431:1;17420:9;17416:17;17409:47;17473:131;17599:4;17473:131;:::i;:::-;17465:139;;17192:419;;;:::o;17617:173::-;17757:25;17753:1;17745:6;17741:14;17734:49;17617:173;:::o;17796:366::-;17938:3;17959:67;18023:2;18018:3;17959:67;:::i;:::-;17952:74;;18035:93;18124:3;18035:93;:::i;:::-;18153:2;18148:3;18144:12;18137:19;;17796:366;;;:::o;18168:419::-;18334:4;18372:2;18361:9;18357:18;18349:26;;18421:9;18415:4;18411:20;18407:1;18396:9;18392:17;18385:47;18449:131;18575:4;18449:131;:::i;:::-;18441:139;;18168:419;;;:::o;18593:233::-;18632:3;18655:24;18673:5;18655:24;:::i;:::-;18646:33;;18701:66;18694:5;18691:77;18688:103;;18771:18;;:::i;:::-;18688:103;18818:1;18811:5;18807:13;18800:20;;18593:233;;;:::o;18832:553::-;19009:4;19047:3;19036:9;19032:19;19024:27;;19061:71;19129:1;19118:9;19114:17;19105:6;19061:71;:::i;:::-;19142:72;19210:2;19199:9;19195:18;19186:6;19142:72;:::i;:::-;19224;19292:2;19281:9;19277:18;19268:6;19224:72;:::i;:::-;19306;19374:2;19363:9;19359:18;19350:6;19306:72;:::i;:::-;18832:553;;;;;;;:::o;19391:182::-;19531:34;19527:1;19519:6;19515:14;19508:58;19391:182;:::o;19579:366::-;19721:3;19742:67;19806:2;19801:3;19742:67;:::i;:::-;19735:74;;19818:93;19907:3;19818:93;:::i;:::-;19936:2;19931:3;19927:12;19920:19;;19579:366;;;:::o;19951:419::-;20117:4;20155:2;20144:9;20140:18;20132:26;;20204:9;20198:4;20194:20;20190:1;20179:9;20175:17;20168:47;20232:131;20358:4;20232:131;:::i;:::-;20224:139;;19951:419;;;:::o;20376:171::-;20516:23;20512:1;20504:6;20500:14;20493:47;20376:171;:::o;20553:366::-;20695:3;20716:67;20780:2;20775:3;20716:67;:::i;:::-;20709:74;;20792:93;20881:3;20792:93;:::i;:::-;20910:2;20905:3;20901:12;20894:19;;20553:366;;;:::o;20925:419::-;21091:4;21129:2;21118:9;21114:18;21106:26;;21178:9;21172:4;21168:20;21164:1;21153:9;21149:17;21142:47;21206:131;21332:4;21206:131;:::i;:::-;21198:139;;20925:419;;;:::o;21350:171::-;21490:23;21486:1;21478:6;21474:14;21467:47;21350:171;:::o;21527:366::-;21669:3;21690:67;21754:2;21749:3;21690:67;:::i;:::-;21683:74;;21766:93;21855:3;21766:93;:::i;:::-;21884:2;21879:3;21875:12;21868:19;;21527:366;;;:::o;21899:419::-;22065:4;22103:2;22092:9;22088:18;22080:26;;22152:9;22146:4;22142:20;22138:1;22127:9;22123:17;22116:47;22180:131;22306:4;22180:131;:::i;:::-;22172:139;;21899:419;;;:::o;22324:442::-;22473:4;22511:2;22500:9;22496:18;22488:26;;22524:71;22592:1;22581:9;22577:17;22568:6;22524:71;:::i;:::-;22605:72;22673:2;22662:9;22658:18;22649:6;22605:72;:::i;:::-;22687;22755:2;22744:9;22740:18;22731:6;22687:72;:::i;:::-;22324:442;;;;;;:::o;22772:332::-;22893:4;22931:2;22920:9;22916:18;22908:26;;22944:71;23012:1;23001:9;22997:17;22988:6;22944:71;:::i;:::-;23025:72;23093:2;23082:9;23078:18;23069:6;23025:72;:::i;:::-;22772:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1426800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"COMMISSION_PERCENTAGE()": "348",
								"COMMISSION_WALLET()": "2509",
								"MELS_ADDRESS()": "440",
								"addListing(uint256,address,uint256,uint256)": "infinite",
								"buyTokensWithERC20(uint256,uint256,uint256)": "infinite",
								"listingCounter()": "2514",
								"listings(uint256)": "infinite",
								"owner()": "2537",
								"renounceOwnership()": "infinite",
								"setCommissionWallet(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdrawTokensFromListing(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 720,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "FCF8D2B098B3160654BBADA1A8769483C71C288B"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 685,
									"end": 762,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 685,
									"end": 762,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 435,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 435,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 397,
									"end": 435,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 397,
									"end": 435,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 397,
									"end": 435,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 420,
									"end": 430,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 1858,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2061,
									"end": 2068,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2061,
									"end": 2082,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 4164,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b3cc67c450942aad31a55d9e6e8b9bbb96b7a4ce1585b261a2ec64600fa5c39464736f6c634300081c0033",
									".code": [
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "7D60B6CE"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "7D60B6CE"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "9FFAE41B"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "DE74E57B"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "F25713BF"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "17C73FF0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "1BF1DE9B"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "24F56AFA"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "27722E62"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "6C2C9C7D"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 4164,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 685,
											"end": 762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 768,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 768,
											"end": 818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 2170,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2170,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 824,
											"end": 905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 650,
											"end": 679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3987,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3987,
											"end": 4161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1185,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1185,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 601,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 601,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 601,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 3415,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3415,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 685,
											"end": 762,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 685,
											"end": 762,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 768,
											"end": 818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 768,
											"end": 818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2357,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2368,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2323,
											"end": 2368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2386,
											"end": 2400,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2400,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2386,
											"end": 2404,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2378,
											"end": 2431,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2378,
											"end": 2431,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2475,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2468,
											"end": 2486,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2486,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2464,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2486,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2486,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2510,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2557,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2535,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2528,
											"end": 2542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2542,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2557,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2528,
											"end": 2557,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 2520,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 2520,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2649,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2622,
											"end": 2635,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2635,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2622,
											"end": 2649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 2622,
											"end": 2649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2601,
											"end": 2649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 816,
											"end": 818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 2681,
											"end": 2691,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2681,
											"end": 2715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 2681,
											"end": 2715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "76"
										},
										{
											"begin": 2680,
											"end": 2722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 2680,
											"end": 2722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2659,
											"end": 2722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2771,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2761,
											"end": 2784,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 2761,
											"end": 2784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2732,
											"end": 2784,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2819,
											"end": 2837,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2815,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2837,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2794,
											"end": 2866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2794,
											"end": 2866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2895,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 905,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697"
										},
										{
											"begin": 2877,
											"end": 2917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2877,
											"end": 2917,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2988,
											"end": 3001,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 2958,
											"end": 2968,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2978,
											"end": 2982,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 2935,
											"end": 2984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 2935,
											"end": 2984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2935,
											"end": 2984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 3001,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2935,
											"end": 3001,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 2927,
											"end": 3037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 2927,
											"end": 3037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3078,
											"end": 3088,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3090,
											"end": 3107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3109,
											"end": 3119,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3060,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3077,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3048,
											"end": 3077,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3048,
											"end": 3120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3160,
											"end": 3170,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3172,
											"end": 3186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3188,
											"end": 3198,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3142,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3130,
											"end": 3159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3130,
											"end": 3199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3228,
											"end": 3239,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3217,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3210,
											"end": 3224,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3210,
											"end": 3239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 3239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3293,
											"end": 3303,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3305,
											"end": 3316,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3262,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3255,
											"end": 3278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3249,
											"end": 3292,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3249,
											"end": 3292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3249,
											"end": 3317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3370,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DCA20547336C56209D6BCCBFED1076A61D517D52A47986A7086DF1977B10DAF5"
										},
										{
											"begin": 3349,
											"end": 3358,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3383,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3385,
											"end": 3395,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3397,
											"end": 3401,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3333,
											"end": 3402,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3333,
											"end": 3402,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2313,
											"end": 3409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 3409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 863,
											"end": 905,
											"name": "PUSH",
											"source": 12,
											"value": "5FDAF637AED59B2E6D384D9E84D8AC5CF03C6697"
										},
										{
											"begin": 824,
											"end": 905,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 824,
											"end": 905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 679,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 650,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4093,
											"end": 4094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4072,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4081,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4095,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4072,
											"end": 4095,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4072,
											"end": 4095,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4064,
											"end": 4115,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4064,
											"end": 4115,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4145,
											"end": 4154,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4125,
											"end": 4142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4125,
											"end": 4154,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3987,
											"end": 4161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1314,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1311,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1306,
											"end": 1315,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 1298,
											"end": 1351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 1298,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1379,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 1361,
											"end": 1416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 1361,
											"end": 1416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1434,
											"end": 1442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1434,
											"end": 1446,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "124"
										},
										{
											"begin": 1426,
											"end": 1485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 1426,
											"end": 1485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1530,
											"end": 1531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1518,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1503,
											"end": 1532,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 1495,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "tag",
											"source": 12,
											"value": "125"
										},
										{
											"begin": 1495,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1608,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1572,
											"end": 1608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1641,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1641,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1641,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 1626,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1626,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1678,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1618,
											"end": 1706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1618,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1740,
											"end": 1750,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1760,
											"end": 1764,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1722,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1739,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1739,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 1717,
											"end": 1739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1717,
											"end": 1774,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1799,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1785,
											"end": 1799,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1785,
											"end": 1801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1892,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1918,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 1978,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2030,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2019,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2004,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 2004,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1838,
											"end": 2041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1819,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1834,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1820,
											"end": 1834,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 1835,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 2041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2096,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "C8636A22D2315A33DE4785339601BB7299EBC1E02CF0D9F22776C7692EE3803B"
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2145,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 2130,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 2130,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 2057,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2057,
											"end": 2157,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 1288,
											"end": 2164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1185,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 601,
											"end": 644,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 601,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2500,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2500,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2500,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3501,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3545,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3527,
											"end": 3546,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3501,
											"end": 3546,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3578,
											"end": 3592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3574,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 3592,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 3556,
											"end": 3629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 3556,
											"end": 3629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3672,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3683,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3665,
											"end": 3683,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3662,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 3647,
											"end": 3683,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 3639,
											"end": 3709,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 3639,
											"end": 3709,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3744,
											"end": 3745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3727,
											"end": 3741,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3741,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3745,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 3719,
											"end": 3771,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 3719,
											"end": 3771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3821,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3814,
											"end": 3828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3814,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3828,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3782,
											"end": 3828,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3852,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3838,
											"end": 3852,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3856,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3856,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3887,
											"end": 3910,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3911,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3867,
											"end": 3911,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 3940,
											"end": 3950,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 3952,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3926,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3939,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3921,
											"end": 3939,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 3921,
											"end": 3974,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3491,
											"end": 3981,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2542,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2542,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2542,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3415,
											"end": 3981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2575,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2720,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2743,
											"end": 2773,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2698,
											"end": 2784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1899,
											"end": 1900,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2858,
											"end": 2875,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2888,
											"end": 3096,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3068,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7766,
											"end": 7784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 7936,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7929,
											"end": 7930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7922,
											"end": 7926,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7916,
											"end": 7927,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7903,
											"end": 7907,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7896,
											"end": 7897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7889,
											"end": 7894,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 7877,
											"end": 7937,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 7989,
											"end": 7996,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8027,
											"end": 8038,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8078,
											"end": 8094,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8070,
											"end": 8073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8055,
											"end": 8095,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8124,
											"end": 8140,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7979,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8182,
											"end": 8198,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8232,
											"end": 8233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8234,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8211,
											"end": 8234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7848,
											"end": 8244,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8273,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8325,
											"end": 8326,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8310,
											"end": 8321,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8306,
											"end": 8307,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8284,
											"end": 8289,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8302,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8276,
											"end": 8307,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 8258,
											"end": 8326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8382,
											"end": 8387,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 8349,
											"end": 8389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8349,
											"end": 8389,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 8254,
											"end": 8400,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7756,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 670,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 593,
											"end": 670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 630,
											"end": 637,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 648,
											"end": 664,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 648,
											"end": 664,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 593,
											"end": 670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 593,
											"end": 670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 593,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 676,
											"end": 794,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 676,
											"end": 794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 781,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 763,
											"end": 787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 763,
											"end": 787,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 758,
											"end": 761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 751,
											"end": 788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 676,
											"end": 794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 676,
											"end": 794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 893,
											"end": 897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 931,
											"end": 933,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 920,
											"end": 929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 916,
											"end": 934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 908,
											"end": 934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 908,
											"end": 934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1010,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 988,
											"end": 994,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 944,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 944,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1109,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 1428,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 1428,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1418,
											"end": 1453,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 1408,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1355,
											"end": 1477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1529,
											"end": 1534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1545,
											"end": 1574,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 1610,
											"end": 1615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 1583,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 1583,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1483,
											"end": 1622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1711,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1727,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1772,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1741,
											"end": 1773,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1857,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 1738,
											"end": 1857,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 1776,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 1776,
											"end": 1855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1855,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 1776,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1857,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 1738,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1896,
											"end": 1897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1921,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1966,
											"end": 1973,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1957,
											"end": 1963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1946,
											"end": 1955,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1942,
											"end": 1964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 1921,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1921,
											"end": 1974,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 1921,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1911,
											"end": 1974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1867,
											"end": 1984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2025,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2049,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2094,
											"end": 2101,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2085,
											"end": 2091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2070,
											"end": 2092,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2049,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2102,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 2049,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2039,
											"end": 2102,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2039,
											"end": 2102,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1994,
											"end": 2112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2151,
											"end": 2153,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 2177,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1628,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2375,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2253,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2344,
											"end": 2349,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 2326,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2326,
											"end": 2350,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 2326,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2316,
											"end": 2351,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 2306,
											"end": 2369,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2365,
											"end": 2366,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2363,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2367,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2369,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 2306,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2427,
											"end": 2432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2472,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2443,
											"end": 2472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 2508,
											"end": 2513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 2481,
											"end": 2514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2481,
											"end": 2514,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 2481,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2381,
											"end": 2520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2622,
											"end": 2631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2620,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2609,
											"end": 2632,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2637,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2721,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 2602,
											"end": 2721,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 2640,
											"end": 2719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 2640,
											"end": 2719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2640,
											"end": 2719,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 2640,
											"end": 2719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2721,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 2602,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2760,
											"end": 2761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3023,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2999,
											"end": 3006,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2995,
											"end": 3018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3027,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 3027,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3027,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3027,
											"end": 3106,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 3027,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 3217,
											"end": 3224,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3208,
											"end": 3214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3193,
											"end": 3215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3172,
											"end": 3225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 3172,
											"end": 3225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3162,
											"end": 3225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3118,
											"end": 3235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3274,
											"end": 3276,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 3345,
											"end": 3352,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3300,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3300,
											"end": 3353,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 3300,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3353,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3353,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3245,
											"end": 3363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3402,
											"end": 3404,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 3473,
											"end": 3480,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3471,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3428,
											"end": 3481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 3428,
											"end": 3481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3481,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3373,
											"end": 3491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3532,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 3601,
											"end": 3608,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3581,
											"end": 3590,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3577,
											"end": 3599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3556,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 3556,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2861,
											"end": 3626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3691,
											"end": 3697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3728,
											"end": 3737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3738,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3711,
											"end": 3743,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3827,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 3708,
											"end": 3827,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3746,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3746,
											"end": 3825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3746,
											"end": 3825,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 3746,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3827,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 3708,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3866,
											"end": 3867,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3891,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3936,
											"end": 3943,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3933,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3925,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3912,
											"end": 3934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3944,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3891,
											"end": 3944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3944,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3891,
											"end": 3944,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3881,
											"end": 3944,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3881,
											"end": 3944,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3954,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3632,
											"end": 3961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4172,
											"end": 4176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 4213,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 4199,
											"end": 4208,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4292,
											"end": 4293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4268,
											"end": 4274,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4224,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4224,
											"end": 4295,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 4224,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 4305,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 4455,
											"end": 4457,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4453,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4440,
											"end": 4458,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4437,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 4387,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4387,
											"end": 4459,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 4387,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 4537,
											"end": 4539,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4526,
											"end": 4535,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4522,
											"end": 4540,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 4469,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4541,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 4469,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4551,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 4619,
											"end": 4622,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4608,
											"end": 4617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4604,
											"end": 4623,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4595,
											"end": 4601,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4551,
											"end": 4624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 4551,
											"end": 4624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4551,
											"end": 4624,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 4551,
											"end": 4624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3967,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4721,
											"end": 4732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4750,
											"end": 4753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4743,
											"end": 4762,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4795,
											"end": 4799,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4786,
											"end": 4800,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4637,
											"end": 4806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4984,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4812,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4952,
											"end": 4976,
											"name": "PUSH",
											"source": 13,
											"value": "4C697374696E6720646F6573206E6F7420657869737400000000000000000000"
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4940,
											"end": 4946,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4936,
											"end": 4950,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4929,
											"end": 4977,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4812,
											"end": 4984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5356,
											"name": "tag",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 4990,
											"end": 5356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5132,
											"end": 5135,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5153,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5217,
											"end": 5219,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 5212,
											"end": 5215,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5153,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 5153,
											"end": 5220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5153,
											"end": 5220,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5153,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5146,
											"end": 5220,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5146,
											"end": 5220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5318,
											"end": 5321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 5229,
											"end": 5322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5322,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 5229,
											"end": 5322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5349,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5342,
											"end": 5345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5338,
											"end": 5350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5350,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5331,
											"end": 5350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5356,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5356,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5356,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4990,
											"end": 5356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5781,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5362,
											"end": 5781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5566,
											"end": 5568,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5551,
											"end": 5569,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 5569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5613,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5605,
											"end": 5625,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5601,
											"end": 5602,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5599,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5586,
											"end": 5603,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5579,
											"end": 5626,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5643,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5643,
											"end": 5774,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 5643,
											"end": 5774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5643,
											"end": 5774,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5643,
											"end": 5774,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5635,
											"end": 5774,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5635,
											"end": 5774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5781,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5362,
											"end": 5781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5956,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 5787,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5927,
											"end": 5948,
											"name": "PUSH",
											"source": 13,
											"value": "4C697374696E6720686173206578706972656400000000000000000000000000"
										},
										{
											"begin": 5923,
											"end": 5924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5956,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5787,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6328,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 5962,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6189,
											"end": 6191,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 6184,
											"end": 6187,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 6125,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6192,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 6125,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6118,
											"end": 6192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6290,
											"end": 6293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6294,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 6201,
											"end": 6294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6294,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 6201,
											"end": 6294,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6321,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6314,
											"end": 6317,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6310,
											"end": 6322,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6322,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6328,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6328,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 6328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6753,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 6334,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6538,
											"end": 6540,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6527,
											"end": 6536,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6523,
											"end": 6541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6541,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6515,
											"end": 6541,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6596,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6577,
											"end": 6597,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6558,
											"end": 6575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6551,
											"end": 6598,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 6615,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6746,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 6615,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6607,
											"end": 6746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6753,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6753,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6753,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6937,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 6759,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 6929,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F75676820746F6B656E7320696E206C697374696E6700000000"
										},
										{
											"begin": 6895,
											"end": 6896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6883,
											"end": 6897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6876,
											"end": 6930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7309,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 6943,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 7165,
											"end": 7168,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 7106,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7106,
											"end": 7173,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 7106,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7173,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7099,
											"end": 7173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7271,
											"end": 7274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 7182,
											"end": 7275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7275,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 7182,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7300,
											"end": 7302,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7295,
											"end": 7298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7291,
											"end": 7303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7309,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7309,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7309,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7734,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 7315,
											"end": 7734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7508,
											"end": 7517,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7504,
											"end": 7522,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7522,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7496,
											"end": 7522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 7577,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7566,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7578,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7552,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7539,
											"end": 7556,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7532,
											"end": 7579,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7596,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7722,
											"end": 7726,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7596,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 7596,
											"end": 7727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7596,
											"end": 7727,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 7596,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7588,
											"end": 7727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7588,
											"end": 7727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7315,
											"end": 7734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7740,
											"end": 7920,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 7740,
											"end": 7920,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7785,
											"end": 7786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7778,
											"end": 7866,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7885,
											"end": 7889,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 7882,
											"end": 7883,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7875,
											"end": 7890,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7909,
											"end": 7913,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7906,
											"end": 7907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7966,
											"end": 7973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 7989,
											"end": 8009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 7989,
											"end": 8009,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7984,
											"end": 8009,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7984,
											"end": 8009,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 8041,
											"end": 8042,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8023,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8043,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 8023,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8018,
											"end": 8043,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8018,
											"end": 8043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8075,
											"end": 8076,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8071,
											"end": 8080,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 8118,
											"end": 8129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8100,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 8100,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8089,
											"end": 8130,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8089,
											"end": 8130,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8279,
											"end": 8280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8266,
											"end": 8281,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8264,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8282,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8240,
											"end": 8241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8233,
											"end": 8242,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8213,
											"end": 8296,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8190,
											"end": 8329,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 8309,
											"end": 8327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 8309,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8329,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 8190,
											"end": 8329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7974,
											"end": 8336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7926,
											"end": 8336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8342,
											"end": 8522,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 8342,
											"end": 8522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8467,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8387,
											"end": 8388,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8380,
											"end": 8468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8487,
											"end": 8491,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8484,
											"end": 8485,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8511,
											"end": 8515,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8508,
											"end": 8509,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8501,
											"end": 8516,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8568,
											"end": 8569,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8585,
											"end": 8605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8603,
											"end": 8604,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8605,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8585,
											"end": 8605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8605,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 8585,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8605,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8580,
											"end": 8605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8637,
											"end": 8638,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8639,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8619,
											"end": 8639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8639,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 8619,
											"end": 8639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8639,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8648,
											"end": 8683,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8648,
											"end": 8683,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 8663,
											"end": 8681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8648,
											"end": 8683,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 8648,
											"end": 8683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8698,
											"end": 8707,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8693,
											"end": 8707,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8693,
											"end": 8707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8759,
											"end": 8762,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8796,
											"end": 8797,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8778,
											"end": 8798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 8778,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8798,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8798,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8830,
											"end": 8831,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 8812,
											"end": 8832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8832,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 8812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8852,
											"end": 8853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8848,
											"end": 8857,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8857,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8873,
											"end": 8874,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8880,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8903,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8903,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 8867,
											"end": 8903,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 8883,
											"end": 8901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8883,
											"end": 8901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8867,
											"end": 8903,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 8867,
											"end": 8903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8719,
											"end": 8910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 9090,
											"name": "tag",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 8916,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9056,
											"end": 9082,
											"name": "PUSH",
											"source": 13,
											"value": "496E636F7272656374207061796D656E7420616D6F756E740000000000000000"
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9040,
											"end": 9054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9083,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 9090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8916,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9462,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 9096,
											"end": 9462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9238,
											"end": 9241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9323,
											"end": 9325,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 9318,
											"end": 9321,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 9259,
											"end": 9326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9259,
											"end": 9326,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 9259,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9252,
											"end": 9326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9252,
											"end": 9326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9424,
											"end": 9427,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9428,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "210"
										},
										{
											"begin": 9335,
											"end": 9428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9335,
											"end": 9428,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 9335,
											"end": 9428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9453,
											"end": 9455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9451,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9096,
											"end": 9462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9887,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 9468,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9634,
											"end": 9638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9672,
											"end": 9674,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9661,
											"end": 9670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9657,
											"end": 9675,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9649,
											"end": 9675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9649,
											"end": 9675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9721,
											"end": 9730,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9715,
											"end": 9719,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9711,
											"end": 9731,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9707,
											"end": 9708,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9705,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9692,
											"end": 9709,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9685,
											"end": 9732,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9875,
											"end": 9879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 9749,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9880,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 9749,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9741,
											"end": 9880,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9741,
											"end": 9880,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9887,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10054,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10041,
											"end": 10050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10037,
											"end": 10055,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10055,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10029,
											"end": 10055,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10133,
											"end": 10134,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10135,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10109,
											"end": 10115,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 10065,
											"end": 10136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 10065,
											"end": 10136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10214,
											"end": 10216,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10203,
											"end": 10212,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10199,
											"end": 10217,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10190,
											"end": 10196,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 10146,
											"end": 10218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10146,
											"end": 10218,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 10146,
											"end": 10218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9893,
											"end": 10225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10288,
											"end": 10293,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10325,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10313,
											"end": 10326,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10304,
											"end": 10326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10362,
											"end": 10367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 10335,
											"end": 10368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10335,
											"end": 10368,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 10335,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10450,
											"end": 10456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10499,
											"end": 10501,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10487,
											"end": 10496,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10478,
											"end": 10485,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10474,
											"end": 10497,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10470,
											"end": 10502,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10467,
											"end": 10586,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10467,
											"end": 10586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10467,
											"end": 10586,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10505,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10505,
											"end": 10584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 10505,
											"end": 10584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10505,
											"end": 10584,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 10505,
											"end": 10584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10467,
											"end": 10586,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 10467,
											"end": 10586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10625,
											"end": 10626,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10650,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10706,
											"end": 10713,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10697,
											"end": 10703,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10686,
											"end": 10695,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10682,
											"end": 10704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10650,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 10650,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10650,
											"end": 10714,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 10650,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10640,
											"end": 10714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10640,
											"end": 10714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10380,
											"end": 10731,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10918,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 10737,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10877,
											"end": 10910,
											"name": "PUSH",
											"source": 13,
											"value": "5061796D656E7420746F6B656E20616C6C6F77616E636520746F6F206C6F7700"
										},
										{
											"begin": 10873,
											"end": 10874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10865,
											"end": 10871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10861,
											"end": 10875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10854,
											"end": 10911,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10737,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11066,
											"end": 11069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11151,
											"end": 11153,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 11146,
											"end": 11149,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 11087,
											"end": 11154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 11087,
											"end": 11154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11080,
											"end": 11154,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11080,
											"end": 11154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11252,
											"end": 11255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 11163,
											"end": 11256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 11163,
											"end": 11256,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11281,
											"end": 11283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11276,
											"end": 11279,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11272,
											"end": 11284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11265,
											"end": 11284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11265,
											"end": 11284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10924,
											"end": 11290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11462,
											"end": 11466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11500,
											"end": 11502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11489,
											"end": 11498,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11485,
											"end": 11503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11477,
											"end": 11503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11549,
											"end": 11558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11543,
											"end": 11547,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11539,
											"end": 11559,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11535,
											"end": 11536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11524,
											"end": 11533,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11520,
											"end": 11537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 11703,
											"end": 11707,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 11577,
											"end": 11708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 11577,
											"end": 11708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11569,
											"end": 11708,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11569,
											"end": 11708,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11715,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11296,
											"end": 11715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11761,
											"end": 11765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11781,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11799,
											"end": 11800,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11801,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 11781,
											"end": 11801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11801,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11781,
											"end": 11801,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11801,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11776,
											"end": 11801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 11833,
											"end": 11834,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 11815,
											"end": 11835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 11815,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11810,
											"end": 11835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11859,
											"end": 11860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11856,
											"end": 11857,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11852,
											"end": 11861,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11844,
											"end": 11861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11883,
											"end": 11884,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11877,
											"end": 11881,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11874,
											"end": 11885,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11871,
											"end": 11908,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11871,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11871,
											"end": 11908,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11888,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 11888,
											"end": 11906,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 11888,
											"end": 11906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11888,
											"end": 11906,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 11888,
											"end": 11906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11871,
											"end": 11908,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 11871,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11721,
											"end": 11915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12011,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 11921,
											"end": 12011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11955,
											"end": 11962,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12003,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11991,
											"end": 12004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11984,
											"end": 12005,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11973,
											"end": 12005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11921,
											"end": 12011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12017,
											"end": 12126,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 12017,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12098,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12113,
											"end": 12118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12098,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 12098,
											"end": 12119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12098,
											"end": 12119,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 12098,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12093,
											"end": 12096,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12086,
											"end": 12120,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12017,
											"end": 12126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12017,
											"end": 12126,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12017,
											"end": 12126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12303,
											"end": 12307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12341,
											"end": 12344,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 12330,
											"end": 12339,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12345,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12318,
											"end": 12345,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12355,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 12423,
											"end": 12424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12412,
											"end": 12421,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12408,
											"end": 12425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12399,
											"end": 12405,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 12355,
											"end": 12426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 12355,
											"end": 12426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12355,
											"end": 12426,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 12355,
											"end": 12426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12504,
											"end": 12506,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12493,
											"end": 12502,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12489,
											"end": 12507,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12480,
											"end": 12486,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 12436,
											"end": 12508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12436,
											"end": 12508,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 12436,
											"end": 12508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12518,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12586,
											"end": 12588,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 12575,
											"end": 12584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12571,
											"end": 12589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12562,
											"end": 12568,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 12518,
											"end": 12590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 12518,
											"end": 12590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12518,
											"end": 12590,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 12518,
											"end": 12590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12600,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 12662,
											"end": 12664,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 12651,
											"end": 12660,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12647,
											"end": 12665,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12644,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12600,
											"end": 12666,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 12600,
											"end": 12666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12600,
											"end": 12666,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 12600,
											"end": 12666,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12132,
											"end": 12673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12679,
											"end": 12844,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 12679,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12819,
											"end": 12836,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 12815,
											"end": 12816,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12807,
											"end": 12813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12803,
											"end": 12817,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12796,
											"end": 12837,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12679,
											"end": 12844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12679,
											"end": 12844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 13216,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 12850,
											"end": 13216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12992,
											"end": 12995,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13013,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13077,
											"end": 13079,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 13072,
											"end": 13075,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13080,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 13013,
											"end": 13080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13080,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 13013,
											"end": 13080,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13080,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13089,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 13178,
											"end": 13181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13089,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 13089,
											"end": 13182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13089,
											"end": 13182,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 13089,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13207,
											"end": 13209,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13202,
											"end": 13205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13198,
											"end": 13210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13191,
											"end": 13210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13191,
											"end": 13210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 13216,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 13216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 13216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12850,
											"end": 13216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13641,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 13222,
											"end": 13641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13388,
											"end": 13392,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13426,
											"end": 13428,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13415,
											"end": 13424,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13411,
											"end": 13429,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13403,
											"end": 13429,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13403,
											"end": 13429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13475,
											"end": 13484,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13469,
											"end": 13473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13465,
											"end": 13485,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13461,
											"end": 13462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13450,
											"end": 13459,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13446,
											"end": 13463,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13439,
											"end": 13486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13629,
											"end": 13633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 13503,
											"end": 13634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13503,
											"end": 13634,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 13503,
											"end": 13634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13495,
											"end": 13634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13222,
											"end": 13641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13828,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 13647,
											"end": 13828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13787,
											"end": 13820,
											"name": "PUSH",
											"source": 13,
											"value": "5072696365206D7573742062652067726561746572207468616E207A65726F00"
										},
										{
											"begin": 13783,
											"end": 13784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13775,
											"end": 13781,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 13785,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13764,
											"end": 13821,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13647,
											"end": 13828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 14200,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 13834,
											"end": 14200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13976,
											"end": 13979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13997,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 14061,
											"end": 14063,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14056,
											"end": 14059,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13997,
											"end": 14064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 13997,
											"end": 14064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13997,
											"end": 14064,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 13997,
											"end": 14064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13990,
											"end": 14064,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13990,
											"end": 14064,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14162,
											"end": 14165,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14166,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 14073,
											"end": 14166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14073,
											"end": 14166,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 14073,
											"end": 14166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14191,
											"end": 14193,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14186,
											"end": 14189,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14182,
											"end": 14194,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14175,
											"end": 14194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14175,
											"end": 14194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 14200,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 14200,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 14200,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13834,
											"end": 14200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14625,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 14206,
											"end": 14625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14372,
											"end": 14376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14410,
											"end": 14412,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14399,
											"end": 14408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14395,
											"end": 14413,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14413,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14387,
											"end": 14413,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14459,
											"end": 14468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14453,
											"end": 14457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14449,
											"end": 14469,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14445,
											"end": 14446,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14443,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14430,
											"end": 14447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14423,
											"end": 14470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14613,
											"end": 14617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 14487,
											"end": 14618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14487,
											"end": 14618,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 14487,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14618,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14479,
											"end": 14618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14625,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14206,
											"end": 14625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14631,
											"end": 14813,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 14631,
											"end": 14813,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14771,
											"end": 14805,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E73206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 14767,
											"end": 14768,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14759,
											"end": 14765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14755,
											"end": 14769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14748,
											"end": 14806,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14631,
											"end": 14813,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14631,
											"end": 14813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 15185,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 14819,
											"end": 15185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14961,
											"end": 14964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14982,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 15046,
											"end": 15048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15041,
											"end": 15044,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 14982,
											"end": 15049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14982,
											"end": 15049,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 14982,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 15049,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 15049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 15147,
											"end": 15150,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 15058,
											"end": 15151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15151,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 15058,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15176,
											"end": 15178,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15171,
											"end": 15174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15167,
											"end": 15179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15179,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15179,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 15185,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 15185,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 15185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14819,
											"end": 15185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15610,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 15191,
											"end": 15610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15357,
											"end": 15361,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15395,
											"end": 15397,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15384,
											"end": 15393,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15380,
											"end": 15398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15372,
											"end": 15398,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15372,
											"end": 15398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15444,
											"end": 15453,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15438,
											"end": 15442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15434,
											"end": 15454,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15430,
											"end": 15431,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15419,
											"end": 15428,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15415,
											"end": 15432,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15455,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15472,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 15598,
											"end": 15602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15472,
											"end": 15603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 15472,
											"end": 15603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15472,
											"end": 15603,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 15472,
											"end": 15603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15464,
											"end": 15603,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15464,
											"end": 15603,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15191,
											"end": 15610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15616,
											"end": 15837,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 15616,
											"end": 15837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15756,
											"end": 15790,
											"name": "PUSH",
											"source": 13,
											"value": "4475726174696F6E206D7573742062652067726561746572207468616E207A65"
										},
										{
											"begin": 15752,
											"end": 15753,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15744,
											"end": 15750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15740,
											"end": 15754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 15791,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15825,
											"end": 15829,
											"name": "PUSH",
											"source": 13,
											"value": "726F000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15820,
											"end": 15822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15812,
											"end": 15818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15808,
											"end": 15823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15801,
											"end": 15830,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15616,
											"end": 15837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15616,
											"end": 15837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 16209,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 15843,
											"end": 16209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15985,
											"end": 15988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16006,
											"end": 16073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 16070,
											"end": 16072,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 16065,
											"end": 16068,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 16006,
											"end": 16073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16073,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 16006,
											"end": 16073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15999,
											"end": 16073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 16171,
											"end": 16174,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 16082,
											"end": 16175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16175,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 16082,
											"end": 16175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16200,
											"end": 16202,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16195,
											"end": 16198,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16191,
											"end": 16203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16184,
											"end": 16203,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16184,
											"end": 16203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 16209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 16209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 16209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15843,
											"end": 16209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16634,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 16215,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16419,
											"end": 16421,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16408,
											"end": 16417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16404,
											"end": 16422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16396,
											"end": 16422,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16396,
											"end": 16422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16468,
											"end": 16477,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16462,
											"end": 16466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16458,
											"end": 16478,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16454,
											"end": 16455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16452,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16439,
											"end": 16456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16432,
											"end": 16479,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16496,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 16622,
											"end": 16626,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16496,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 16496,
											"end": 16627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16496,
											"end": 16627,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 16496,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16488,
											"end": 16627,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16488,
											"end": 16627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16634,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16634,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16215,
											"end": 16634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16814,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 16640,
											"end": 16814,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16780,
											"end": 16806,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420636F6E747261637420616464726573730000000000000000"
										},
										{
											"begin": 16776,
											"end": 16777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16768,
											"end": 16774,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16764,
											"end": 16778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16757,
											"end": 16807,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16814,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16820,
											"end": 17186,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 16820,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16962,
											"end": 16965,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16983,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 17047,
											"end": 17049,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 17042,
											"end": 17045,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16983,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 16983,
											"end": 17050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16983,
											"end": 17050,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 16983,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16976,
											"end": 17050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16976,
											"end": 17050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17059,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 17148,
											"end": 17151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17059,
											"end": 17152,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 17059,
											"end": 17152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17059,
											"end": 17152,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 17059,
											"end": 17152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17179,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17172,
											"end": 17175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17168,
											"end": 17180,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17161,
											"end": 17180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16820,
											"end": 17186,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16820,
											"end": 17186,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16820,
											"end": 17186,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16820,
											"end": 17186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17192,
											"end": 17611,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 17192,
											"end": 17611,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17358,
											"end": 17362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17396,
											"end": 17398,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17385,
											"end": 17394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17373,
											"end": 17399,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17373,
											"end": 17399,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17445,
											"end": 17454,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17439,
											"end": 17443,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17455,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17431,
											"end": 17432,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17420,
											"end": 17429,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17416,
											"end": 17433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17409,
											"end": 17456,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 17599,
											"end": 17603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 17473,
											"end": 17604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17473,
											"end": 17604,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 17473,
											"end": 17604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17465,
											"end": 17604,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17465,
											"end": 17604,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17192,
											"end": 17611,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17192,
											"end": 17611,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17192,
											"end": 17611,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17192,
											"end": 17611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17617,
											"end": 17790,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 17617,
											"end": 17790,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17757,
											"end": 17782,
											"name": "PUSH",
											"source": 13,
											"value": "546F6B656E20616C6C6F77616E636520746F6F206C6F77000000000000000000"
										},
										{
											"begin": 17753,
											"end": 17754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17745,
											"end": 17751,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17741,
											"end": 17755,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17734,
											"end": 17783,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17617,
											"end": 17790,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17617,
											"end": 17790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17796,
											"end": 18162,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 17796,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17938,
											"end": 17941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17959,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 18023,
											"end": 18025,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 18018,
											"end": 18021,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17959,
											"end": 18026,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 17959,
											"end": 18026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17959,
											"end": 18026,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 17959,
											"end": 18026,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17952,
											"end": 18026,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17952,
											"end": 18026,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 18124,
											"end": 18127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 18035,
											"end": 18128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18035,
											"end": 18128,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 18035,
											"end": 18128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18153,
											"end": 18155,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18148,
											"end": 18151,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18144,
											"end": 18156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18137,
											"end": 18156,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18137,
											"end": 18156,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17796,
											"end": 18162,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17796,
											"end": 18162,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17796,
											"end": 18162,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17796,
											"end": 18162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18168,
											"end": 18587,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 18168,
											"end": 18587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18334,
											"end": 18338,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18372,
											"end": 18374,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18361,
											"end": 18370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18357,
											"end": 18375,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18349,
											"end": 18375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18421,
											"end": 18430,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18415,
											"end": 18419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18411,
											"end": 18431,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18407,
											"end": 18408,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18396,
											"end": 18405,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18392,
											"end": 18409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18385,
											"end": 18432,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 18575,
											"end": 18579,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 18449,
											"end": 18580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18449,
											"end": 18580,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 18449,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18441,
											"end": 18580,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18441,
											"end": 18580,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18168,
											"end": 18587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18168,
											"end": 18587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18168,
											"end": 18587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18168,
											"end": 18587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18593,
											"end": 18826,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 18593,
											"end": 18826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18632,
											"end": 18635,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18655,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 18673,
											"end": 18678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 18655,
											"end": 18679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18679,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 18655,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18646,
											"end": 18679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18646,
											"end": 18679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18701,
											"end": 18767,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18694,
											"end": 18699,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18691,
											"end": 18768,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18688,
											"end": 18791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 18688,
											"end": 18791,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 18771,
											"end": 18789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 18771,
											"end": 18789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18688,
											"end": 18791,
											"name": "tag",
											"source": 13,
											"value": "397"
										},
										{
											"begin": 18688,
											"end": 18791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18818,
											"end": 18819,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 18811,
											"end": 18816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18807,
											"end": 18820,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18800,
											"end": 18820,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18800,
											"end": 18820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18593,
											"end": 18826,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18593,
											"end": 18826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18593,
											"end": 18826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18593,
											"end": 18826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19009,
											"end": 19013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19047,
											"end": 19050,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 19036,
											"end": 19045,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19032,
											"end": 19051,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19024,
											"end": 19051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19024,
											"end": 19051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19061,
											"end": 19132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 19129,
											"end": 19130,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19118,
											"end": 19127,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19114,
											"end": 19131,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19105,
											"end": 19111,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19061,
											"end": 19132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 19061,
											"end": 19132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19061,
											"end": 19132,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 19061,
											"end": 19132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 19210,
											"end": 19212,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19199,
											"end": 19208,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19195,
											"end": 19213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19186,
											"end": 19192,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 19142,
											"end": 19214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19142,
											"end": 19214,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 19142,
											"end": 19214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19224,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 19292,
											"end": 19294,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19281,
											"end": 19290,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19277,
											"end": 19295,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19268,
											"end": 19274,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19224,
											"end": 19296,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 19224,
											"end": 19296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19224,
											"end": 19296,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 19224,
											"end": 19296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 19374,
											"end": 19376,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19363,
											"end": 19372,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19359,
											"end": 19377,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19350,
											"end": 19356,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 19306,
											"end": 19378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19306,
											"end": 19378,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 19306,
											"end": 19378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18832,
											"end": 19385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19391,
											"end": 19573,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 19391,
											"end": 19573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19531,
											"end": 19565,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C79206C697374696E672073656C6C65722063616E207769746864726177"
										},
										{
											"begin": 19527,
											"end": 19528,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19519,
											"end": 19525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19515,
											"end": 19529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19508,
											"end": 19566,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19391,
											"end": 19573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19391,
											"end": 19573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19945,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 19579,
											"end": 19945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19721,
											"end": 19724,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19742,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 19806,
											"end": 19808,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19801,
											"end": 19804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 19742,
											"end": 19809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19809,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 19742,
											"end": 19809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19735,
											"end": 19809,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19735,
											"end": 19809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19818,
											"end": 19911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 19907,
											"end": 19910,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19818,
											"end": 19911,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 19818,
											"end": 19911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19818,
											"end": 19911,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 19818,
											"end": 19911,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19936,
											"end": 19938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19931,
											"end": 19934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 19939,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19920,
											"end": 19939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19920,
											"end": 19939,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19945,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19579,
											"end": 19945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 20370,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 19951,
											"end": 20370,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20117,
											"end": 20121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20155,
											"end": 20157,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20144,
											"end": 20153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20140,
											"end": 20158,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20132,
											"end": 20158,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20132,
											"end": 20158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20204,
											"end": 20213,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20198,
											"end": 20202,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20194,
											"end": 20214,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20190,
											"end": 20191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20179,
											"end": 20188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20175,
											"end": 20192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20168,
											"end": 20215,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 20358,
											"end": 20362,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 20232,
											"end": 20363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20232,
											"end": 20363,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 20232,
											"end": 20363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20224,
											"end": 20363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20224,
											"end": 20363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 20370,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 20370,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 20370,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19951,
											"end": 20370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20376,
											"end": 20547,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 20376,
											"end": 20547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20516,
											"end": 20539,
											"name": "PUSH",
											"source": 13,
											"value": "4C697374696E6720686173206E6F7420656E6465640000000000000000000000"
										},
										{
											"begin": 20512,
											"end": 20513,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20504,
											"end": 20510,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20500,
											"end": 20514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20540,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20376,
											"end": 20547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20376,
											"end": 20547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20919,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 20553,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20695,
											"end": 20698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20716,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 20780,
											"end": 20782,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 20775,
											"end": 20778,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20716,
											"end": 20783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 20716,
											"end": 20783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20716,
											"end": 20783,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 20716,
											"end": 20783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20783,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20709,
											"end": 20783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20792,
											"end": 20885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 20881,
											"end": 20884,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20792,
											"end": 20885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 20792,
											"end": 20885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20792,
											"end": 20885,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 20792,
											"end": 20885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20910,
											"end": 20912,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20905,
											"end": 20908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20901,
											"end": 20913,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20894,
											"end": 20913,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20919,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20925,
											"end": 21344,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 20925,
											"end": 21344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21091,
											"end": 21095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21129,
											"end": 21131,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21118,
											"end": 21127,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21114,
											"end": 21132,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21106,
											"end": 21132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21106,
											"end": 21132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21178,
											"end": 21187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21172,
											"end": 21176,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21168,
											"end": 21188,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21164,
											"end": 21165,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21153,
											"end": 21162,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21149,
											"end": 21166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21142,
											"end": 21189,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21206,
											"end": 21337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 21332,
											"end": 21336,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21206,
											"end": 21337,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 21206,
											"end": 21337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21206,
											"end": 21337,
											"name": "tag",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 21206,
											"end": 21337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21198,
											"end": 21337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21198,
											"end": 21337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20925,
											"end": 21344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20925,
											"end": 21344,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20925,
											"end": 21344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20925,
											"end": 21344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21350,
											"end": 21521,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 21350,
											"end": 21521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21490,
											"end": 21513,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F20746F6B656E7320746F2077697468647261770000000000000000000000"
										},
										{
											"begin": 21486,
											"end": 21487,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21478,
											"end": 21484,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21474,
											"end": 21488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21467,
											"end": 21514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21350,
											"end": 21521,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21350,
											"end": 21521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21527,
											"end": 21893,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 21527,
											"end": 21893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21669,
											"end": 21672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21690,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 21754,
											"end": 21756,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 21749,
											"end": 21752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21690,
											"end": 21757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 21690,
											"end": 21757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21690,
											"end": 21757,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 21690,
											"end": 21757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21683,
											"end": 21757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21683,
											"end": 21757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21766,
											"end": 21859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 21855,
											"end": 21858,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21766,
											"end": 21859,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 21766,
											"end": 21859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21766,
											"end": 21859,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 21766,
											"end": 21859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21884,
											"end": 21886,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21879,
											"end": 21882,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21875,
											"end": 21887,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 21887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21868,
											"end": 21887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21527,
											"end": 21893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21527,
											"end": 21893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21527,
											"end": 21893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21527,
											"end": 21893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21899,
											"end": 22318,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 21899,
											"end": 22318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22065,
											"end": 22069,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22103,
											"end": 22105,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22092,
											"end": 22101,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22088,
											"end": 22106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22080,
											"end": 22106,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22080,
											"end": 22106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22152,
											"end": 22161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22146,
											"end": 22150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22142,
											"end": 22162,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22138,
											"end": 22139,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22127,
											"end": 22136,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22123,
											"end": 22140,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22116,
											"end": 22163,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22180,
											"end": 22311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 22306,
											"end": 22310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22180,
											"end": 22311,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 22180,
											"end": 22311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22180,
											"end": 22311,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 22180,
											"end": 22311,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22172,
											"end": 22311,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22172,
											"end": 22311,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21899,
											"end": 22318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21899,
											"end": 22318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21899,
											"end": 22318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21899,
											"end": 22318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22473,
											"end": 22477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22511,
											"end": 22513,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 22500,
											"end": 22509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22496,
											"end": 22514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22488,
											"end": 22514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22488,
											"end": 22514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22524,
											"end": 22595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 22592,
											"end": 22593,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22581,
											"end": 22590,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22577,
											"end": 22594,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22568,
											"end": 22574,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 22524,
											"end": 22595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 22524,
											"end": 22595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22524,
											"end": 22595,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 22524,
											"end": 22595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22605,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 22673,
											"end": 22675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22662,
											"end": 22671,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22658,
											"end": 22676,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22649,
											"end": 22655,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22605,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 22605,
											"end": 22677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22605,
											"end": 22677,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 22605,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22687,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 22755,
											"end": 22757,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22744,
											"end": 22753,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22740,
											"end": 22758,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22731,
											"end": 22737,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 22687,
											"end": 22759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 22687,
											"end": 22759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22687,
											"end": 22759,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 22687,
											"end": 22759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22324,
											"end": 22766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22893,
											"end": 22897,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22931,
											"end": 22933,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22920,
											"end": 22929,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22916,
											"end": 22934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22908,
											"end": 22934,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22908,
											"end": 22934,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22944,
											"end": 23015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 23012,
											"end": 23013,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23001,
											"end": 23010,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22997,
											"end": 23014,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22988,
											"end": 22994,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 22944,
											"end": 23015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 22944,
											"end": 23015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22944,
											"end": 23015,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 22944,
											"end": 23015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23025,
											"end": 23097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 23093,
											"end": 23095,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23082,
											"end": 23091,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23078,
											"end": 23096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23069,
											"end": 23075,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23025,
											"end": 23097,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 23025,
											"end": 23097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23025,
											"end": 23097,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 23025,
											"end": 23097,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22772,
											"end": 23104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/SaleContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"COMMISSION_PERCENTAGE()": "1bf1de9b",
							"COMMISSION_WALLET()": "17c73ff0",
							"MELS_ADDRESS()": "27722e62",
							"addListing(uint256,address,uint256,uint256)": "9ffae41b",
							"buyTokensWithERC20(uint256,uint256,uint256)": "24f56afa",
							"listingCounter()": "6c2c9c7d",
							"listings(uint256)": "de74e57b",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setCommissionWallet(address)": "7d60b6ce",
							"transferOwnership(address)": "f2fde38b",
							"withdrawTokensFromListing(uint256)": "f25713bf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"name\":\"ListingAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"withERC20\",\"type\":\"bool\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMMISSION_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"COMMISSION_WALLET\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MELS_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"addListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"paymentAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokensWithERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"listingCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWallet\",\"type\":\"address\"}],\"name\":\"setCommissionWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"withdrawTokensFromListing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SaleContract.sol\":\"SaleContract\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x4ea01544758fd2c7045961904686bfe232d2220a04ecaa2d6b08dac17827febf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fabe6bef5167ae741dd8c22d7f81d3f9120bd61b290762a2e8f176712567d329\",\"dweb:/ipfs/QmSnEitJ6xmf1SSAUeZozD7Gx7h8bNnX3a1ZBzqeivsvVg\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/SaleContract.sol\":{\"keccak256\":\"0x39a11138807597dc0bbb5c05fdd846a4afec716e0abd22323f44d144460293dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://925b01c40730464373d00b4c8935c40a36f69ca51ef6556d143633bb64db174b\",\"dweb:/ipfs/QmPtufhUwgvp2c1tY4qqWjEQ53bX3pJhdMAju5DKycMBTH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1443,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 8,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1552,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listings",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Listing)1547_storage)"
							},
							{
								"astId": 1554,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "listingCounter",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1557,
								"contract": "contracts/SaleContract.sol:SaleContract",
								"label": "COMMISSION_WALLET",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(Listing)1547_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct SaleContract.Listing)",
								"numberOfBytes": "32",
								"value": "t_struct(Listing)1547_storage"
							},
							"t_struct(Listing)1547_storage": {
								"encoding": "inplace",
								"label": "struct SaleContract.Listing",
								"members": [
									{
										"astId": 1538,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "contractAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1540,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "price",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1542,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "tokens",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1544,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "seller",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									},
									{
										"astId": 1546,
										"contract": "contracts/SaleContract.sol:SaleContract",
										"label": "expiration",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1433,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1432,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1432
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1414,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1513
						],
						"IERC20": [
							967
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1513,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1513,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1513,
								967
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1513
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1514,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1513,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 968,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							374
						],
						"IERC20Errors": [
							279
						],
						"IERC721Errors": [
							327
						]
					},
					"id": 375,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 249,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 254,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 259,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 268,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 273,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 278,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 375,
							"src": "280:1764:4",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 280,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 285,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 290,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 299,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 304,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 309,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 316,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 321,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 326,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 375,
							"src": "2190:2092:4",
							"usedErrors": [
								285,
								290,
								299,
								304,
								309,
								316,
								321,
								326
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 328,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 374,
							"linearizedBaseContracts": [
								374
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 339,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 344,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 349,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 356,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 361,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 366,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 373,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 375,
							"src": "4430:2107:4",
							"usedErrors": [
								339,
								344,
								349,
								356,
								361,
								366,
								373
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"ERC20": [
							889
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 890,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 376,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 378,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 968,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 377,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 994,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 379,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 993,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 1433,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1432,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 890,
							"sourceUnit": 375,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 279,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 386,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1432,
										"src": "1133:7:5"
									},
									"id": 387,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 388,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "1142:6:5"
									},
									"id": 389,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 390,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 993,
										"src": "1150:14:5"
									},
									"id": 391,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 392,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "1166:12:5"
									},
									"id": 393,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 385,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 889,
							"linearizedBaseContracts": [
								889,
								279,
								993,
								967,
								1432
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 396,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 394,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 395,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 402,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 398,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 401,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 399,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 400,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 405,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 407,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 406,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 409,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 889,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 408,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 417,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 418,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 421,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 422,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 424,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 426,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 889,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										980
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 432,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 407,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 431,
												"id": 433,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 429,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 889,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										986
									],
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 441,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 409,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 889,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										992
									],
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 449,
												"id": 451,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 447,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 889,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 459,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 405,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 460,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 889,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										924
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 470,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 472,
													"indexExpression": {
														"id": 471,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 473,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 889,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										934
									],
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													486
												],
												"declarations": [
													{
														"constant": false,
														"id": 486,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 485,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 487,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 491,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 492,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 493,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 490,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 484,
												"id": 497,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 889,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										944
									],
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 509,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 511,
														"indexExpression": {
															"id": 510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 513,
													"indexExpression": {
														"id": 512,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 514,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 889,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										954
									],
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 539,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 526,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 530,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 528,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 534,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 780,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 525,
												"id": 538,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 889,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										966
									],
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 571,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 552,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 554,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1414,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 558,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 551,
												"id": 570,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 549,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 889,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 582,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 583,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 595,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 589,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 588,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 594,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 598,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 611,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 610,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 606,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 604,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 603,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 609,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 575,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 614,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 612,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 889,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 629,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 622,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 630,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																641
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 641,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 666,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 640,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 645,
															"initialValue": {
																"baseExpression": {
																	"id": 642,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 644,
																"indexExpression": {
																	"id": 643,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 646,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 641,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 647,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 656,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 655,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 650,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 622,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 651,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 641,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 652,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 626,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 649,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 249,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 653,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 654,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 665,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 657,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 659,
																			"indexExpression": {
																				"id": 658,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 622,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 660,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 641,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 661,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 626,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 664,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 639,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 635,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 626,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 668,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 669,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 686,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 680,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 397,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 682,
																			"indexExpression": {
																				"id": 681,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 624,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 685,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 679,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 678,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 676,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 674,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 675,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 626,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 677,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 889,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 711,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 710,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 259,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 716,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 720,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 725,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 719,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 889,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 744,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 743,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 254,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 749,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 754,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 758,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 752,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 889,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 773,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 772,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															780,
															840
														],
														"referencedDeclaration": 840,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 889,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 793,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 806,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 801,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 799,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 798,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 804,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 808,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 821,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 816,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 814,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 813,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 819,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 822,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 825,
															"indexExpression": {
																"id": 823,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 783,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 826,
														"indexExpression": {
															"id": 824,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 827,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 787,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 829,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 830,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 789,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 837,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 832,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 783,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 833,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 785,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 834,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 831,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 836,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 889,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "10504:387:5",
										"statements": [
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 856,
												"initialValue": {
													"arguments": [
														{
															"id": 853,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 845,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 852,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 857,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 858,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 862,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "10576:309:5",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "10618:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 864,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "10636:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 865,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 847,
																	"src": "10655:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 874,
															"nodeType": "IfStatement",
															"src": "10632:130:5",
															"trueBody": {
																"id": 873,
																"nodeType": "Block",
																"src": "10662:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 868,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 845,
																					"src": "10714:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 869,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10723:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 870,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10741:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 867,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 268,
																				"src": "10687:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 872,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:5"
																	}
																]
															}
														},
														{
															"id": 884,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 876,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 843,
																				"src": "10812:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 877,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 845,
																				"src": "10819:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 878,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "10828:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 879,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 847,
																					"src": "10847:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 875,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				780,
																				840
																			],
																			"referencedDeclaration": 840,
																			"src": "10803:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 883,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 889,
									"src": "10415:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 890,
							"src": "1106:9787:5",
							"usedErrors": [
								249,
								254,
								259,
								268,
								273,
								278
							],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "105:10789:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						]
					},
					"id": 968,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 891,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 892,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 967,
							"linearizedBaseContracts": [
								967
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 901,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 910,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 967,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 967,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 967,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 944,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 967,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 954,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 951,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 967,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 966,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 967,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 968,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							967
						],
						"IERC20Metadata": [
							993
						]
					},
					"id": 994,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 969,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 994,
							"sourceUnit": 968,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 970,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 973,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 967,
										"src": "306:6:7"
									},
									"id": 974,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 972,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 993,
							"linearizedBaseContracts": [
								993,
								967
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 975,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 977,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 993,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 993,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 992,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 992,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 989,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 993,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 994,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								901,
								910
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"SafeERC20": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 995,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 997,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 968,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 996,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 967,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 999,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1403,
							"sourceUnit": 230,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 998,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1000,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1001,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 1005,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1005,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 1006,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 1014,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1026,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1018,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1029,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1030,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 934,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1031,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1032,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1033,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 1027,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1025,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1016,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1021,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1402,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1042,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1055,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 966,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1057,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1058,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1060,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 1053,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1054,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1051,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1041,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1040,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 967,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1402,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "2548:139:8",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2566:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "2558:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2558:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1082,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2605:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1402",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1402",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2597:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1080,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2597:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2597:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1084,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2612:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1078,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2581:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2587:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "2581:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2581:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2643:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 1089,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "2650:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1090,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1077,
																"src": "2659:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1091,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1073,
																"src": "2674:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2659:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$967",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "2630:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2630:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2630:50:8"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "1812:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2471:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2500:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2493:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "IERC20",
														"nameLocations": [
															"2493:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "2493:6:8"
													},
													"referencedDeclaration": 967,
													"src": "2493:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2515:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2507:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2532:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "2524:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2524:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2492:46:8"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2548:0:8"
									},
									"scope": 1402,
									"src": "2462:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "3453:370:8",
										"statements": [
											{
												"id": 1137,
												"nodeType": "UncheckedBlock",
												"src": "3463:354:8",
												"statements": [
													{
														"assignments": [
															1108
														],
														"declarations": [
															{
																"constant": false,
																"id": 1108,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3495:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 1137,
																"src": "3487:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1107,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3487:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1117,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1113,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3538:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1402",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1402",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3530:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1111,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3530:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3530:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1115,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3545:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1109,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "3514:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3520:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 944,
																"src": "3514:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3514:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3487:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1108,
																"src": "3571:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1119,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "3590:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3571:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1128,
														"nodeType": "IfStatement",
														"src": "3567:160:8",
														"trueBody": {
															"id": 1127,
															"nodeType": "Block",
															"src": "3609:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1122,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1102,
																				"src": "3667:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1123,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1108,
																				"src": "3676:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1124,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1104,
																				"src": "3694:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1121,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1014,
																			"src": "3634:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3634:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1126,
																	"nodeType": "RevertStatement",
																	"src": "3627:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1130,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "3753:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1131,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1102,
																	"src": "3760:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1132,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1108,
																		"src": "3769:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1133,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1104,
																		"src": "3788:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3769:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$967",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1129,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1186,
																"src": "3740:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3740:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1136,
														"nodeType": "ExpressionStatement",
														"src": "3740:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "2693:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3364:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3393:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3386:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "IERC20",
														"nameLocations": [
															"3386:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "3386:6:8"
													},
													"referencedDeclaration": 967,
													"src": "3386:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3408:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3400:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3425:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "3417:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:58:8"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3453:0:8"
									},
									"scope": 1402,
									"src": "3355:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "4477:303:8",
										"statements": [
											{
												"assignments": [
													1151
												],
												"declarations": [
													{
														"constant": false,
														"id": 1151,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4500:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 1185,
														"src": "4487:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1150,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4487:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1160,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1154,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "4530:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4536:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 954,
															"src": "4530:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1156,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "4546:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1157,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "4555:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1158,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4545:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1152,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4515:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4519:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4515:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4515:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4487:75:8"
											},
											{
												"condition": {
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4577:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 1162,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "4602:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1163,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1151,
																"src": "4609:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$967",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1161,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "4578:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4578:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1184,
												"nodeType": "IfStatement",
												"src": "4573:201:8",
												"trueBody": {
													"id": 1183,
													"nodeType": "Block",
													"src": "4624:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1167,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "4658:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1170,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1143,
																					"src": "4680:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$967",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4686:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 954,
																				"src": "4680:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1172,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1145,
																						"src": "4696:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1173,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4705:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1174,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4695:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1168,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4665:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4669:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4665:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4665:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1166,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "4638:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4638:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1177,
															"nodeType": "ExpressionStatement",
															"src": "4638:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1179,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "4743:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1180,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1151,
																		"src": "4750:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$967",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1178,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "4723:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4723:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1182,
															"nodeType": "ExpressionStatement",
															"src": "4723:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "3829:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4409:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4429:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4422:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1141,
														"name": "IERC20",
														"nameLocations": [
															"4422:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "4422:6:8"
													},
													"referencedDeclaration": 967,
													"src": "4422:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4444:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4436:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4436:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4461:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "4453:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4453:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4421:46:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4477:0:8"
									},
									"scope": 1402,
									"src": "4400:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "5227:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1199,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "5241:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5244:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5241:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5249:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5241:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5259:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5241:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5327:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1213,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "5350:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1214,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "5354:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1215,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "5361:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1211,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1190,
																	"src": "5328:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5334:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5328:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5328:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1226,
													"nodeType": "IfStatement",
													"src": "5323:117:8",
													"trueBody": {
														"id": 1225,
														"nodeType": "Block",
														"src": "5368:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1221,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1190,
																					"src": "5422:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5414:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1219,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5414:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5414:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1218,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "5389:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5389:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1224,
																"nodeType": "RevertStatement",
																"src": "5382:47:8"
															}
														]
													}
												},
												"id": 1227,
												"nodeType": "IfStatement",
												"src": "5237:203:8",
												"trueBody": {
													"id": 1210,
													"nodeType": "Block",
													"src": "5262:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1205,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "5289:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1206,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "5296:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1207,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1194,
																		"src": "5300:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1204,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1038,
																	"src": "5276:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5276:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1209,
															"nodeType": "ExpressionStatement",
															"src": "5276:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "4786:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5133:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5165:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5156:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1189,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1188,
														"name": "IERC1363",
														"nameLocations": [
															"5156:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5156:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5156:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5180:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5172:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5192:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5184:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5212:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "5199:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5199:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5155:62:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5227:0:8"
									},
									"scope": 1402,
									"src": "5124:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1275,
										"nodeType": "Block",
										"src": "5965:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1244,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "5979:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5982:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5979:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5987:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5979:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5997:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5979:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6075:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1259,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1235,
																	"src": "6102:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1260,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1237,
																	"src": "6108:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1261,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "6112:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1262,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "6119:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1257,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "6076:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6082:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6076:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6076:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1273,
													"nodeType": "IfStatement",
													"src": "6071:127:8",
													"trueBody": {
														"id": 1272,
														"nodeType": "Block",
														"src": "6126:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1268,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1233,
																					"src": "6180:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6172:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1266,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6172:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6172:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1265,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "6147:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6147:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1271,
																"nodeType": "RevertStatement",
																"src": "6140:47:8"
															}
														]
													}
												},
												"id": 1274,
												"nodeType": "IfStatement",
												"src": "5975:223:8",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "6000:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1250,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "6031:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1251,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "6038:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1252,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "6044:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1253,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "6048:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1249,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "6014:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6014:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "6014:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "5452:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 1276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5807:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5852:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1232,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1231,
														"name": "IERC1363",
														"nameLocations": [
															"5843:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5843:8:8"
													},
													"referencedDeclaration": 229,
													"src": "5843:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5875:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5867:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5897:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5889:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5889:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5917:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5909:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5909:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5945:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "5932:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1240,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5932:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5833:122:8"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5965:0:8"
									},
									"scope": 1402,
									"src": "5798:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1318,
										"nodeType": "Block",
										"src": "6971:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1289,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "6985:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6988:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6985:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6993:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6985:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7003:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6985:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7071:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1303,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "7093:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1304,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "7097:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1305,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "7104:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1301,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1280,
																	"src": "7072:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7078:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7072:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7072:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1316,
													"nodeType": "IfStatement",
													"src": "7067:116:8",
													"trueBody": {
														"id": 1315,
														"nodeType": "Block",
														"src": "7111:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1311,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "7165:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1310,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7157:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1309,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7157:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7157:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1308,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "7132:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7132:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1314,
																"nodeType": "RevertStatement",
																"src": "7125:47:8"
															}
														]
													}
												},
												"id": 1317,
												"nodeType": "IfStatement",
												"src": "6981:202:8",
												"trueBody": {
													"id": 1300,
													"nodeType": "Block",
													"src": "7006:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1295,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "7033:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1296,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "7040:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1297,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1284,
																		"src": "7044:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1294,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "7020:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7020:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1299,
															"nodeType": "ExpressionStatement",
															"src": "7020:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "6210:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6878:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6909:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6900:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 1279,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1278,
														"name": "IERC1363",
														"nameLocations": [
															"6900:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6900:8:8"
													},
													"referencedDeclaration": 229,
													"src": "6900:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6924:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6916:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6916:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6936:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6928:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6928:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6956:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "6943:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6943:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6899:62:8"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6971:0:8"
									},
									"scope": 1402,
									"src": "6869:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "7756:650:8",
										"statements": [
											{
												"assignments": [
													1329
												],
												"declarations": [
													{
														"constant": false,
														"id": 1329,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7774:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "7766:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1328,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1330,
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:18:8"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7802:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1359,
														"src": "7794:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7794:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1333,
												"nodeType": "VariableDeclarationStatement",
												"src": "7794:19:8"
											},
											{
												"AST": {
													"nativeSrc": "7848:396:8",
													"nodeType": "YulBlock",
													"src": "7848:396:8",
													"statements": [
														{
															"nativeSrc": "7862:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7862:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7882:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:8"
																		},
																		"nativeSrc": "7882:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7889:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "7889:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7896:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7896:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7903:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7903:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7909:4:8",
																				"nodeType": "YulLiteral",
																				"src": "7909:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7899:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7899:3:8"
																		},
																		"nativeSrc": "7899:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7899:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7922:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "7922:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7916:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "7916:5:8"
																		},
																		"nativeSrc": "7916:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7916:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7929:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7929:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7932:4:8",
																		"nodeType": "YulLiteral",
																		"src": "7932:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7877:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7877:4:8"
																},
																"nativeSrc": "7877:60:8",
																"nodeType": "YulFunctionCall",
																"src": "7877:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7866:7:8",
																	"nodeType": "YulTypedName",
																	"src": "7866:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7998:157:8",
																"nodeType": "YulBlock",
																"src": "7998:157:8",
																"statements": [
																	{
																		"nativeSrc": "8016:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8016:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8033:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8027:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8027:5:8"
																			},
																			"nativeSrc": "8027:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8027:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8020:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8020:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8070:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8070:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8075:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8075:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8078:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8078:14:8"
																					},
																					"nativeSrc": "8078:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8078:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8055:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8055:14:8"
																			},
																			"nativeSrc": "8055:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8055:40:8"
																		},
																		"nativeSrc": "8055:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8055:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8119:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8119:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8124:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8124:14:8"
																					},
																					"nativeSrc": "8124:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8124:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8112:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8112:6:8"
																			},
																			"nativeSrc": "8112:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8112:29:8"
																		},
																		"nativeSrc": "8112:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8112:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "7989:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "7989:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7982:6:8"
																},
																"nativeSrc": "7982:15:8",
																"nodeType": "YulFunctionCall",
																"src": "7982:15:8"
															},
															"nativeSrc": "7979:176:8",
															"nodeType": "YulIf",
															"src": "7979:176:8"
														},
														{
															"nativeSrc": "8168:30:8",
															"nodeType": "YulAssignment",
															"src": "8168:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8182:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8182:14:8"
																},
																"nativeSrc": "8182:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8182:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8168:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8168:10:8"
																}
															]
														},
														{
															"nativeSrc": "8211:23:8",
															"nodeType": "YulAssignment",
															"src": "8211:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8232:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8232:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8226:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8226:5:8"
																},
																"nativeSrc": "8226:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8226:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8211:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8211:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "7903:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1325,
														"isOffset": false,
														"isSlot": false,
														"src": "7922:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1329,
														"isOffset": false,
														"isSlot": false,
														"src": "8168:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1323,
														"isOffset": false,
														"isSlot": false,
														"src": "7889:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1334,
												"nodeType": "InlineAssembly",
												"src": "7823:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1335,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1329,
															"src": "8258:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8272:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8258:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1346,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "8310:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8325:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8310:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8258:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1340,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "8284:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$967",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8276:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8276:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8276:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8291:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8276:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8296:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8276:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8306:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8276:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1358,
												"nodeType": "IfStatement",
												"src": "8254:146:8",
												"trueBody": {
													"id": 1357,
													"nodeType": "Block",
													"src": "8328:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1353,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1323,
																				"src": "8382:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$967",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8374:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8374:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8374:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1350,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "8349:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8349:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1356,
															"nodeType": "RevertStatement",
															"src": "8342:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "7195:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7695:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7722:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "7715:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1322,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1321,
														"name": "IERC20",
														"nameLocations": [
															"7715:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "7715:6:8"
													},
													"referencedDeclaration": 967,
													"src": "7715:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7742:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "7729:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7729:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7714:33:8"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7756:0:8"
									},
									"scope": 1402,
									"src": "7686:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "8997:391:8",
										"statements": [
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9012:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9007:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1371,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9007:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"nodeType": "VariableDeclarationStatement",
												"src": "9007:12:8"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9037:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9029:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9029:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1376,
												"nodeType": "VariableDeclarationStatement",
												"src": "9029:18:8"
											},
											{
												"assignments": [
													1378
												],
												"declarations": [
													{
														"constant": false,
														"id": 1378,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9065:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1400,
														"src": "9057:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9057:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"nodeType": "VariableDeclarationStatement",
												"src": "9057:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9111:174:8",
													"nodeType": "YulBlock",
													"src": "9111:174:8",
													"statements": [
														{
															"nativeSrc": "9125:71:8",
															"nodeType": "YulAssignment",
															"src": "9125:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9141:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9141:3:8"
																		},
																		"nativeSrc": "9141:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9141:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9148:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9155:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9162:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9162:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9168:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9168:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9158:3:8"
																		},
																		"nativeSrc": "9158:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9158:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9181:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9181:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9175:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9175:5:8"
																		},
																		"nativeSrc": "9175:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9188:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9188:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9191:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9191:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9136:4:8"
																},
																"nativeSrc": "9136:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9136:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9125:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9125:7:8"
																}
															]
														},
														{
															"nativeSrc": "9209:30:8",
															"nodeType": "YulAssignment",
															"src": "9209:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9223:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9223:14:8"
																},
																"nativeSrc": "9223:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9223:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9209:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9209:10:8"
																}
															]
														},
														{
															"nativeSrc": "9252:23:8",
															"nodeType": "YulAssignment",
															"src": "9252:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9273:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9273:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9267:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9267:5:8"
																},
																"nativeSrc": "9267:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9267:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9252:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9252:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1366,
														"isOffset": false,
														"isSlot": false,
														"src": "9162:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1366,
														"isOffset": false,
														"isSlot": false,
														"src": "9181:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1375,
														"isOffset": false,
														"isSlot": false,
														"src": "9209:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1378,
														"isOffset": false,
														"isSlot": false,
														"src": "9252:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1372,
														"isOffset": false,
														"isSlot": false,
														"src": "9125:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "9148:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1380,
												"nodeType": "InlineAssembly",
												"src": "9086:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1381,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1372,
														"src": "9301:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1382,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "9313:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9327:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9313:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1393,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1378,
																		"src": "9364:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9364:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9313:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1387,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1364,
																						"src": "9339:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$967",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9331:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1385,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9331:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1388,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9331:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9346:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9331:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9351:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9331:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1391,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9360:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9331:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1397,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9312:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9301:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1399,
												"nodeType": "Return",
												"src": "9294:87:8"
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "8412:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8917:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8948:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8941:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$967",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1363,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1362,
														"name": "IERC20",
														"nameLocations": [
															"8941:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 967,
														"src": "8941:6:8"
													},
													"referencedDeclaration": 967,
													"src": "8941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$967",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8968:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8955:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8955:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8940:33:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "8991:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8991:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8990:6:8"
									},
									"scope": 1402,
									"src": "8908:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1403,
							"src": "698:8692:8",
							"usedErrors": [
								1005,
								1014
							],
							"usedEvents": []
						}
					],
					"src": "115:9276:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1432
						]
					},
					"id": 1433,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1432,
							"linearizedBaseContracts": [
								1432
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1410,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1412,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1432,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1419,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1421,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1432,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1430,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1427,
												"id": 1429,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1432,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1433,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1501
						]
					},
					"id": 1502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1434,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1435,
								"nodeType": "StructuredDocumentation",
								"src": "135:894:10",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1501,
							"linearizedBaseContracts": [
								1501
							],
							"name": "ReentrancyGuard",
							"nameLocation": "1048:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1438,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1843:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1501,
									"src": "1818:40:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1436,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1818:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1437,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1857:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1441,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1889:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1501,
									"src": "1864:36:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1439,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1864:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1440,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1899:1:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1443,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1923:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1501,
									"src": "1907:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1442,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1907:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "1937:52:10",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 1446,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "2000:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:10"
									},
									"src": "1994:37:10"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "2051:38:10",
										"statements": [
											{
												"expression": {
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1449,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "2061:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1450,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "2071:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2061:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1452,
												"nodeType": "ExpressionStatement",
												"src": "2061:21:10"
											}
										]
									},
									"id": 1454,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:10"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2051:0:10"
									},
									"scope": 1501,
									"src": "2037:52:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "2490:79:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1457,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1481,
														"src": "2500:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2500:21:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1459,
												"nodeType": "ExpressionStatement",
												"src": "2500:21:10"
											},
											{
												"id": 1460,
												"nodeType": "PlaceholderStatement",
												"src": "2531:1:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1461,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "2542:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2542:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1463,
												"nodeType": "ExpressionStatement",
												"src": "2542:20:10"
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "2095:366:10",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1465,
									"name": "nonReentrant",
									"nameLocation": "2475:12:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2487:2:10"
									},
									"src": "2466:103:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "2614:268:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1468,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "2702:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1469,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "2713:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1475,
												"nodeType": "IfStatement",
												"src": "2698:86:10",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "2722:62:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1471,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "2743:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2743:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1473,
															"nodeType": "RevertStatement",
															"src": "2736:37:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1476,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "2858:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1477,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "2868:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2858:17:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1479,
												"nodeType": "ExpressionStatement",
												"src": "2858:17:10"
											}
										]
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2584:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:10"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:0:10"
									},
									"scope": 1501,
									"src": "2575:307:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "2926:170:10",
										"statements": [
											{
												"expression": {
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1484,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "3068:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1485,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "3078:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3068:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1487,
												"nodeType": "ExpressionStatement",
												"src": "3068:21:10"
											}
										]
									},
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2897:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2915:2:10"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2926:0:10"
									},
									"scope": 1501,
									"src": "2888:208:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "3339:42:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1495,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1443,
														"src": "3356:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1496,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1441,
														"src": "3367:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3356:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1494,
												"id": 1498,
												"nodeType": "Return",
												"src": "3349:25:10"
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "3102:168:10",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3284:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:2:10"
									},
									"returnParameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3333:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1492,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3333:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:6:10"
									},
									"scope": 1501,
									"src": "3275:106:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1502,
							"src": "1030:2353:10",
							"usedErrors": [
								1446
							],
							"usedEvents": []
						}
					],
					"src": "109:3275:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1513
						]
					},
					"id": 1514,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1503,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1504,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1513,
							"linearizedBaseContracts": [
								1513
							],
							"name": "IERC165",
							"nameLocation": "432:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "818:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1506,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:11"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1512,
												"src": "861:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:11"
									},
									"scope": 1513,
									"src": "791:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1514,
							"src": "422:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:11"
				},
				"id": 11
			},
			"contracts/SaleContract.sol": {
				"ast": {
					"absolutePath": "contracts/SaleContract.sol",
					"exportedSymbols": {
						"Context": [
							1432
						],
						"ERC20": [
							889
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							967
						],
						"IERC20Errors": [
							279
						],
						"IERC20Metadata": [
							993
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							1501
						],
						"SafeERC20": [
							1402
						],
						"SaleContract": [
							1928
						]
					},
					"id": 1929,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1515,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 890,
							"src": "58:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 1403,
							"src": "114:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
							"id": 1518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 1502,
							"src": "180:59:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1929,
							"sourceUnit": 148,
							"src": "240:67:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1519,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "248:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1521,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"334:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1501,
										"src": "334:15:12"
									},
									"id": 1522,
									"nodeType": "InheritanceSpecifier",
									"src": "334:15:12"
								},
								{
									"baseName": {
										"id": 1523,
										"name": "Ownable",
										"nameLocations": [
											"351:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "351:7:12"
									},
									"id": 1524,
									"nodeType": "InheritanceSpecifier",
									"src": "351:7:12"
								}
							],
							"canonicalName": "SaleContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1928,
							"linearizedBaseContracts": [
								1928,
								147,
								1432,
								1501
							],
							"name": "SaleContract",
							"nameLocation": "318:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1528,
									"libraryName": {
										"id": 1525,
										"name": "SafeERC20",
										"nameLocations": [
											"371:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "371:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "365:26:12",
									"typeName": {
										"id": 1527,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1526,
											"name": "ERC20",
											"nameLocations": [
												"385:5:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 889,
											"src": "385:5:12"
										},
										"referencedDeclaration": 889,
										"src": "385:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$889",
											"typeString": "contract ERC20"
										}
									}
								},
								{
									"body": {
										"id": 1535,
										"nodeType": "Block",
										"src": "432:3:12",
										"statements": []
									},
									"id": 1536,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1531,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "420:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "424:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "420:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1533,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1530,
												"name": "Ownable",
												"nameLocations": [
													"412:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "412:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "412:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "409:2:12"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:0:12"
									},
									"scope": 1928,
									"src": "397:38:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "SaleContract.Listing",
									"id": 1547,
									"members": [
										{
											"constant": false,
											"id": 1538,
											"mutability": "mutable",
											"name": "contractAddress",
											"nameLocation": "474:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "466:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1537,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "466:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1540,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "507:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "499:13:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1539,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "499:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1542,
											"mutability": "mutable",
											"name": "tokens",
											"nameLocation": "530:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "522:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "522:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1544,
											"mutability": "mutable",
											"name": "seller",
											"nameLocation": "554:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "546:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1543,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "546:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1546,
											"mutability": "mutable",
											"name": "expiration",
											"nameLocation": "578:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 1547,
											"src": "570:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1545,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "570:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Listing",
									"nameLocation": "448:7:12",
									"nodeType": "StructDefinition",
									"scope": 1928,
									"src": "441:154:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "de74e57b",
									"id": 1552,
									"mutability": "mutable",
									"name": "listings",
									"nameLocation": "636:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "601:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1547_storage_$",
										"typeString": "mapping(uint256 => struct SaleContract.Listing)"
									},
									"typeName": {
										"id": 1551,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1548,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "609:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "601:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1547_storage_$",
											"typeString": "mapping(uint256 => struct SaleContract.Listing)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1550,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1549,
												"name": "Listing",
												"nameLocations": [
													"620:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1547,
												"src": "620:7:12"
											},
											"referencedDeclaration": 1547,
											"src": "620:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
												"typeString": "struct SaleContract.Listing"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6c2c9c7d",
									"id": 1554,
									"mutability": "mutable",
									"name": "listingCounter",
									"nameLocation": "665:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "650:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1553,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "650:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17c73ff0",
									"id": 1557,
									"mutability": "mutable",
									"name": "COMMISSION_WALLET",
									"nameLocation": "700:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "685:77:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1555,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "685:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307846434638643262303938423331363036353462626144613161383736393438336337314332383862",
										"id": 1556,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "720:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xFCF8d2b098B3160654bbaDa1a8769483c71C288b"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "1bf1de9b",
									"id": 1560,
									"mutability": "constant",
									"name": "COMMISSION_PERCENTAGE",
									"nameLocation": "792:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "768:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1558,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "768:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1559,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "816:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "27722e62",
									"id": 1563,
									"mutability": "constant",
									"name": "MELS_ADDRESS",
									"nameLocation": "848:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1928,
									"src": "824:81:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1561,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307835464441463633374165643539423265366433383464396538344438616335634630336336363937",
										"id": 1562,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "863:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x5FDAF637Aed59B2e6d384d9e84D8ac5cF03c6697"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "c8636a22d2315a33de4785339601bb7299ebc1e02cf0d9f22776c7692ee3803b",
									"id": 1577,
									"name": "ListingAdded",
									"nameLocation": "918:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "939:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "931:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1567,
												"indexed": true,
												"mutability": "mutable",
												"name": "seller",
												"nameLocation": "966:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "950:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"indexed": true,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "990:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "974:31:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1571,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1015:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1007:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1030:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1022:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1575,
												"indexed": false,
												"mutability": "mutable",
												"name": "expiration",
												"nameLocation": "1046:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "1038:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:127:12"
									},
									"src": "912:146:12"
								},
								{
									"anonymous": false,
									"eventSelector": "dca20547336c56209d6bccbfed1076a61d517d52a47986a7086df1977b10daf5",
									"id": 1589,
									"name": "TokensPurchased",
									"nameLocation": "1069:15:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"indexed": false,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "1093:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1085:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1085:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1120:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1104:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1135:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1127:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1585,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1156:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1148:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1587,
												"indexed": false,
												"mutability": "mutable",
												"name": "withERC20",
												"nameLocation": "1168:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "1163:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1163:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1084:94:12"
									},
									"src": "1063:116:12"
								},
								{
									"body": {
										"id": 1697,
										"nodeType": "Block",
										"src": "1288:876:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1601,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "1306:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1314:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1306:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d7573742062652067726561746572207468616e207a65726f",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1317:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															},
															"value": "Price must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e47b80dba3e3bff087af44930a3e1a0b5fb80034194db87f9ae87a93f0935b0",
																"typeString": "literal_string \"Price must be greater than zero\""
															}
														],
														"id": 1600,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1298:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1298:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "1298:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1608,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1369:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1378:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1369:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e73206d7573742062652067726561746572207468616e207a65726f",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1381:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															},
															"value": "Tokens must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d8ada7758967e7cb32a2792e753435bcc46dbf3ae2de5828c8b7775e998d834b",
																"typeString": "literal_string \"Tokens must be greater than zero\""
															}
														],
														"id": 1607,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1361:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1361:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "1361:55:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1615,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "1434:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1445:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1434:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4475726174696f6e206d7573742062652067726561746572207468616e207a65726f",
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1448:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															},
															"value": "Duration must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e40b44d427b12f5fd2087c84be139e829f84e9593bf45c61e90e076cb837ebd",
																"typeString": "literal_string \"Duration must be greater than zero\""
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1426:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "1426:59:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1622,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "1503:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1530:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1522:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1623,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1522:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1522:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1503:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6e74726163742061646472657373",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1534:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															},
															"value": "Invalid contract address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507ceb9ad50b7ff8af2ed24e9e6a678dc04078006ec9e285d7f8757dc6afac68",
																"typeString": "literal_string \"Invalid contract address\""
															}
														],
														"id": 1621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1495:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1495:66:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "1495:66:12"
											},
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "1578:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1697,
														"src": "1572:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$889",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1632,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1631,
																"name": "ERC20",
																"nameLocations": [
																	"1572:5:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "1572:5:12"
															},
															"referencedDeclaration": 889,
															"src": "1572:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"arguments": [
														{
															"id": 1635,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "1592:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1634,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "1586:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$889",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1572:36:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1641,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1642:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1646:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1642:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1645,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1662:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1928",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1928",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1654:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1643,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1654:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1654:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1639,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1633,
																		"src": "1626:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$889",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1640,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1632:9:12",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "1626:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1626:42:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1648,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1672:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1626:52:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 1650,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1680:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															},
															"value": "Token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51432c52ae5ee14cedaeddde2b99f11c97bf21bf3d43a61bafa3e89f1e3d87b6",
																"typeString": "literal_string \"Token allowance too low\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1618:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1618:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "1618:88:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1656,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1740:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1744:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1740:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1660,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1760:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SaleContract_$1928",
																		"typeString": "contract SaleContract"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SaleContract_$1928",
																		"typeString": "contract SaleContract"
																	}
																],
																"id": 1659,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1752:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1658,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1752:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1752:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1662,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "1767:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1653,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1633,
															"src": "1717:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1723:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "1717:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:57:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "1717:57:12"
											},
											{
												"expression": {
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1785:16:12",
													"subExpression": {
														"id": 1665,
														"name": "listingCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "1785:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "1785:16:12"
											},
											{
												"expression": {
													"id": 1682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1668,
															"name": "listings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1552,
															"src": "1811:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1547_storage_$",
																"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
															}
														},
														"id": 1670,
														"indexExpression": {
															"id": 1669,
															"name": "listingCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "1820:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1811:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1547_storage",
															"typeString": "struct SaleContract.Listing storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1672,
																"name": "contractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1593,
																"src": "1877:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1673,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "1913:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1674,
																"name": "tokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "1940:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 1675,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1968:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1972:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1968:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1677,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2004:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2010:9:12",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2004:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1679,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "2022:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2004:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1671,
															"name": "Listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1547,
															"src": "1838:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Listing_$1547_storage_ptr_$",
																"typeString": "type(struct SaleContract.Listing storage pointer)"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1860:15:12",
															"1906:5:12",
															"1932:6:12",
															"1960:6:12",
															"1992:10:12"
														],
														"names": [
															"contractAddress",
															"price",
															"tokens",
															"seller",
															"expiration"
														],
														"nodeType": "FunctionCall",
														"src": "1838:203:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1547_memory_ptr",
															"typeString": "struct SaleContract.Listing memory"
														}
													},
													"src": "1811:230:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1547_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"id": 1683,
												"nodeType": "ExpressionStatement",
												"src": "1811:230:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1685,
															"name": "listingCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "2070:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1686,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2086:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2090:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2086:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1688,
															"name": "contractAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "2098:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1689,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "2115:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1690,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "2122:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1691,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2130:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2136:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2130:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1693,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "2148:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2130:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1684,
														"name": "ListingAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1577,
														"src": "2057:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2057:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "EmitStatement",
												"src": "2052:105:12"
											}
										]
									},
									"functionSelector": "9ffae41b",
									"id": 1698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addListing",
									"nameLocation": "1194:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1213:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1205:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "contractAddress",
												"nameLocation": "1228:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1220:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "1253:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1245:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1245:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "1269:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "1261:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:74:12"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1288:0:12"
									},
									"scope": 1928,
									"src": "1185:979:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "2313:1096:12",
										"statements": [
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "2339:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "2323:23:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 1710,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1709,
																"name": "Listing",
																"nameLocations": [
																	"2323:7:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1547,
																"src": "2323:7:12"
															},
															"referencedDeclaration": 1547,
															"src": "2323:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1715,
												"initialValue": {
													"baseExpression": {
														"id": 1712,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "2349:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1547_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 1714,
													"indexExpression": {
														"id": 1713,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "2358:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2349:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1547_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2323:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1717,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "2386:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1718,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2394:6:12",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "2386:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2403:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2386:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720646f6573206e6f74206578697374",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2406:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															},
															"value": "Listing does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bfa55f1715ed40bfaf21f9a42e8fd74cd0754ff5d42912ed010af335a1643e55",
																"typeString": "literal_string \"Listing does not exist\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2378:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2378:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "2378:53:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1725,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2449:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2455:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2449:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1727,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "2468:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2476:10:12",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1546,
																"src": "2468:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2449:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e67206861732065787069726564",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2488:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															},
															"value": "Listing has expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9199e0b39eb4f4c0f88e679daa9d73e5208607a94f8ca4ee1e09135b5fbdb538",
																"typeString": "literal_string \"Listing has expired\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2441:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2441:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "2441:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1734,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "2528:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2536:6:12",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "2528:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1736,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1702,
																"src": "2546:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2528:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820746f6b656e7320696e206c697374696e67",
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2559:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																"typeString": "literal_string \"Not enough tokens in listing\""
															},
															"value": "Not enough tokens in listing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_62b37c9f1e67a2e8f55bdb6c417a4e92a0380b231daedfe22bed9ef7ebc59a95",
																"typeString": "literal_string \"Not enough tokens in listing\""
															}
														],
														"id": 1733,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2520:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2520:70:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1740,
												"nodeType": "ExpressionStatement",
												"src": "2520:70:12"
											},
											{
												"assignments": [
													1742
												],
												"declarations": [
													{
														"constant": false,
														"id": 1742,
														"mutability": "mutable",
														"name": "totalPrice",
														"nameLocation": "2609:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "2601:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2601:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1747,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1743,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "2622:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1744,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2630:5:12",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1540,
														"src": "2622:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1745,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "2638:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2622:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2601:48:12"
											},
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "commission",
														"nameLocation": "2667:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "2659:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1748,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2659:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1750,
																	"name": "totalPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "2681:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1751,
																	"name": "COMMISSION_PERCENTAGE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "2694:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2681:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1753,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2680:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1754,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2719:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "2680:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2659:63:12"
											},
											{
												"assignments": [
													1758
												],
												"declarations": [
													{
														"constant": false,
														"id": 1758,
														"mutability": "mutable",
														"name": "totalPaymentAmount",
														"nameLocation": "2740:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "2732:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1757,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2732:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1762,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1759,
														"name": "totalPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "2761:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1760,
														"name": "commission",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "2774:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2761:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2732:52:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1764,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "2802:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1765,
																"name": "totalPaymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1758,
																"src": "2819:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e636f7272656374207061796d656e7420616d6f756e74",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2839:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															},
															"value": "Incorrect payment amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a16c9573ca62f8c24cb5353727f0f2b66335e340927a39a34715148881a826d",
																"typeString": "literal_string \"Incorrect payment amount\""
															}
														],
														"id": 1763,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1769,
												"nodeType": "ExpressionStatement",
												"src": "2794:72:12"
											},
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "paymentERC20",
														"nameLocation": "2883:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "2877:18:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$889",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1771,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1770,
																"name": "ERC20",
																"nameLocations": [
																	"2877:5:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "2877:5:12"
															},
															"referencedDeclaration": 889,
															"src": "2877:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1776,
												"initialValue": {
													"arguments": [
														{
															"id": 1774,
															"name": "MELS_ADDRESS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "2904:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1773,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "2898:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2898:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$889",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2877:40:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1780,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2958:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2962:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2958:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1784,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2978:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaleContract_$1928",
																					"typeString": "contract SaleContract"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaleContract_$1928",
																					"typeString": "contract SaleContract"
																				}
																			],
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2970:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1782,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2970:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2970:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1778,
																		"name": "paymentERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1772,
																		"src": "2935:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$889",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2948:9:12",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 516,
																	"src": "2935:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2935:49:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1787,
																"name": "paymentAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "2988:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2935:66:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061796d656e7420746f6b656e20616c6c6f77616e636520746f6f206c6f77",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3003:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															},
															"value": "Payment token allowance too low"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8787f8bc149e4842fe1b9b6397ff3c4fdeab380b0b4d13ae1bc1c424e9833131",
																"typeString": "literal_string \"Payment token allowance too low\""
															}
														],
														"id": 1777,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2927:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:110:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "2927:110:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1795,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3078:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1796,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3082:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3078:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1797,
															"name": "COMMISSION_WALLET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1557,
															"src": "3090:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1798,
															"name": "commission",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3109:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1792,
															"name": "paymentERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3048:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3061:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3048:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3048:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1800,
												"nodeType": "ExpressionStatement",
												"src": "3048:72:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1804,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3160:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3164:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3160:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1806,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "3172:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3180:6:12",
															"memberName": "seller",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1544,
															"src": "3172:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1808,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "3188:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1801,
															"name": "paymentERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1772,
															"src": "3130:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1065,
														"src": "3130:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3130:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "ExpressionStatement",
												"src": "3130:69:12"
											},
											{
												"expression": {
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1811,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "3210:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3218:6:12",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1542,
														"src": "3210:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1814,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1702,
														"src": "3228:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3210:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1816,
												"nodeType": "ExpressionStatement",
												"src": "3210:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1822,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3293:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3297:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3293:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1824,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3305:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1818,
																		"name": "listing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1711,
																		"src": "3255:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																			"typeString": "struct SaleContract.Listing storage pointer"
																		}
																	},
																	"id": 1819,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3263:15:12",
																	"memberName": "contractAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1538,
																	"src": "3255:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1817,
																"name": "ERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "3249:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
																	"typeString": "type(contract ERC20)"
																}
															},
															"id": 1820,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3249:30:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3280:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1038,
														"src": "3249:43:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3249:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1826,
												"nodeType": "ExpressionStatement",
												"src": "3249:68:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1828,
															"name": "listingId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1700,
															"src": "3349:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1829,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3360:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3364:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3360:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1831,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1702,
															"src": "3372:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1832,
															"name": "totalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "3385:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3397:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1827,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "3333:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,bool)"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3333:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1835,
												"nodeType": "EmitStatement",
												"src": "3328:74:12"
											}
										]
									},
									"functionSelector": "24f56afa",
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1707,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1706,
												"name": "nonReentrant",
												"nameLocations": [
													"2300:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1465,
												"src": "2300:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2300:12:12"
										}
									],
									"name": "buyTokensWithERC20",
									"nameLocation": "2179:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "2215:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2207:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1702,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2242:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2234:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2234:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "paymentAmount",
												"nameLocation": "2271:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "2263:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2263:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:93:12"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2313:0:12"
									},
									"scope": 1928,
									"src": "2170:1239:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1904,
										"nodeType": "Block",
										"src": "3491:490:12",
										"statements": [
											{
												"assignments": [
													1846
												],
												"declarations": [
													{
														"constant": false,
														"id": 1846,
														"mutability": "mutable",
														"name": "listing",
														"nameLocation": "3517:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "3501:23:12",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
															"typeString": "struct SaleContract.Listing"
														},
														"typeName": {
															"id": 1845,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1844,
																"name": "Listing",
																"nameLocations": [
																	"3501:7:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1547,
																"src": "3501:7:12"
															},
															"referencedDeclaration": 1547,
															"src": "3501:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																"typeString": "struct SaleContract.Listing"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"baseExpression": {
														"id": 1847,
														"name": "listings",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "3527:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Listing_$1547_storage_$",
															"typeString": "mapping(uint256 => struct SaleContract.Listing storage ref)"
														}
													},
													"id": 1849,
													"indexExpression": {
														"id": 1848,
														"name": "listingId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "3536:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3527:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Listing_$1547_storage",
														"typeString": "struct SaleContract.Listing storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3501:45:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1856,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1852,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3564:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3568:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3564:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1854,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "3578:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3586:6:12",
																"memberName": "seller",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1544,
																"src": "3578:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3564:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206c697374696e672073656c6c65722063616e207769746864726177",
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3594:34:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																"typeString": "literal_string \"Only listing seller can withdraw\""
															},
															"value": "Only listing seller can withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d240d14bb24b298aa6e5f7f2a90e9490934b585bc9357e77a63cd562a72c1471",
																"typeString": "literal_string \"Only listing seller can withdraw\""
															}
														],
														"id": 1851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3556:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3556:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1859,
												"nodeType": "ExpressionStatement",
												"src": "3556:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1861,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3647:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3653:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3647:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1863,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "3665:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3673:10:12",
																"memberName": "expiration",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1546,
																"src": "3665:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3647:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c697374696e6720686173206e6f7420656e646564",
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3685:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																"typeString": "literal_string \"Listing has not ended\""
															},
															"value": "Listing has not ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b760547e32e86f64bdbefe084809518f58a3da43a4a56adc482c61c422784fc",
																"typeString": "literal_string \"Listing has not ended\""
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3639:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3639:70:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "3639:70:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1870,
																	"name": "listing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "3727:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																		"typeString": "struct SaleContract.Listing storage pointer"
																	}
																},
																"id": 1871,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3735:6:12",
																"memberName": "tokens",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1542,
																"src": "3727:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3744:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3727:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320746f207769746864726177",
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3747:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															},
															"value": "No tokens to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cc6b3e105e5333edddf04583e651cc3d3f46302c4d3edb1ca282ad53029b8db",
																"typeString": "literal_string \"No tokens to withdraw\""
															}
														],
														"id": 1869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3719:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3719:52:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "3719:52:12"
											},
											{
												"assignments": [
													1878
												],
												"declarations": [
													{
														"constant": false,
														"id": 1878,
														"mutability": "mutable",
														"name": "tokenAmountToWithdraw",
														"nameLocation": "3790:21:12",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "3782:29:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1877,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3782:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1881,
												"initialValue": {
													"expression": {
														"id": 1879,
														"name": "listing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "3814:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
															"typeString": "struct SaleContract.Listing storage pointer"
														}
													},
													"id": 1880,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3822:6:12",
													"memberName": "tokens",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1542,
													"src": "3814:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3782:46:12"
											},
											{
												"expression": {
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1882,
															"name": "listing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1846,
															"src": "3838:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																"typeString": "struct SaleContract.Listing storage pointer"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3846:6:12",
														"memberName": "tokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1542,
														"src": "3838:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3855:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3838:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1887,
												"nodeType": "ExpressionStatement",
												"src": "3838:18:12"
											},
											{
												"assignments": [
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "3873:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1904,
														"src": "3867:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$889",
															"typeString": "contract ERC20"
														},
														"typeName": {
															"id": 1889,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1888,
																"name": "ERC20",
																"nameLocations": [
																	"3867:5:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 889,
																"src": "3867:5:12"
															},
															"referencedDeclaration": 889,
															"src": "3867:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1895,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1892,
																"name": "listing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "3887:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Listing_$1547_storage_ptr",
																	"typeString": "struct SaleContract.Listing storage pointer"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3895:15:12",
															"memberName": "contractAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1538,
															"src": "3887:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1891,
														"name": "ERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "3881:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC20_$889_$",
															"typeString": "type(contract ERC20)"
														}
													},
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3881:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$889",
														"typeString": "contract ERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3867:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1899,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3940:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3944:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3940:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1901,
															"name": "tokenAmountToWithdraw",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "3952:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1896,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1890,
															"src": "3921:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$889",
																"typeString": "contract ERC20"
															}
														},
														"id": 1898,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3927:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1038,
														"src": "3921:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$967_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$967_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3921:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1903,
												"nodeType": "ExpressionStatement",
												"src": "3921:53:12"
											}
										]
									},
									"functionSelector": "f25713bf",
									"id": 1905,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1841,
												"name": "nonReentrant",
												"nameLocations": [
													"3478:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1465,
												"src": "3478:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3478:12:12"
										}
									],
									"name": "withdrawTokensFromListing",
									"nameLocation": "3424:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "listingId",
												"nameLocation": "3458:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1905,
												"src": "3450:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3450:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3449:19:12"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3491:0:12"
									},
									"scope": 1928,
									"src": "3415:566:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "4054:107:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1913,
																"name": "newWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "4072:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4093:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4085:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1914,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4085:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4085:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4072:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4097:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1912,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4064:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4064:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "4064:51:12"
											},
											{
												"expression": {
													"id": 1924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1922,
														"name": "COMMISSION_WALLET",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "4125:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1923,
														"name": "newWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "4145:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4125:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1925,
												"nodeType": "ExpressionStatement",
												"src": "4125:29:12"
											}
										]
									},
									"functionSelector": "7d60b6ce",
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1910,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1909,
												"name": "onlyOwner",
												"nameLocations": [
													"4044:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4044:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4044:9:12"
										}
									],
									"name": "setCommissionWallet",
									"nameLocation": "3996:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "newWallet",
												"nameLocation": "4024:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "4016:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4016:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:19:12"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4054:0:12"
									},
									"scope": 1928,
									"src": "3987:174:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1929,
							"src": "309:3855:12",
							"usedErrors": [
								13,
								18,
								1005,
								1446
							],
							"usedEvents": [
								24,
								1577,
								1589
							]
						}
					],
					"src": "32:4133:12"
				},
				"id": 12
			}
		}
	}
}